/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-client_node_modules_react-owl-carousel_umd_OwlCarousel_js"],{

/***/ "(app-client)/./node_modules/react-owl-carousel/umd/OwlCarousel.js":
/*!************************************************************!*\
  !*** ./node_modules/react-owl-carousel/umd/OwlCarousel.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ \"(app-client)/./node_modules/jquery/dist/jquery.js\");\n/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ \"(app-client)/./node_modules/jquery/dist/jquery.js\");\n(function (global, factory) {\n     true ? module.exports = factory(__webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\")) :\n    0;\n}(this, (function (React) { 'use strict';\n\n    var React__default = 'default' in React ? React['default'] : React;\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\n\n    /**\n     * Owl Carousel v2.3.4\n     * Copyright 2013-2018 David Deutsch\n     * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE\n     */\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates a carousel.\n    \t * @class The Owl Carousel.\n    \t * @public\n    \t * @param {HTMLElement|jQuery} element - The element to create the carousel for.\n    \t * @param {Object} [options] - The options\n    \t */\n    \tfunction Owl(element, options) {\n\n    \t\t/**\n    \t\t * Current settings for the carousel.\n    \t\t * @public\n    \t\t */\n    \t\tthis.settings = null;\n\n    \t\t/**\n    \t\t * Current options set by the caller including defaults.\n    \t\t * @public\n    \t\t */\n    \t\tthis.options = $.extend({}, Owl.Defaults, options);\n\n    \t\t/**\n    \t\t * Plugin element.\n    \t\t * @public\n    \t\t */\n    \t\tthis.$element = $(element);\n\n    \t\t/**\n    \t\t * Proxied event handlers.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._handlers = {};\n\n    \t\t/**\n    \t\t * References to the running plugins of this carousel.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._plugins = {};\n\n    \t\t/**\n    \t\t * Currently suppressed events to prevent them from being retriggered.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._supress = {};\n\n    \t\t/**\n    \t\t * Absolute current position.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._current = null;\n\n    \t\t/**\n    \t\t * Animation speed in milliseconds.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._speed = null;\n\n    \t\t/**\n    \t\t * Coordinates of all items in pixel.\n    \t\t * @todo The name of this member is missleading.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._coordinates = [];\n\n    \t\t/**\n    \t\t * Current breakpoint.\n    \t\t * @todo Real media queries would be nice.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._breakpoint = null;\n\n    \t\t/**\n    \t\t * Current width of the plugin element.\n    \t\t */\n    \t\tthis._width = null;\n\n    \t\t/**\n    \t\t * All real items.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._items = [];\n\n    \t\t/**\n    \t\t * All cloned items.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._clones = [];\n\n    \t\t/**\n    \t\t * Merge values of all items.\n    \t\t * @todo Maybe this could be part of a plugin.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._mergers = [];\n\n    \t\t/**\n    \t\t * Widths of all items.\n    \t\t */\n    \t\tthis._widths = [];\n\n    \t\t/**\n    \t\t * Invalidated parts within the update process.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._invalidated = {};\n\n    \t\t/**\n    \t\t * Ordered list of workers for the update process.\n    \t\t * @protected\n    \t\t */\n    \t\tthis._pipe = [];\n\n    \t\t/**\n    \t\t * Current state information for the drag operation.\n    \t\t * @todo #261\n    \t\t * @protected\n    \t\t */\n    \t\tthis._drag = {\n    \t\t\ttime: null,\n    \t\t\ttarget: null,\n    \t\t\tpointer: null,\n    \t\t\tstage: {\n    \t\t\t\tstart: null,\n    \t\t\t\tcurrent: null\n    \t\t\t},\n    \t\t\tdirection: null\n    \t\t};\n\n    \t\t/**\n    \t\t * Current state information and their tags.\n    \t\t * @type {Object}\n    \t\t * @protected\n    \t\t */\n    \t\tthis._states = {\n    \t\t\tcurrent: {},\n    \t\t\ttags: {\n    \t\t\t\t'initializing': [ 'busy' ],\n    \t\t\t\t'animating': [ 'busy' ],\n    \t\t\t\t'dragging': [ 'interacting' ]\n    \t\t\t}\n    \t\t};\n\n    \t\t$.each([ 'onResize', 'onThrottledResize' ], $.proxy(function(i, handler) {\n    \t\t\tthis._handlers[handler] = $.proxy(this[handler], this);\n    \t\t}, this));\n\n    \t\t$.each(Owl.Plugins, $.proxy(function(key, plugin) {\n    \t\t\tthis._plugins[key.charAt(0).toLowerCase() + key.slice(1)]\n    \t\t\t\t= new plugin(this);\n    \t\t}, this));\n\n    \t\t$.each(Owl.Workers, $.proxy(function(priority, worker) {\n    \t\t\tthis._pipe.push({\n    \t\t\t\t'filter': worker.filter,\n    \t\t\t\t'run': $.proxy(worker.run, this)\n    \t\t\t});\n    \t\t}, this));\n\n    \t\tthis.setup();\n    \t\tthis.initialize();\n    \t}\n\n    \t/**\n    \t * Default options for the carousel.\n    \t * @public\n    \t */\n    \tOwl.Defaults = {\n    \t\titems: 3,\n    \t\tloop: false,\n    \t\tcenter: false,\n    \t\trewind: false,\n    \t\tcheckVisibility: true,\n\n    \t\tmouseDrag: true,\n    \t\ttouchDrag: true,\n    \t\tpullDrag: true,\n    \t\tfreeDrag: false,\n\n    \t\tmargin: 0,\n    \t\tstagePadding: 0,\n\n    \t\tmerge: false,\n    \t\tmergeFit: true,\n    \t\tautoWidth: false,\n\n    \t\tstartPosition: 0,\n    \t\trtl: false,\n\n    \t\tsmartSpeed: 250,\n    \t\tfluidSpeed: false,\n    \t\tdragEndSpeed: false,\n\n    \t\tresponsive: {},\n    \t\tresponsiveRefreshRate: 200,\n    \t\tresponsiveBaseElement: window,\n\n    \t\tfallbackEasing: 'swing',\n    \t\tslideTransition: '',\n\n    \t\tinfo: false,\n\n    \t\tnestedItemSelector: false,\n    \t\titemElement: 'div',\n    \t\tstageElement: 'div',\n\n    \t\trefreshClass: 'owl-refresh',\n    \t\tloadedClass: 'owl-loaded',\n    \t\tloadingClass: 'owl-loading',\n    \t\trtlClass: 'owl-rtl',\n    \t\tresponsiveClass: 'owl-responsive',\n    \t\tdragClass: 'owl-drag',\n    \t\titemClass: 'owl-item',\n    \t\tstageClass: 'owl-stage',\n    \t\tstageOuterClass: 'owl-stage-outer',\n    \t\tgrabClass: 'owl-grab'\n    \t};\n\n    \t/**\n    \t * Enumeration for width.\n    \t * @public\n    \t * @readonly\n    \t * @enum {String}\n    \t */\n    \tOwl.Width = {\n    \t\tDefault: 'default',\n    \t\tInner: 'inner',\n    \t\tOuter: 'outer'\n    \t};\n\n    \t/**\n    \t * Enumeration for types.\n    \t * @public\n    \t * @readonly\n    \t * @enum {String}\n    \t */\n    \tOwl.Type = {\n    \t\tEvent: 'event',\n    \t\tState: 'state'\n    \t};\n\n    \t/**\n    \t * Contains all registered plugins.\n    \t * @public\n    \t */\n    \tOwl.Plugins = {};\n\n    \t/**\n    \t * List of workers involved in the update process.\n    \t */\n    \tOwl.Workers = [ {\n    \t\tfilter: [ 'width', 'settings' ],\n    \t\trun: function() {\n    \t\t\tthis._width = this.$element.width();\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function(cache) {\n    \t\t\tcache.current = this._items && this._items[this.relative(this._current)];\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'items', 'settings' ],\n    \t\trun: function() {\n    \t\t\tthis.$stage.children('.cloned').remove();\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function(cache) {\n    \t\t\tvar margin = this.settings.margin || '',\n    \t\t\t\tgrid = !this.settings.autoWidth,\n    \t\t\t\trtl = this.settings.rtl,\n    \t\t\t\tcss = {\n    \t\t\t\t\t'width': 'auto',\n    \t\t\t\t\t'margin-left': rtl ? margin : '',\n    \t\t\t\t\t'margin-right': rtl ? '' : margin\n    \t\t\t\t};\n\n    \t\t\t!grid && this.$stage.children().css(css);\n\n    \t\t\tcache.css = css;\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function(cache) {\n    \t\t\tvar width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,\n    \t\t\t\tmerge = null,\n    \t\t\t\titerator = this._items.length,\n    \t\t\t\tgrid = !this.settings.autoWidth,\n    \t\t\t\twidths = [];\n\n    \t\t\tcache.items = {\n    \t\t\t\tmerge: false,\n    \t\t\t\twidth: width\n    \t\t\t};\n\n    \t\t\twhile (iterator--) {\n    \t\t\t\tmerge = this._mergers[iterator];\n    \t\t\t\tmerge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\n\n    \t\t\t\tcache.items.merge = merge > 1 || cache.items.merge;\n\n    \t\t\t\twidths[iterator] = !grid ? this._items[iterator].width() : width * merge;\n    \t\t\t}\n\n    \t\t\tthis._widths = widths;\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'items', 'settings' ],\n    \t\trun: function() {\n    \t\t\tvar clones = [],\n    \t\t\t\titems = this._items,\n    \t\t\t\tsettings = this.settings,\n    \t\t\t\t// TODO: Should be computed from number of min width items in stage\n    \t\t\t\tview = Math.max(settings.items * 2, 4),\n    \t\t\t\tsize = Math.ceil(items.length / 2) * 2,\n    \t\t\t\trepeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0,\n    \t\t\t\tappend = '',\n    \t\t\t\tprepend = '';\n\n    \t\t\trepeat /= 2;\n\n    \t\t\twhile (repeat > 0) {\n    \t\t\t\t// Switch to only using appended clones\n    \t\t\t\tclones.push(this.normalize(clones.length / 2, true));\n    \t\t\t\tappend = append + items[clones[clones.length - 1]][0].outerHTML;\n    \t\t\t\tclones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\n    \t\t\t\tprepend = items[clones[clones.length - 1]][0].outerHTML + prepend;\n    \t\t\t\trepeat -= 1;\n    \t\t\t}\n\n    \t\t\tthis._clones = clones;\n\n    \t\t\t$(append).addClass('cloned').appendTo(this.$stage);\n    \t\t\t$(prepend).addClass('cloned').prependTo(this.$stage);\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function() {\n    \t\t\tvar rtl = this.settings.rtl ? 1 : -1,\n    \t\t\t\tsize = this._clones.length + this._items.length,\n    \t\t\t\titerator = -1,\n    \t\t\t\tprevious = 0,\n    \t\t\t\tcurrent = 0,\n    \t\t\t\tcoordinates = [];\n\n    \t\t\twhile (++iterator < size) {\n    \t\t\t\tprevious = coordinates[iterator - 1] || 0;\n    \t\t\t\tcurrent = this._widths[this.relative(iterator)] + this.settings.margin;\n    \t\t\t\tcoordinates.push(previous + current * rtl);\n    \t\t\t}\n\n    \t\t\tthis._coordinates = coordinates;\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function() {\n    \t\t\tvar padding = this.settings.stagePadding,\n    \t\t\t\tcoordinates = this._coordinates,\n    \t\t\t\tcss = {\n    \t\t\t\t\t'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\n    \t\t\t\t\t'padding-left': padding || '',\n    \t\t\t\t\t'padding-right': padding || ''\n    \t\t\t\t};\n\n    \t\t\tthis.$stage.css(css);\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function(cache) {\n    \t\t\tvar iterator = this._coordinates.length,\n    \t\t\t\tgrid = !this.settings.autoWidth,\n    \t\t\t\titems = this.$stage.children();\n\n    \t\t\tif (grid && cache.items.merge) {\n    \t\t\t\twhile (iterator--) {\n    \t\t\t\t\tcache.css.width = this._widths[this.relative(iterator)];\n    \t\t\t\t\titems.eq(iterator).css(cache.css);\n    \t\t\t\t}\n    \t\t\t} else if (grid) {\n    \t\t\t\tcache.css.width = cache.items.width;\n    \t\t\t\titems.css(cache.css);\n    \t\t\t}\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'items' ],\n    \t\trun: function() {\n    \t\t\tthis._coordinates.length < 1 && this.$stage.removeAttr('style');\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'items', 'settings' ],\n    \t\trun: function(cache) {\n    \t\t\tcache.current = cache.current ? this.$stage.children().index(cache.current) : 0;\n    \t\t\tcache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));\n    \t\t\tthis.reset(cache.current);\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'position' ],\n    \t\trun: function() {\n    \t\t\tthis.animate(this.coordinates(this._current));\n    \t\t}\n    \t}, {\n    \t\tfilter: [ 'width', 'position', 'items', 'settings' ],\n    \t\trun: function() {\n    \t\t\tvar rtl = this.settings.rtl ? 1 : -1,\n    \t\t\t\tpadding = this.settings.stagePadding * 2,\n    \t\t\t\tbegin = this.coordinates(this.current()) + padding,\n    \t\t\t\tend = begin + this.width() * rtl,\n    \t\t\t\tinner, outer, matches = [], i, n;\n\n    \t\t\tfor (i = 0, n = this._coordinates.length; i < n; i++) {\n    \t\t\t\tinner = this._coordinates[i - 1] || 0;\n    \t\t\t\touter = Math.abs(this._coordinates[i]) + padding * rtl;\n\n    \t\t\t\tif ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))\n    \t\t\t\t\t|| (this.op(outer, '<', begin) && this.op(outer, '>', end))) {\n    \t\t\t\t\tmatches.push(i);\n    \t\t\t\t}\n    \t\t\t}\n\n    \t\t\tthis.$stage.children('.active').removeClass('active');\n    \t\t\tthis.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');\n\n    \t\t\tthis.$stage.children('.center').removeClass('center');\n    \t\t\tif (this.settings.center) {\n    \t\t\t\tthis.$stage.children().eq(this.current()).addClass('center');\n    \t\t\t}\n    \t\t}\n    \t} ];\n\n    \t/**\n    \t * Create the stage DOM element\n    \t */\n    \tOwl.prototype.initializeStage = function() {\n    \t\tthis.$stage = this.$element.find('.' + this.settings.stageClass);\n\n    \t\t// if the stage is already in the DOM, grab it and skip stage initialization\n    \t\tif (this.$stage.length) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis.$element.addClass(this.options.loadingClass);\n\n    \t\t// create stage\n    \t\tthis.$stage = $('<' + this.settings.stageElement + '>', {\n    \t\t\t\"class\": this.settings.stageClass\n    \t\t}).wrap( $( '<div/>', {\n    \t\t\t\"class\": this.settings.stageOuterClass\n    \t\t}));\n\n    \t\t// append stage\n    \t\tthis.$element.append(this.$stage.parent());\n    \t};\n\n    \t/**\n    \t * Create item DOM elements\n    \t */\n    \tOwl.prototype.initializeItems = function() {\n    \t\tvar $items = this.$element.find('.owl-item');\n\n    \t\t// if the items are already in the DOM, grab them and skip item initialization\n    \t\tif ($items.length) {\n    \t\t\tthis._items = $items.get().map(function(item) {\n    \t\t\t\treturn $(item);\n    \t\t\t});\n\n    \t\t\tthis._mergers = this._items.map(function() {\n    \t\t\t\treturn 1;\n    \t\t\t});\n\n    \t\t\tthis.refresh();\n\n    \t\t\treturn;\n    \t\t}\n\n    \t\t// append content\n    \t\tthis.replace(this.$element.children().not(this.$stage.parent()));\n\n    \t\t// check visibility\n    \t\tif (this.isVisible()) {\n    \t\t\t// update view\n    \t\t\tthis.refresh();\n    \t\t} else {\n    \t\t\t// invalidate width\n    \t\t\tthis.invalidate('width');\n    \t\t}\n\n    \t\tthis.$element\n    \t\t\t.removeClass(this.options.loadingClass)\n    \t\t\t.addClass(this.options.loadedClass);\n    \t};\n\n    \t/**\n    \t * Initializes the carousel.\n    \t * @protected\n    \t */\n    \tOwl.prototype.initialize = function() {\n    \t\tthis.enter('initializing');\n    \t\tthis.trigger('initialize');\n\n    \t\tthis.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);\n\n    \t\tif (this.settings.autoWidth && !this.is('pre-loading')) {\n    \t\t\tvar imgs, nestedSelector, width;\n    \t\t\timgs = this.$element.find('img');\n    \t\t\tnestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;\n    \t\t\twidth = this.$element.children(nestedSelector).width();\n\n    \t\t\tif (imgs.length && width <= 0) {\n    \t\t\t\tthis.preloadAutoWidthImages(imgs);\n    \t\t\t}\n    \t\t}\n\n    \t\tthis.initializeStage();\n    \t\tthis.initializeItems();\n\n    \t\t// register event handlers\n    \t\tthis.registerEventHandlers();\n\n    \t\tthis.leave('initializing');\n    \t\tthis.trigger('initialized');\n    \t};\n\n    \t/**\n    \t * @returns {Boolean} visibility of $element\n    \t *                    if you know the carousel will always be visible you can set `checkVisibility` to `false` to\n    \t *                    prevent the expensive browser layout forced reflow the $element.is(':visible') does\n    \t */\n    \tOwl.prototype.isVisible = function() {\n    \t\treturn this.settings.checkVisibility\n    \t\t\t? this.$element.is(':visible')\n    \t\t\t: true;\n    \t};\n\n    \t/**\n    \t * Setups the current settings.\n    \t * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n    \t * @todo Support for media queries by using `matchMedia` would be nice.\n    \t * @public\n    \t */\n    \tOwl.prototype.setup = function() {\n    \t\tvar viewport = this.viewport(),\n    \t\t\toverwrites = this.options.responsive,\n    \t\t\tmatch = -1,\n    \t\t\tsettings = null;\n\n    \t\tif (!overwrites) {\n    \t\t\tsettings = $.extend({}, this.options);\n    \t\t} else {\n    \t\t\t$.each(overwrites, function(breakpoint) {\n    \t\t\t\tif (breakpoint <= viewport && breakpoint > match) {\n    \t\t\t\t\tmatch = Number(breakpoint);\n    \t\t\t\t}\n    \t\t\t});\n\n    \t\t\tsettings = $.extend({}, this.options, overwrites[match]);\n    \t\t\tif (typeof settings.stagePadding === 'function') {\n    \t\t\t\tsettings.stagePadding = settings.stagePadding();\n    \t\t\t}\n    \t\t\tdelete settings.responsive;\n\n    \t\t\t// responsive class\n    \t\t\tif (settings.responsiveClass) {\n    \t\t\t\tthis.$element.attr('class',\n    \t\t\t\t\tthis.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\\\S+\\\\s', 'g'), '$1' + match)\n    \t\t\t\t);\n    \t\t\t}\n    \t\t}\n\n    \t\tthis.trigger('change', { property: { name: 'settings', value: settings } });\n    \t\tthis._breakpoint = match;\n    \t\tthis.settings = settings;\n    \t\tthis.invalidate('settings');\n    \t\tthis.trigger('changed', { property: { name: 'settings', value: this.settings } });\n    \t};\n\n    \t/**\n    \t * Updates option logic if necessery.\n    \t * @protected\n    \t */\n    \tOwl.prototype.optionsLogic = function() {\n    \t\tif (this.settings.autoWidth) {\n    \t\t\tthis.settings.stagePadding = false;\n    \t\t\tthis.settings.merge = false;\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Prepares an item before add.\n    \t * @todo Rename event parameter `content` to `item`.\n    \t * @protected\n    \t * @returns {jQuery|HTMLElement} - The item container.\n    \t */\n    \tOwl.prototype.prepare = function(item) {\n    \t\tvar event = this.trigger('prepare', { content: item });\n\n    \t\tif (!event.data) {\n    \t\t\tevent.data = $('<' + this.settings.itemElement + '/>')\n    \t\t\t\t.addClass(this.options.itemClass).append(item);\n    \t\t}\n\n    \t\tthis.trigger('prepared', { content: event.data });\n\n    \t\treturn event.data;\n    \t};\n\n    \t/**\n    \t * Updates the view.\n    \t * @public\n    \t */\n    \tOwl.prototype.update = function() {\n    \t\tvar i = 0,\n    \t\t\tn = this._pipe.length,\n    \t\t\tfilter = $.proxy(function(p) { return this[p] }, this._invalidated),\n    \t\t\tcache = {};\n\n    \t\twhile (i < n) {\n    \t\t\tif (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {\n    \t\t\t\tthis._pipe[i].run(cache);\n    \t\t\t}\n    \t\t\ti++;\n    \t\t}\n\n    \t\tthis._invalidated = {};\n\n    \t\t!this.is('valid') && this.enter('valid');\n    \t};\n\n    \t/**\n    \t * Gets the width of the view.\n    \t * @public\n    \t * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.\n    \t * @returns {Number} - The width of the view in pixel.\n    \t */\n    \tOwl.prototype.width = function(dimension) {\n    \t\tdimension = dimension || Owl.Width.Default;\n    \t\tswitch (dimension) {\n    \t\t\tcase Owl.Width.Inner:\n    \t\t\tcase Owl.Width.Outer:\n    \t\t\t\treturn this._width;\n    \t\t\tdefault:\n    \t\t\t\treturn this._width - this.settings.stagePadding * 2 + this.settings.margin;\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Refreshes the carousel primarily for adaptive purposes.\n    \t * @public\n    \t */\n    \tOwl.prototype.refresh = function() {\n    \t\tthis.enter('refreshing');\n    \t\tthis.trigger('refresh');\n\n    \t\tthis.setup();\n\n    \t\tthis.optionsLogic();\n\n    \t\tthis.$element.addClass(this.options.refreshClass);\n\n    \t\tthis.update();\n\n    \t\tthis.$element.removeClass(this.options.refreshClass);\n\n    \t\tthis.leave('refreshing');\n    \t\tthis.trigger('refreshed');\n    \t};\n\n    \t/**\n    \t * Checks window `resize` event.\n    \t * @protected\n    \t */\n    \tOwl.prototype.onThrottledResize = function() {\n    \t\twindow.clearTimeout(this.resizeTimer);\n    \t\tthis.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);\n    \t};\n\n    \t/**\n    \t * Checks window `resize` event.\n    \t * @protected\n    \t */\n    \tOwl.prototype.onResize = function() {\n    \t\tif (!this._items.length) {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\tif (this._width === this.$element.width()) {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\tif (!this.isVisible()) {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\tthis.enter('resizing');\n\n    \t\tif (this.trigger('resize').isDefaultPrevented()) {\n    \t\t\tthis.leave('resizing');\n    \t\t\treturn false;\n    \t\t}\n\n    \t\tthis.invalidate('width');\n\n    \t\tthis.refresh();\n\n    \t\tthis.leave('resizing');\n    \t\tthis.trigger('resized');\n    \t};\n\n    \t/**\n    \t * Registers event handlers.\n    \t * @todo Check `msPointerEnabled`\n    \t * @todo #261\n    \t * @protected\n    \t */\n    \tOwl.prototype.registerEventHandlers = function() {\n    \t\tif ($.support.transition) {\n    \t\t\tthis.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));\n    \t\t}\n\n    \t\tif (this.settings.responsive !== false) {\n    \t\t\tthis.on(window, 'resize', this._handlers.onThrottledResize);\n    \t\t}\n\n    \t\tif (this.settings.mouseDrag) {\n    \t\t\tthis.$element.addClass(this.options.dragClass);\n    \t\t\tthis.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));\n    \t\t\tthis.$stage.on('dragstart.owl.core selectstart.owl.core', function() { return false });\n    \t\t}\n\n    \t\tif (this.settings.touchDrag){\n    \t\t\tthis.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));\n    \t\t\tthis.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Handles `touchstart` and `mousedown` events.\n    \t * @todo Horizontal swipe threshold as option\n    \t * @todo #261\n    \t * @protected\n    \t * @param {Event} event - The event arguments.\n    \t */\n    \tOwl.prototype.onDragStart = function(event) {\n    \t\tvar stage = null;\n\n    \t\tif (event.which === 3) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tif ($.support.transform) {\n    \t\t\tstage = this.$stage.css('transform').replace(/.*\\(|\\)| /g, '').split(',');\n    \t\t\tstage = {\n    \t\t\t\tx: stage[stage.length === 16 ? 12 : 4],\n    \t\t\t\ty: stage[stage.length === 16 ? 13 : 5]\n    \t\t\t};\n    \t\t} else {\n    \t\t\tstage = this.$stage.position();\n    \t\t\tstage = {\n    \t\t\t\tx: this.settings.rtl ?\n    \t\t\t\t\tstage.left + this.$stage.width() - this.width() + this.settings.margin :\n    \t\t\t\t\tstage.left,\n    \t\t\t\ty: stage.top\n    \t\t\t};\n    \t\t}\n\n    \t\tif (this.is('animating')) {\n    \t\t\t$.support.transform ? this.animate(stage.x) : this.$stage.stop();\n    \t\t\tthis.invalidate('position');\n    \t\t}\n\n    \t\tthis.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');\n\n    \t\tthis.speed(0);\n\n    \t\tthis._drag.time = new Date().getTime();\n    \t\tthis._drag.target = $(event.target);\n    \t\tthis._drag.stage.start = stage;\n    \t\tthis._drag.stage.current = stage;\n    \t\tthis._drag.pointer = this.pointer(event);\n\n    \t\t$(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));\n\n    \t\t$(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function(event) {\n    \t\t\tvar delta = this.difference(this._drag.pointer, this.pointer(event));\n\n    \t\t\t$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));\n\n    \t\t\tif (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {\n    \t\t\t\treturn;\n    \t\t\t}\n\n    \t\t\tevent.preventDefault();\n\n    \t\t\tthis.enter('dragging');\n    \t\t\tthis.trigger('drag');\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Handles the `touchmove` and `mousemove` events.\n    \t * @todo #261\n    \t * @protected\n    \t * @param {Event} event - The event arguments.\n    \t */\n    \tOwl.prototype.onDragMove = function(event) {\n    \t\tvar minimum = null,\n    \t\t\tmaximum = null,\n    \t\t\tpull = null,\n    \t\t\tdelta = this.difference(this._drag.pointer, this.pointer(event)),\n    \t\t\tstage = this.difference(this._drag.stage.start, delta);\n\n    \t\tif (!this.is('dragging')) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tevent.preventDefault();\n\n    \t\tif (this.settings.loop) {\n    \t\t\tminimum = this.coordinates(this.minimum());\n    \t\t\tmaximum = this.coordinates(this.maximum() + 1) - minimum;\n    \t\t\tstage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\n    \t\t} else {\n    \t\t\tminimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n    \t\t\tmaximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n    \t\t\tpull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\n    \t\t\tstage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\n    \t\t}\n\n    \t\tthis._drag.stage.current = stage;\n\n    \t\tthis.animate(stage.x);\n    \t};\n\n    \t/**\n    \t * Handles the `touchend` and `mouseup` events.\n    \t * @todo #261\n    \t * @todo Threshold for click event\n    \t * @protected\n    \t * @param {Event} event - The event arguments.\n    \t */\n    \tOwl.prototype.onDragEnd = function(event) {\n    \t\tvar delta = this.difference(this._drag.pointer, this.pointer(event)),\n    \t\t\tstage = this._drag.stage.current,\n    \t\t\tdirection = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';\n\n    \t\t$(document).off('.owl.core');\n\n    \t\tthis.$element.removeClass(this.options.grabClass);\n\n    \t\tif (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\n    \t\t\tthis.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);\n    \t\t\tthis.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));\n    \t\t\tthis.invalidate('position');\n    \t\t\tthis.update();\n\n    \t\t\tthis._drag.direction = direction;\n\n    \t\t\tif (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {\n    \t\t\t\tthis._drag.target.one('click.owl.core', function() { return false; });\n    \t\t\t}\n    \t\t}\n\n    \t\tif (!this.is('dragging')) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis.leave('dragging');\n    \t\tthis.trigger('dragged');\n    \t};\n\n    \t/**\n    \t * Gets absolute position of the closest item for a coordinate.\n    \t * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n    \t * @protected\n    \t * @param {Number} coordinate - The coordinate in pixel.\n    \t * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.\n    \t * @return {Number} - The absolute position of the closest item.\n    \t */\n    \tOwl.prototype.closest = function(coordinate, direction) {\n    \t\tvar position = -1,\n    \t\t\tpull = 30,\n    \t\t\twidth = this.width(),\n    \t\t\tcoordinates = this.coordinates();\n\n    \t\tif (!this.settings.freeDrag) {\n    \t\t\t// check closest item\n    \t\t\t$.each(coordinates, $.proxy(function(index, value) {\n    \t\t\t\t// on a left pull, check on current index\n    \t\t\t\tif (direction === 'left' && coordinate > value - pull && coordinate < value + pull) {\n    \t\t\t\t\tposition = index;\n    \t\t\t\t// on a right pull, check on previous index\n    \t\t\t\t// to do so, subtract width from value and set position = index + 1\n    \t\t\t\t} else if (direction === 'right' && coordinate > value - width - pull && coordinate < value - width + pull) {\n    \t\t\t\t\tposition = index + 1;\n    \t\t\t\t} else if (this.op(coordinate, '<', value)\n    \t\t\t\t\t&& this.op(coordinate, '>', coordinates[index + 1] !== undefined ? coordinates[index + 1] : value - width)) {\n    \t\t\t\t\tposition = direction === 'left' ? index + 1 : index;\n    \t\t\t\t}\n    \t\t\t\treturn position === -1;\n    \t\t\t}, this));\n    \t\t}\n\n    \t\tif (!this.settings.loop) {\n    \t\t\t// non loop boundries\n    \t\t\tif (this.op(coordinate, '>', coordinates[this.minimum()])) {\n    \t\t\t\tposition = coordinate = this.minimum();\n    \t\t\t} else if (this.op(coordinate, '<', coordinates[this.maximum()])) {\n    \t\t\t\tposition = coordinate = this.maximum();\n    \t\t\t}\n    \t\t}\n\n    \t\treturn position;\n    \t};\n\n    \t/**\n    \t * Animates the stage.\n    \t * @todo #270\n    \t * @public\n    \t * @param {Number} coordinate - The coordinate in pixels.\n    \t */\n    \tOwl.prototype.animate = function(coordinate) {\n    \t\tvar animate = this.speed() > 0;\n\n    \t\tthis.is('animating') && this.onTransitionEnd();\n\n    \t\tif (animate) {\n    \t\t\tthis.enter('animating');\n    \t\t\tthis.trigger('translate');\n    \t\t}\n\n    \t\tif ($.support.transform3d && $.support.transition) {\n    \t\t\tthis.$stage.css({\n    \t\t\t\ttransform: 'translate3d(' + coordinate + 'px,0px,0px)',\n    \t\t\t\ttransition: (this.speed() / 1000) + 's' + (\n    \t\t\t\t\tthis.settings.slideTransition ? ' ' + this.settings.slideTransition : ''\n    \t\t\t\t)\n    \t\t\t});\n    \t\t} else if (animate) {\n    \t\t\tthis.$stage.animate({\n    \t\t\t\tleft: coordinate + 'px'\n    \t\t\t}, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));\n    \t\t} else {\n    \t\t\tthis.$stage.css({\n    \t\t\t\tleft: coordinate + 'px'\n    \t\t\t});\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Checks whether the carousel is in a specific state or not.\n    \t * @param {String} state - The state to check.\n    \t * @returns {Boolean} - The flag which indicates if the carousel is busy.\n    \t */\n    \tOwl.prototype.is = function(state) {\n    \t\treturn this._states.current[state] && this._states.current[state] > 0;\n    \t};\n\n    \t/**\n    \t * Sets the absolute position of the current item.\n    \t * @public\n    \t * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.\n    \t * @returns {Number} - The absolute position of the current item.\n    \t */\n    \tOwl.prototype.current = function(position) {\n    \t\tif (position === undefined) {\n    \t\t\treturn this._current;\n    \t\t}\n\n    \t\tif (this._items.length === 0) {\n    \t\t\treturn undefined;\n    \t\t}\n\n    \t\tposition = this.normalize(position);\n\n    \t\tif (this._current !== position) {\n    \t\t\tvar event = this.trigger('change', { property: { name: 'position', value: position } });\n\n    \t\t\tif (event.data !== undefined) {\n    \t\t\t\tposition = this.normalize(event.data);\n    \t\t\t}\n\n    \t\t\tthis._current = position;\n\n    \t\t\tthis.invalidate('position');\n\n    \t\t\tthis.trigger('changed', { property: { name: 'position', value: this._current } });\n    \t\t}\n\n    \t\treturn this._current;\n    \t};\n\n    \t/**\n    \t * Invalidates the given part of the update routine.\n    \t * @param {String} [part] - The part to invalidate.\n    \t * @returns {Array.<String>} - The invalidated parts.\n    \t */\n    \tOwl.prototype.invalidate = function(part) {\n    \t\tif ($.type(part) === 'string') {\n    \t\t\tthis._invalidated[part] = true;\n    \t\t\tthis.is('valid') && this.leave('valid');\n    \t\t}\n    \t\treturn $.map(this._invalidated, function(v, i) { return i });\n    \t};\n\n    \t/**\n    \t * Resets the absolute position of the current item.\n    \t * @public\n    \t * @param {Number} position - The absolute position of the new item.\n    \t */\n    \tOwl.prototype.reset = function(position) {\n    \t\tposition = this.normalize(position);\n\n    \t\tif (position === undefined) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis._speed = 0;\n    \t\tthis._current = position;\n\n    \t\tthis.suppress([ 'translate', 'translated' ]);\n\n    \t\tthis.animate(this.coordinates(position));\n\n    \t\tthis.release([ 'translate', 'translated' ]);\n    \t};\n\n    \t/**\n    \t * Normalizes an absolute or a relative position of an item.\n    \t * @public\n    \t * @param {Number} position - The absolute or relative position to normalize.\n    \t * @param {Boolean} [relative=false] - Whether the given position is relative or not.\n    \t * @returns {Number} - The normalized position.\n    \t */\n    \tOwl.prototype.normalize = function(position, relative) {\n    \t\tvar n = this._items.length,\n    \t\t\tm = relative ? 0 : this._clones.length;\n\n    \t\tif (!this.isNumeric(position) || n < 1) {\n    \t\t\tposition = undefined;\n    \t\t} else if (position < 0 || position >= n + m) {\n    \t\t\tposition = ((position - m / 2) % n + n) % n + m / 2;\n    \t\t}\n\n    \t\treturn position;\n    \t};\n\n    \t/**\n    \t * Converts an absolute position of an item into a relative one.\n    \t * @public\n    \t * @param {Number} position - The absolute position to convert.\n    \t * @returns {Number} - The converted position.\n    \t */\n    \tOwl.prototype.relative = function(position) {\n    \t\tposition -= this._clones.length / 2;\n    \t\treturn this.normalize(position, true);\n    \t};\n\n    \t/**\n    \t * Gets the maximum position for the current item.\n    \t * @public\n    \t * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n    \t * @returns {Number}\n    \t */\n    \tOwl.prototype.maximum = function(relative) {\n    \t\tvar settings = this.settings,\n    \t\t\tmaximum = this._coordinates.length,\n    \t\t\titerator,\n    \t\t\treciprocalItemsWidth,\n    \t\t\telementWidth;\n\n    \t\tif (settings.loop) {\n    \t\t\tmaximum = this._clones.length / 2 + this._items.length - 1;\n    \t\t} else if (settings.autoWidth || settings.merge) {\n    \t\t\titerator = this._items.length;\n    \t\t\tif (iterator) {\n    \t\t\t\treciprocalItemsWidth = this._items[--iterator].width();\n    \t\t\t\telementWidth = this.$element.width();\n    \t\t\t\twhile (iterator--) {\n    \t\t\t\t\treciprocalItemsWidth += this._items[iterator].width() + this.settings.margin;\n    \t\t\t\t\tif (reciprocalItemsWidth > elementWidth) {\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tmaximum = iterator + 1;\n    \t\t} else if (settings.center) {\n    \t\t\tmaximum = this._items.length - 1;\n    \t\t} else {\n    \t\t\tmaximum = this._items.length - settings.items;\n    \t\t}\n\n    \t\tif (relative) {\n    \t\t\tmaximum -= this._clones.length / 2;\n    \t\t}\n\n    \t\treturn Math.max(maximum, 0);\n    \t};\n\n    \t/**\n    \t * Gets the minimum position for the current item.\n    \t * @public\n    \t * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n    \t * @returns {Number}\n    \t */\n    \tOwl.prototype.minimum = function(relative) {\n    \t\treturn relative ? 0 : this._clones.length / 2;\n    \t};\n\n    \t/**\n    \t * Gets an item at the specified relative position.\n    \t * @public\n    \t * @param {Number} [position] - The relative position of the item.\n    \t * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n    \t */\n    \tOwl.prototype.items = function(position) {\n    \t\tif (position === undefined) {\n    \t\t\treturn this._items.slice();\n    \t\t}\n\n    \t\tposition = this.normalize(position, true);\n    \t\treturn this._items[position];\n    \t};\n\n    \t/**\n    \t * Gets an item at the specified relative position.\n    \t * @public\n    \t * @param {Number} [position] - The relative position of the item.\n    \t * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n    \t */\n    \tOwl.prototype.mergers = function(position) {\n    \t\tif (position === undefined) {\n    \t\t\treturn this._mergers.slice();\n    \t\t}\n\n    \t\tposition = this.normalize(position, true);\n    \t\treturn this._mergers[position];\n    \t};\n\n    \t/**\n    \t * Gets the absolute positions of clones for an item.\n    \t * @public\n    \t * @param {Number} [position] - The relative position of the item.\n    \t * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.\n    \t */\n    \tOwl.prototype.clones = function(position) {\n    \t\tvar odd = this._clones.length / 2,\n    \t\t\teven = odd + this._items.length,\n    \t\t\tmap = function(index) { return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2 };\n\n    \t\tif (position === undefined) {\n    \t\t\treturn $.map(this._clones, function(v, i) { return map(i) });\n    \t\t}\n\n    \t\treturn $.map(this._clones, function(v, i) { return v === position ? map(i) : null });\n    \t};\n\n    \t/**\n    \t * Sets the current animation speed.\n    \t * @public\n    \t * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.\n    \t * @returns {Number} - The current animation speed in milliseconds.\n    \t */\n    \tOwl.prototype.speed = function(speed) {\n    \t\tif (speed !== undefined) {\n    \t\t\tthis._speed = speed;\n    \t\t}\n\n    \t\treturn this._speed;\n    \t};\n\n    \t/**\n    \t * Gets the coordinate of an item.\n    \t * @todo The name of this method is missleanding.\n    \t * @public\n    \t * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.\n    \t * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.\n    \t */\n    \tOwl.prototype.coordinates = function(position) {\n    \t\tvar multiplier = 1,\n    \t\t\tnewPosition = position - 1,\n    \t\t\tcoordinate;\n\n    \t\tif (position === undefined) {\n    \t\t\treturn $.map(this._coordinates, $.proxy(function(coordinate, index) {\n    \t\t\t\treturn this.coordinates(index);\n    \t\t\t}, this));\n    \t\t}\n\n    \t\tif (this.settings.center) {\n    \t\t\tif (this.settings.rtl) {\n    \t\t\t\tmultiplier = -1;\n    \t\t\t\tnewPosition = position + 1;\n    \t\t\t}\n\n    \t\t\tcoordinate = this._coordinates[position];\n    \t\t\tcoordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\n    \t\t} else {\n    \t\t\tcoordinate = this._coordinates[newPosition] || 0;\n    \t\t}\n\n    \t\tcoordinate = Math.ceil(coordinate);\n\n    \t\treturn coordinate;\n    \t};\n\n    \t/**\n    \t * Calculates the speed for a translation.\n    \t * @protected\n    \t * @param {Number} from - The absolute position of the start item.\n    \t * @param {Number} to - The absolute position of the target item.\n    \t * @param {Number} [factor=undefined] - The time factor in milliseconds.\n    \t * @returns {Number} - The time in milliseconds for the translation.\n    \t */\n    \tOwl.prototype.duration = function(from, to, factor) {\n    \t\tif (factor === 0) {\n    \t\t\treturn 0;\n    \t\t}\n\n    \t\treturn Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));\n    \t};\n\n    \t/**\n    \t * Slides to the specified item.\n    \t * @public\n    \t * @param {Number} position - The position of the item.\n    \t * @param {Number} [speed] - The time in milliseconds for the transition.\n    \t */\n    \tOwl.prototype.to = function(position, speed) {\n    \t\tvar current = this.current(),\n    \t\t\trevert = null,\n    \t\t\tdistance = position - this.relative(current),\n    \t\t\tdirection = (distance > 0) - (distance < 0),\n    \t\t\titems = this._items.length,\n    \t\t\tminimum = this.minimum(),\n    \t\t\tmaximum = this.maximum();\n\n    \t\tif (this.settings.loop) {\n    \t\t\tif (!this.settings.rewind && Math.abs(distance) > items / 2) {\n    \t\t\t\tdistance += direction * -1 * items;\n    \t\t\t}\n\n    \t\t\tposition = current + distance;\n    \t\t\trevert = ((position - minimum) % items + items) % items + minimum;\n\n    \t\t\tif (revert !== position && revert - distance <= maximum && revert - distance > 0) {\n    \t\t\t\tcurrent = revert - distance;\n    \t\t\t\tposition = revert;\n    \t\t\t\tthis.reset(current);\n    \t\t\t}\n    \t\t} else if (this.settings.rewind) {\n    \t\t\tmaximum += 1;\n    \t\t\tposition = (position % maximum + maximum) % maximum;\n    \t\t} else {\n    \t\t\tposition = Math.max(minimum, Math.min(maximum, position));\n    \t\t}\n\n    \t\tthis.speed(this.duration(current, position, speed));\n    \t\tthis.current(position);\n\n    \t\tif (this.isVisible()) {\n    \t\t\tthis.update();\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Slides to the next item.\n    \t * @public\n    \t * @param {Number} [speed] - The time in milliseconds for the transition.\n    \t */\n    \tOwl.prototype.next = function(speed) {\n    \t\tspeed = speed || false;\n    \t\tthis.to(this.relative(this.current()) + 1, speed);\n    \t};\n\n    \t/**\n    \t * Slides to the previous item.\n    \t * @public\n    \t * @param {Number} [speed] - The time in milliseconds for the transition.\n    \t */\n    \tOwl.prototype.prev = function(speed) {\n    \t\tspeed = speed || false;\n    \t\tthis.to(this.relative(this.current()) - 1, speed);\n    \t};\n\n    \t/**\n    \t * Handles the end of an animation.\n    \t * @protected\n    \t * @param {Event} event - The event arguments.\n    \t */\n    \tOwl.prototype.onTransitionEnd = function(event) {\n\n    \t\t// if css2 animation then event object is undefined\n    \t\tif (event !== undefined) {\n    \t\t\tevent.stopPropagation();\n\n    \t\t\t// Catch only owl-stage transitionEnd event\n    \t\t\tif ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {\n    \t\t\t\treturn false;\n    \t\t\t}\n    \t\t}\n\n    \t\tthis.leave('animating');\n    \t\tthis.trigger('translated');\n    \t};\n\n    \t/**\n    \t * Gets viewport width.\n    \t * @protected\n    \t * @return {Number} - The width in pixel.\n    \t */\n    \tOwl.prototype.viewport = function() {\n    \t\tvar width;\n    \t\tif (this.options.responsiveBaseElement !== window) {\n    \t\t\twidth = $(this.options.responsiveBaseElement).width();\n    \t\t} else if (window.innerWidth) {\n    \t\t\twidth = window.innerWidth;\n    \t\t} else if (document.documentElement && document.documentElement.clientWidth) {\n    \t\t\twidth = document.documentElement.clientWidth;\n    \t\t} else {\n    \t\t\tconsole.warn('Can not detect viewport width.');\n    \t\t}\n    \t\treturn width;\n    \t};\n\n    \t/**\n    \t * Replaces the current content.\n    \t * @public\n    \t * @param {HTMLElement|jQuery|String} content - The new content.\n    \t */\n    \tOwl.prototype.replace = function(content) {\n    \t\tthis.$stage.empty();\n    \t\tthis._items = [];\n\n    \t\tif (content) {\n    \t\t\tcontent = (content instanceof jQuery) ? content : $(content);\n    \t\t}\n\n    \t\tif (this.settings.nestedItemSelector) {\n    \t\t\tcontent = content.find('.' + this.settings.nestedItemSelector);\n    \t\t}\n\n    \t\tcontent.filter(function() {\n    \t\t\treturn this.nodeType === 1;\n    \t\t}).each($.proxy(function(index, item) {\n    \t\t\titem = this.prepare(item);\n    \t\t\tthis.$stage.append(item);\n    \t\t\tthis._items.push(item);\n    \t\t\tthis._mergers.push(item.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n    \t\t}, this));\n\n    \t\tthis.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);\n\n    \t\tthis.invalidate('items');\n    \t};\n\n    \t/**\n    \t * Adds an item.\n    \t * @todo Use `item` instead of `content` for the event arguments.\n    \t * @public\n    \t * @param {HTMLElement|jQuery|String} content - The item content to add.\n    \t * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.\n    \t */\n    \tOwl.prototype.add = function(content, position) {\n    \t\tvar current = this.relative(this._current);\n\n    \t\tposition = position === undefined ? this._items.length : this.normalize(position, true);\n    \t\tcontent = content instanceof jQuery ? content : $(content);\n\n    \t\tthis.trigger('add', { content: content, position: position });\n\n    \t\tcontent = this.prepare(content);\n\n    \t\tif (this._items.length === 0 || position === this._items.length) {\n    \t\t\tthis._items.length === 0 && this.$stage.append(content);\n    \t\t\tthis._items.length !== 0 && this._items[position - 1].after(content);\n    \t\t\tthis._items.push(content);\n    \t\t\tthis._mergers.push(content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n    \t\t} else {\n    \t\t\tthis._items[position].before(content);\n    \t\t\tthis._items.splice(position, 0, content);\n    \t\t\tthis._mergers.splice(position, 0, content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n    \t\t}\n\n    \t\tthis._items[current] && this.reset(this._items[current].index());\n\n    \t\tthis.invalidate('items');\n\n    \t\tthis.trigger('added', { content: content, position: position });\n    \t};\n\n    \t/**\n    \t * Removes an item by its position.\n    \t * @todo Use `item` instead of `content` for the event arguments.\n    \t * @public\n    \t * @param {Number} position - The relative position of the item to remove.\n    \t */\n    \tOwl.prototype.remove = function(position) {\n    \t\tposition = this.normalize(position, true);\n\n    \t\tif (position === undefined) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis.trigger('remove', { content: this._items[position], position: position });\n\n    \t\tthis._items[position].remove();\n    \t\tthis._items.splice(position, 1);\n    \t\tthis._mergers.splice(position, 1);\n\n    \t\tthis.invalidate('items');\n\n    \t\tthis.trigger('removed', { content: null, position: position });\n    \t};\n\n    \t/**\n    \t * Preloads images with auto width.\n    \t * @todo Replace by a more generic approach\n    \t * @protected\n    \t */\n    \tOwl.prototype.preloadAutoWidthImages = function(images) {\n    \t\timages.each($.proxy(function(i, element) {\n    \t\t\tthis.enter('pre-loading');\n    \t\t\telement = $(element);\n    \t\t\t$(new Image()).one('load', $.proxy(function(e) {\n    \t\t\t\telement.attr('src', e.target.src);\n    \t\t\t\telement.css('opacity', 1);\n    \t\t\t\tthis.leave('pre-loading');\n    \t\t\t\t!this.is('pre-loading') && !this.is('initializing') && this.refresh();\n    \t\t\t}, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Destroys the carousel.\n    \t * @public\n    \t */\n    \tOwl.prototype.destroy = function() {\n\n    \t\tthis.$element.off('.owl.core');\n    \t\tthis.$stage.off('.owl.core');\n    \t\t$(document).off('.owl.core');\n\n    \t\tif (this.settings.responsive !== false) {\n    \t\t\twindow.clearTimeout(this.resizeTimer);\n    \t\t\tthis.off(window, 'resize', this._handlers.onThrottledResize);\n    \t\t}\n\n    \t\tfor (var i in this._plugins) {\n    \t\t\tthis._plugins[i].destroy();\n    \t\t}\n\n    \t\tthis.$stage.children('.cloned').remove();\n\n    \t\tthis.$stage.unwrap();\n    \t\tthis.$stage.children().contents().unwrap();\n    \t\tthis.$stage.children().unwrap();\n    \t\tthis.$stage.remove();\n    \t\tthis.$element\n    \t\t\t.removeClass(this.options.refreshClass)\n    \t\t\t.removeClass(this.options.loadingClass)\n    \t\t\t.removeClass(this.options.loadedClass)\n    \t\t\t.removeClass(this.options.rtlClass)\n    \t\t\t.removeClass(this.options.dragClass)\n    \t\t\t.removeClass(this.options.grabClass)\n    \t\t\t.attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\\\S+\\\\s', 'g'), ''))\n    \t\t\t.removeData('owl.carousel');\n    \t};\n\n    \t/**\n    \t * Operators to calculate right-to-left and left-to-right.\n    \t * @protected\n    \t * @param {Number} [a] - The left side operand.\n    \t * @param {String} [o] - The operator.\n    \t * @param {Number} [b] - The right side operand.\n    \t */\n    \tOwl.prototype.op = function(a, o, b) {\n    \t\tvar rtl = this.settings.rtl;\n    \t\tswitch (o) {\n    \t\t\tcase '<':\n    \t\t\t\treturn rtl ? a > b : a < b;\n    \t\t\tcase '>':\n    \t\t\t\treturn rtl ? a < b : a > b;\n    \t\t\tcase '>=':\n    \t\t\t\treturn rtl ? a <= b : a >= b;\n    \t\t\tcase '<=':\n    \t\t\t\treturn rtl ? a >= b : a <= b;\n    \t\t\tdefault:\n    \t\t\t\tbreak;\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Attaches to an internal event.\n    \t * @protected\n    \t * @param {HTMLElement} element - The event source.\n    \t * @param {String} event - The event name.\n    \t * @param {Function} listener - The event handler to attach.\n    \t * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.\n    \t */\n    \tOwl.prototype.on = function(element, event, listener, capture) {\n    \t\tif (element.addEventListener) {\n    \t\t\telement.addEventListener(event, listener, capture);\n    \t\t} else if (element.attachEvent) {\n    \t\t\telement.attachEvent('on' + event, listener);\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Detaches from an internal event.\n    \t * @protected\n    \t * @param {HTMLElement} element - The event source.\n    \t * @param {String} event - The event name.\n    \t * @param {Function} listener - The attached event handler to detach.\n    \t * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.\n    \t */\n    \tOwl.prototype.off = function(element, event, listener, capture) {\n    \t\tif (element.removeEventListener) {\n    \t\t\telement.removeEventListener(event, listener, capture);\n    \t\t} else if (element.detachEvent) {\n    \t\t\telement.detachEvent('on' + event, listener);\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Triggers a public event.\n    \t * @todo Remove `status`, `relatedTarget` should be used instead.\n    \t * @protected\n    \t * @param {String} name - The event name.\n    \t * @param {*} [data=null] - The event data.\n    \t * @param {String} [namespace=carousel] - The event namespace.\n    \t * @param {String} [state] - The state which is associated with the event.\n    \t * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.\n    \t * @returns {Event} - The event arguments.\n    \t */\n    \tOwl.prototype.trigger = function(name, data, namespace, state, enter) {\n    \t\tvar status = {\n    \t\t\titem: { count: this._items.length, index: this.current() }\n    \t\t}, handler = $.camelCase(\n    \t\t\t$.grep([ 'on', name, namespace ], function(v) { return v })\n    \t\t\t\t.join('-').toLowerCase()\n    \t\t), event = $.Event(\n    \t\t\t[ name, 'owl', namespace || 'carousel' ].join('.').toLowerCase(),\n    \t\t\t$.extend({ relatedTarget: this }, status, data)\n    \t\t);\n\n    \t\tif (!this._supress[name]) {\n    \t\t\t$.each(this._plugins, function(name, plugin) {\n    \t\t\t\tif (plugin.onTrigger) {\n    \t\t\t\t\tplugin.onTrigger(event);\n    \t\t\t\t}\n    \t\t\t});\n\n    \t\t\tthis.register({ type: Owl.Type.Event, name: name });\n    \t\t\tthis.$element.trigger(event);\n\n    \t\t\tif (this.settings && typeof this.settings[handler] === 'function') {\n    \t\t\t\tthis.settings[handler].call(this, event);\n    \t\t\t}\n    \t\t}\n\n    \t\treturn event;\n    \t};\n\n    \t/**\n    \t * Enters a state.\n    \t * @param name - The state name.\n    \t */\n    \tOwl.prototype.enter = function(name) {\n    \t\t$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {\n    \t\t\tif (this._states.current[name] === undefined) {\n    \t\t\t\tthis._states.current[name] = 0;\n    \t\t\t}\n\n    \t\t\tthis._states.current[name]++;\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Leaves a state.\n    \t * @param name - The state name.\n    \t */\n    \tOwl.prototype.leave = function(name) {\n    \t\t$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {\n    \t\t\tthis._states.current[name]--;\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Registers an event or state.\n    \t * @public\n    \t * @param {Object} object - The event or state to register.\n    \t */\n    \tOwl.prototype.register = function(object) {\n    \t\tif (object.type === Owl.Type.Event) {\n    \t\t\tif (!$.event.special[object.name]) {\n    \t\t\t\t$.event.special[object.name] = {};\n    \t\t\t}\n\n    \t\t\tif (!$.event.special[object.name].owl) {\n    \t\t\t\tvar _default = $.event.special[object.name]._default;\n    \t\t\t\t$.event.special[object.name]._default = function(e) {\n    \t\t\t\t\tif (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {\n    \t\t\t\t\t\treturn _default.apply(this, arguments);\n    \t\t\t\t\t}\n    \t\t\t\t\treturn e.namespace && e.namespace.indexOf('owl') > -1;\n    \t\t\t\t};\n    \t\t\t\t$.event.special[object.name].owl = true;\n    \t\t\t}\n    \t\t} else if (object.type === Owl.Type.State) {\n    \t\t\tif (!this._states.tags[object.name]) {\n    \t\t\t\tthis._states.tags[object.name] = object.tags;\n    \t\t\t} else {\n    \t\t\t\tthis._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\n    \t\t\t}\n\n    \t\t\tthis._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function(tag, i) {\n    \t\t\t\treturn $.inArray(tag, this._states.tags[object.name]) === i;\n    \t\t\t}, this));\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Suppresses events.\n    \t * @protected\n    \t * @param {Array.<String>} events - The events to suppress.\n    \t */\n    \tOwl.prototype.suppress = function(events) {\n    \t\t$.each(events, $.proxy(function(index, event) {\n    \t\t\tthis._supress[event] = true;\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Releases suppressed events.\n    \t * @protected\n    \t * @param {Array.<String>} events - The events to release.\n    \t */\n    \tOwl.prototype.release = function(events) {\n    \t\t$.each(events, $.proxy(function(index, event) {\n    \t\t\tdelete this._supress[event];\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Gets unified pointer coordinates from event.\n    \t * @todo #261\n    \t * @protected\n    \t * @param {Event} - The `mousedown` or `touchstart` event.\n    \t * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.\n    \t */\n    \tOwl.prototype.pointer = function(event) {\n    \t\tvar result = { x: null, y: null };\n\n    \t\tevent = event.originalEvent || event || window.event;\n\n    \t\tevent = event.touches && event.touches.length ?\n    \t\t\tevent.touches[0] : event.changedTouches && event.changedTouches.length ?\n    \t\t\t\tevent.changedTouches[0] : event;\n\n    \t\tif (event.pageX) {\n    \t\t\tresult.x = event.pageX;\n    \t\t\tresult.y = event.pageY;\n    \t\t} else {\n    \t\t\tresult.x = event.clientX;\n    \t\t\tresult.y = event.clientY;\n    \t\t}\n\n    \t\treturn result;\n    \t};\n\n    \t/**\n    \t * Determines if the input is a Number or something that can be coerced to a Number\n    \t * @protected\n    \t * @param {Number|String|Object|Array|Boolean|RegExp|Function|Symbol} - The input to be tested\n    \t * @returns {Boolean} - An indication if the input is a Number or can be coerced to a Number\n    \t */\n    \tOwl.prototype.isNumeric = function(number) {\n    \t\treturn !isNaN(parseFloat(number));\n    \t};\n\n    \t/**\n    \t * Gets the difference of two vectors.\n    \t * @todo #261\n    \t * @protected\n    \t * @param {Object} - The first vector.\n    \t * @param {Object} - The second vector.\n    \t * @returns {Object} - The difference.\n    \t */\n    \tOwl.prototype.difference = function(first, second) {\n    \t\treturn {\n    \t\t\tx: first.x - second.x,\n    \t\t\ty: first.y - second.y\n    \t\t};\n    \t};\n\n    \t/**\n    \t * The jQuery Plugin for the Owl Carousel\n    \t * @todo Navigation plugin `next` and `prev`\n    \t * @public\n    \t */\n    \t$.fn.owlCarousel = function(option) {\n    \t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n    \t\treturn this.each(function() {\n    \t\t\tvar $this = $(this),\n    \t\t\t\tdata = $this.data('owl.carousel');\n\n    \t\t\tif (!data) {\n    \t\t\t\tdata = new Owl(this, typeof option == 'object' && option);\n    \t\t\t\t$this.data('owl.carousel', data);\n\n    \t\t\t\t$.each([\n    \t\t\t\t\t'next', 'prev', 'to', 'destroy', 'refresh', 'replace', 'add', 'remove'\n    \t\t\t\t], function(i, event) {\n    \t\t\t\t\tdata.register({ type: Owl.Type.Event, name: event });\n    \t\t\t\t\tdata.$element.on(event + '.owl.carousel.core', $.proxy(function(e) {\n    \t\t\t\t\t\tif (e.namespace && e.relatedTarget !== this) {\n    \t\t\t\t\t\t\tthis.suppress([ event ]);\n    \t\t\t\t\t\t\tdata[event].apply(this, [].slice.call(arguments, 1));\n    \t\t\t\t\t\t\tthis.release([ event ]);\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}, data));\n    \t\t\t\t});\n    \t\t\t}\n\n    \t\t\tif (typeof option == 'string' && option.charAt(0) !== '_') {\n    \t\t\t\tdata[option].apply(data, args);\n    \t\t\t}\n    \t\t});\n    \t};\n\n    \t/**\n    \t * The constructor for the jQuery Plugin\n    \t * @public\n    \t */\n    \t$.fn.owlCarousel.Constructor = Owl;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the auto refresh plugin.\n    \t * @class The Auto Refresh Plugin\n    \t * @param {Owl} carousel - The Owl Carousel\n    \t */\n    \tvar AutoRefresh = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * Refresh interval.\n    \t\t * @protected\n    \t\t * @type {number}\n    \t\t */\n    \t\tthis._interval = null;\n\n    \t\t/**\n    \t\t * Whether the element is currently visible or not.\n    \t\t * @protected\n    \t\t * @type {Boolean}\n    \t\t */\n    \t\tthis._visible = null;\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.autoRefresh) {\n    \t\t\t\t\tthis.watch();\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);\n\n    \t\t// register event handlers\n    \t\tthis._core.$element.on(this._handlers);\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tAutoRefresh.Defaults = {\n    \t\tautoRefresh: true,\n    \t\tautoRefreshInterval: 500\n    \t};\n\n    \t/**\n    \t * Watches the element.\n    \t */\n    \tAutoRefresh.prototype.watch = function() {\n    \t\tif (this._interval) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis._visible = this._core.isVisible();\n    \t\tthis._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);\n    \t};\n\n    \t/**\n    \t * Refreshes the element.\n    \t */\n    \tAutoRefresh.prototype.refresh = function() {\n    \t\tif (this._core.isVisible() === this._visible) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis._visible = !this._visible;\n\n    \t\tthis._core.$element.toggleClass('owl-hidden', !this._visible);\n\n    \t\tthis._visible && (this._core.invalidate('width') && this._core.refresh());\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t */\n    \tAutoRefresh.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\twindow.clearInterval(this._interval);\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the lazy plugin.\n    \t * @class The Lazy Plugin\n    \t * @param {Owl} carousel - The Owl Carousel\n    \t */\n    \tvar Lazy = function(carousel) {\n\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * Already loaded items.\n    \t\t * @protected\n    \t\t * @type {Array.<jQuery>}\n    \t\t */\n    \t\tthis._loaded = [];\n\n    \t\t/**\n    \t\t * Event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'initialized.owl.carousel change.owl.carousel resized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (!e.namespace) {\n    \t\t\t\t\treturn;\n    \t\t\t\t}\n\n    \t\t\t\tif (!this._core.settings || !this._core.settings.lazyLoad) {\n    \t\t\t\t\treturn;\n    \t\t\t\t}\n\n    \t\t\t\tif ((e.property && e.property.name == 'position') || e.type == 'initialized') {\n    \t\t\t\t\tvar settings = this._core.settings,\n    \t\t\t\t\t\tn = (settings.center && Math.ceil(settings.items / 2) || settings.items),\n    \t\t\t\t\t\ti = ((settings.center && n * -1) || 0),\n    \t\t\t\t\t\tposition = (e.property && e.property.value !== undefined ? e.property.value : this._core.current()) + i,\n    \t\t\t\t\t\tclones = this._core.clones().length,\n    \t\t\t\t\t\tload = $.proxy(function(i, v) { this.load(v); }, this);\n    \t\t\t\t\t//TODO: Need documentation for this new option\n    \t\t\t\t\tif (settings.lazyLoadEager > 0) {\n    \t\t\t\t\t\tn += settings.lazyLoadEager;\n    \t\t\t\t\t\t// If the carousel is looping also preload images that are to the \"left\"\n    \t\t\t\t\t\tif (settings.loop) {\n                  position -= settings.lazyLoadEager;\n                  n++;\n                }\n    \t\t\t\t\t}\n\n    \t\t\t\t\twhile (i++ < n) {\n    \t\t\t\t\t\tthis.load(clones / 2 + this._core.relative(position));\n    \t\t\t\t\t\tclones && $.each(this._core.clones(this._core.relative(position)), load);\n    \t\t\t\t\t\tposition++;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set the default options\n    \t\tthis._core.options = $.extend({}, Lazy.Defaults, this._core.options);\n\n    \t\t// register event handler\n    \t\tthis._core.$element.on(this._handlers);\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tLazy.Defaults = {\n    \t\tlazyLoad: false,\n    \t\tlazyLoadEager: 0\n    \t};\n\n    \t/**\n    \t * Loads all resources of an item at the specified position.\n    \t * @param {Number} position - The absolute position of the item.\n    \t * @protected\n    \t */\n    \tLazy.prototype.load = function(position) {\n    \t\tvar $item = this._core.$stage.children().eq(position),\n    \t\t\t$elements = $item && $item.find('.owl-lazy');\n\n    \t\tif (!$elements || $.inArray($item.get(0), this._loaded) > -1) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\t$elements.each($.proxy(function(index, element) {\n    \t\t\tvar $element = $(element), image,\n                    url = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src') || $element.attr('data-srcset');\n\n    \t\t\tthis._core.trigger('load', { element: $element, url: url }, 'lazy');\n\n    \t\t\tif ($element.is('img')) {\n    \t\t\t\t$element.one('load.owl.lazy', $.proxy(function() {\n    \t\t\t\t\t$element.css('opacity', 1);\n    \t\t\t\t\tthis._core.trigger('loaded', { element: $element, url: url }, 'lazy');\n    \t\t\t\t}, this)).attr('src', url);\n                } else if ($element.is('source')) {\n                    $element.one('load.owl.lazy', $.proxy(function() {\n                        this._core.trigger('loaded', { element: $element, url: url }, 'lazy');\n                    }, this)).attr('srcset', url);\n    \t\t\t} else {\n    \t\t\t\timage = new Image();\n    \t\t\t\timage.onload = $.proxy(function() {\n    \t\t\t\t\t$element.css({\n    \t\t\t\t\t\t'background-image': 'url(\"' + url + '\")',\n    \t\t\t\t\t\t'opacity': '1'\n    \t\t\t\t\t});\n    \t\t\t\t\tthis._core.trigger('loaded', { element: $element, url: url }, 'lazy');\n    \t\t\t\t}, this);\n    \t\t\t\timage.src = url;\n    \t\t\t}\n    \t\t}, this));\n\n    \t\tthis._loaded.push($item.get(0));\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t * @public\n    \t */\n    \tLazy.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\tfor (handler in this.handlers) {\n    \t\t\tthis._core.$element.off(handler, this.handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the auto height plugin.\n    \t * @class The Auto Height Plugin\n    \t * @param {Owl} carousel - The Owl Carousel\n    \t */\n    \tvar AutoHeight = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\tthis._previousHeight = null;\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.autoHeight) {\n    \t\t\t\t\tthis.update();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'changed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.autoHeight && e.property.name === 'position'){\n    \t\t\t\t\tthis.update();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'loaded.owl.lazy': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.autoHeight\n    \t\t\t\t\t&& e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {\n    \t\t\t\t\tthis.update();\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);\n\n    \t\t// register event handlers\n    \t\tthis._core.$element.on(this._handlers);\n    \t\tthis._intervalId = null;\n    \t\tvar refThis = this;\n\n    \t\t// These changes have been taken from a PR by gavrochelegnou proposed in #1575\n    \t\t// and have been made compatible with the latest jQuery version\n    \t\t$(window).on('load', function() {\n    \t\t\tif (refThis._core.settings.autoHeight) {\n    \t\t\t\trefThis.update();\n    \t\t\t}\n    \t\t});\n\n    \t\t// Autoresize the height of the carousel when window is resized\n    \t\t// When carousel has images, the height is dependent on the width\n    \t\t// and should also change on resize\n    \t\t$(window).resize(function() {\n    \t\t\tif (refThis._core.settings.autoHeight) {\n    \t\t\t\tif (refThis._intervalId != null) {\n    \t\t\t\t\tclearTimeout(refThis._intervalId);\n    \t\t\t\t}\n\n    \t\t\t\trefThis._intervalId = setTimeout(function() {\n    \t\t\t\t\trefThis.update();\n    \t\t\t\t}, 250);\n    \t\t\t}\n    \t\t});\n\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tAutoHeight.Defaults = {\n    \t\tautoHeight: false,\n    \t\tautoHeightClass: 'owl-height'\n    \t};\n\n    \t/**\n    \t * Updates the view.\n    \t */\n    \tAutoHeight.prototype.update = function() {\n    \t\tvar start = this._core._current,\n    \t\t\tend = start + this._core.settings.items,\n    \t\t\tlazyLoadEnabled = this._core.settings.lazyLoad,\n    \t\t\tvisible = this._core.$stage.children().toArray().slice(start, end),\n    \t\t\theights = [],\n    \t\t\tmaxheight = 0;\n\n    \t\t$.each(visible, function(index, item) {\n    \t\t\theights.push($(item).height());\n    \t\t});\n\n    \t\tmaxheight = Math.max.apply(null, heights);\n\n    \t\tif (maxheight <= 1 && lazyLoadEnabled && this._previousHeight) {\n    \t\t\tmaxheight = this._previousHeight;\n    \t\t}\n\n    \t\tthis._previousHeight = maxheight;\n\n    \t\tthis._core.$stage.parent()\n    \t\t\t.height(maxheight)\n    \t\t\t.addClass(this._core.settings.autoHeightClass);\n    \t};\n\n    \tAutoHeight.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] !== 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the video plugin.\n    \t * @class The Video Plugin\n    \t * @param {Owl} carousel - The Owl Carousel\n    \t */\n    \tvar Video = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * Cache all video URLs.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._videos = {};\n\n    \t\t/**\n    \t\t * Current playing item.\n    \t\t * @protected\n    \t\t * @type {jQuery}\n    \t\t */\n    \t\tthis._playing = null;\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @todo The cloned content removale is too late\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace) {\n    \t\t\t\t\tthis._core.register({ type: 'state', name: 'playing', tags: [ 'interacting' ] });\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'resize.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.video && this.isInFullScreen()) {\n    \t\t\t\t\te.preventDefault();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'refreshed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.is('resizing')) {\n    \t\t\t\t\tthis._core.$stage.find('.cloned .owl-video-frame').remove();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'changed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && e.property.name === 'position' && this._playing) {\n    \t\t\t\t\tthis.stop();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (!e.namespace) {\n    \t\t\t\t\treturn;\n    \t\t\t\t}\n\n    \t\t\t\tvar $element = $(e.content).find('.owl-video');\n\n    \t\t\t\tif ($element.length) {\n    \t\t\t\t\t$element.css('display', 'none');\n    \t\t\t\t\tthis.fetch($element, $(e.content));\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, Video.Defaults, this._core.options);\n\n    \t\t// register event handlers\n    \t\tthis._core.$element.on(this._handlers);\n\n    \t\tthis._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function(e) {\n    \t\t\tthis.play(e);\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tVideo.Defaults = {\n    \t\tvideo: false,\n    \t\tvideoHeight: false,\n    \t\tvideoWidth: false\n    \t};\n\n    \t/**\n    \t * Gets the video ID and the type (YouTube/Vimeo/vzaar only).\n    \t * @protected\n    \t * @param {jQuery} target - The target containing the video data.\n    \t * @param {jQuery} item - The item containing the video.\n    \t */\n    \tVideo.prototype.fetch = function(target, item) {\n    \t\t\tvar type = (function() {\n    \t\t\t\t\tif (target.attr('data-vimeo-id')) {\n    \t\t\t\t\t\treturn 'vimeo';\n    \t\t\t\t\t} else if (target.attr('data-vzaar-id')) {\n    \t\t\t\t\t\treturn 'vzaar'\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\treturn 'youtube';\n    \t\t\t\t\t}\n    \t\t\t\t})(),\n    \t\t\t\tid = target.attr('data-vimeo-id') || target.attr('data-youtube-id') || target.attr('data-vzaar-id'),\n    \t\t\t\twidth = target.attr('data-width') || this._core.settings.videoWidth,\n    \t\t\t\theight = target.attr('data-height') || this._core.settings.videoHeight,\n    \t\t\t\turl = target.attr('href');\n\n    \t\tif (url) {\n\n    \t\t\t/*\n    \t\t\t\t\tParses the id's out of the following urls (and probably more):\n    \t\t\t\t\thttps://www.youtube.com/watch?v=:id\n    \t\t\t\t\thttps://youtu.be/:id\n    \t\t\t\t\thttps://vimeo.com/:id\n    \t\t\t\t\thttps://vimeo.com/channels/:channel/:id\n    \t\t\t\t\thttps://vimeo.com/groups/:group/videos/:id\n    \t\t\t\t\thttps://app.vzaar.com/videos/:id\n\n    \t\t\t\t\tVisual example: https://regexper.com/#(http%3A%7Chttps%3A%7C)%5C%2F%5C%2F(player.%7Cwww.%7Capp.)%3F(vimeo%5C.com%7Cyoutu(be%5C.com%7C%5C.be%7Cbe%5C.googleapis%5C.com)%7Cvzaar%5C.com)%5C%2F(video%5C%2F%7Cvideos%5C%2F%7Cembed%5C%2F%7Cchannels%5C%2F.%2B%5C%2F%7Cgroups%5C%2F.%2B%5C%2F%7Cwatch%5C%3Fv%3D%7Cv%5C%2F)%3F(%5BA-Za-z0-9._%25-%5D*)(%5C%26%5CS%2B)%3F\n    \t\t\t*/\n\n    \t\t\tid = url.match(/(http:|https:|)\\/\\/(player.|www.|app.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com|be\\-nocookie\\.com)|vzaar\\.com)\\/(video\\/|videos\\/|embed\\/|channels\\/.+\\/|groups\\/.+\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/);\n\n    \t\t\tif (id[3].indexOf('youtu') > -1) {\n    \t\t\t\ttype = 'youtube';\n    \t\t\t} else if (id[3].indexOf('vimeo') > -1) {\n    \t\t\t\ttype = 'vimeo';\n    \t\t\t} else if (id[3].indexOf('vzaar') > -1) {\n    \t\t\t\ttype = 'vzaar';\n    \t\t\t} else {\n    \t\t\t\tthrow new Error('Video URL not supported.');\n    \t\t\t}\n    \t\t\tid = id[6];\n    \t\t} else {\n    \t\t\tthrow new Error('Missing video URL.');\n    \t\t}\n\n    \t\tthis._videos[url] = {\n    \t\t\ttype: type,\n    \t\t\tid: id,\n    \t\t\twidth: width,\n    \t\t\theight: height\n    \t\t};\n\n    \t\titem.attr('data-video', url);\n\n    \t\tthis.thumbnail(target, this._videos[url]);\n    \t};\n\n    \t/**\n    \t * Creates video thumbnail.\n    \t * @protected\n    \t * @param {jQuery} target - The target containing the video data.\n    \t * @param {Object} info - The video info object.\n    \t * @see `fetch`\n    \t */\n    \tVideo.prototype.thumbnail = function(target, video) {\n    \t\tvar tnLink,\n    \t\t\ticon,\n    \t\t\tpath,\n    \t\t\tdimensions = video.width && video.height ? 'width:' + video.width + 'px;height:' + video.height + 'px;' : '',\n    \t\t\tcustomTn = target.find('img'),\n    \t\t\tsrcType = 'src',\n    \t\t\tlazyClass = '',\n    \t\t\tsettings = this._core.settings,\n    \t\t\tcreate = function(path) {\n    \t\t\t\ticon = '<div class=\"owl-video-play-icon\"></div>';\n\n    \t\t\t\tif (settings.lazyLoad) {\n    \t\t\t\t\ttnLink = $('<div/>',{\n    \t\t\t\t\t\t\"class\": 'owl-video-tn ' + lazyClass,\n    \t\t\t\t\t\t\"srcType\": path\n    \t\t\t\t\t});\n    \t\t\t\t} else {\n    \t\t\t\t\ttnLink = $( '<div/>', {\n    \t\t\t\t\t\t\"class\": \"owl-video-tn\",\n    \t\t\t\t\t\t\"style\": 'opacity:1;background-image:url(' + path + ')'\n    \t\t\t\t\t});\n    \t\t\t\t}\n    \t\t\t\ttarget.after(tnLink);\n    \t\t\t\ttarget.after(icon);\n    \t\t\t};\n\n    \t\t// wrap video content into owl-video-wrapper div\n    \t\ttarget.wrap( $( '<div/>', {\n    \t\t\t\"class\": \"owl-video-wrapper\",\n    \t\t\t\"style\": dimensions\n    \t\t}));\n\n    \t\tif (this._core.settings.lazyLoad) {\n    \t\t\tsrcType = 'data-src';\n    \t\t\tlazyClass = 'owl-lazy';\n    \t\t}\n\n    \t\t// custom thumbnail\n    \t\tif (customTn.length) {\n    \t\t\tcreate(customTn.attr(srcType));\n    \t\t\tcustomTn.remove();\n    \t\t\treturn false;\n    \t\t}\n\n    \t\tif (video.type === 'youtube') {\n    \t\t\tpath = \"//img.youtube.com/vi/\" + video.id + \"/hqdefault.jpg\";\n    \t\t\tcreate(path);\n    \t\t} else if (video.type === 'vimeo') {\n    \t\t\t$.ajax({\n    \t\t\t\ttype: 'GET',\n    \t\t\t\turl: '//vimeo.com/api/v2/video/' + video.id + '.json',\n    \t\t\t\tjsonp: 'callback',\n    \t\t\t\tdataType: 'jsonp',\n    \t\t\t\tsuccess: function(data) {\n    \t\t\t\t\tpath = data[0].thumbnail_large;\n    \t\t\t\t\tcreate(path);\n    \t\t\t\t}\n    \t\t\t});\n    \t\t} else if (video.type === 'vzaar') {\n    \t\t\t$.ajax({\n    \t\t\t\ttype: 'GET',\n    \t\t\t\turl: '//vzaar.com/api/videos/' + video.id + '.json',\n    \t\t\t\tjsonp: 'callback',\n    \t\t\t\tdataType: 'jsonp',\n    \t\t\t\tsuccess: function(data) {\n    \t\t\t\t\tpath = data.framegrab_url;\n    \t\t\t\t\tcreate(path);\n    \t\t\t\t}\n    \t\t\t});\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Stops the current video.\n    \t * @public\n    \t */\n    \tVideo.prototype.stop = function() {\n    \t\tthis._core.trigger('stop', null, 'video');\n    \t\tthis._playing.find('.owl-video-frame').remove();\n    \t\tthis._playing.removeClass('owl-video-playing');\n    \t\tthis._playing = null;\n    \t\tthis._core.leave('playing');\n    \t\tthis._core.trigger('stopped', null, 'video');\n    \t};\n\n    \t/**\n    \t * Starts the current video.\n    \t * @public\n    \t * @param {Event} event - The event arguments.\n    \t */\n    \tVideo.prototype.play = function(event) {\n    \t\tvar target = $(event.target),\n    \t\t\titem = target.closest('.' + this._core.settings.itemClass),\n    \t\t\tvideo = this._videos[item.attr('data-video')],\n    \t\t\twidth = video.width || '100%',\n    \t\t\theight = video.height || this._core.$stage.height(),\n    \t\t\thtml,\n    \t\t\tiframe;\n\n    \t\tif (this._playing) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis._core.enter('playing');\n    \t\tthis._core.trigger('play', null, 'video');\n\n    \t\titem = this._core.items(this._core.relative(item.index()));\n\n    \t\tthis._core.reset(item.index());\n\n    \t\thtml = $( '<iframe frameborder=\"0\" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>' );\n    \t\thtml.attr( 'height', height );\n    \t\thtml.attr( 'width', width );\n    \t\tif (video.type === 'youtube') {\n    \t\t\thtml.attr( 'src', '//www.youtube.com/embed/' + video.id + '?autoplay=1&rel=0&v=' + video.id );\n    \t\t} else if (video.type === 'vimeo') {\n    \t\t\thtml.attr( 'src', '//player.vimeo.com/video/' + video.id + '?autoplay=1' );\n    \t\t} else if (video.type === 'vzaar') {\n    \t\t\thtml.attr( 'src', '//view.vzaar.com/' + video.id + '/player?autoplay=true' );\n    \t\t}\n\n    \t\tiframe = $(html).wrap( '<div class=\"owl-video-frame\" />' ).insertAfter(item.find('.owl-video'));\n\n    \t\tthis._playing = item.addClass('owl-video-playing');\n    \t};\n\n    \t/**\n    \t * Checks whether an video is currently in full screen mode or not.\n    \t * @todo Bad style because looks like a readonly method but changes members.\n    \t * @protected\n    \t * @returns {Boolean}\n    \t */\n    \tVideo.prototype.isInFullScreen = function() {\n    \t\tvar element = document.fullscreenElement || document.mozFullScreenElement ||\n    \t\t\t\tdocument.webkitFullscreenElement;\n\n    \t\treturn element && $(element).parent().hasClass('owl-video-frame');\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t */\n    \tVideo.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\tthis._core.$element.off('click.owl.video');\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.Video = Video;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the animate plugin.\n    \t * @class The Navigation Plugin\n    \t * @param {Owl} scope - The Owl Carousel\n    \t */\n    \tvar Animate = function(scope) {\n    \t\tthis.core = scope;\n    \t\tthis.core.options = $.extend({}, Animate.Defaults, this.core.options);\n    \t\tthis.swapping = true;\n    \t\tthis.previous = undefined;\n    \t\tthis.next = undefined;\n\n    \t\tthis.handlers = {\n    \t\t\t'change.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && e.property.name == 'position') {\n    \t\t\t\t\tthis.previous = this.core.current();\n    \t\t\t\t\tthis.next = e.property.value;\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace) {\n    \t\t\t\t\tthis.swapping = e.type == 'translated';\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'translate.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {\n    \t\t\t\t\tthis.swap();\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\tthis.core.$element.on(this.handlers);\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tAnimate.Defaults = {\n    \t\tanimateOut: false,\n    \t\tanimateIn: false\n    \t};\n\n    \t/**\n    \t * Toggles the animation classes whenever an translations starts.\n    \t * @protected\n    \t * @returns {Boolean|undefined}\n    \t */\n    \tAnimate.prototype.swap = function() {\n\n    \t\tif (this.core.settings.items !== 1) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tif (!$.support.animation || !$.support.transition) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tthis.core.speed(0);\n\n    \t\tvar left,\n    \t\t\tclear = $.proxy(this.clear, this),\n    \t\t\tprevious = this.core.$stage.children().eq(this.previous),\n    \t\t\tnext = this.core.$stage.children().eq(this.next),\n    \t\t\tincoming = this.core.settings.animateIn,\n    \t\t\toutgoing = this.core.settings.animateOut;\n\n    \t\tif (this.core.current() === this.previous) {\n    \t\t\treturn;\n    \t\t}\n\n    \t\tif (outgoing) {\n    \t\t\tleft = this.core.coordinates(this.previous) - this.core.coordinates(this.next);\n    \t\t\tprevious.one($.support.animation.end, clear)\n    \t\t\t\t.css( { 'left': left + 'px' } )\n    \t\t\t\t.addClass('animated owl-animated-out')\n    \t\t\t\t.addClass(outgoing);\n    \t\t}\n\n    \t\tif (incoming) {\n    \t\t\tnext.one($.support.animation.end, clear)\n    \t\t\t\t.addClass('animated owl-animated-in')\n    \t\t\t\t.addClass(incoming);\n    \t\t}\n    \t};\n\n    \tAnimate.prototype.clear = function(e) {\n    \t\t$(e.target).css( { 'left': '' } )\n    \t\t\t.removeClass('animated owl-animated-out owl-animated-in')\n    \t\t\t.removeClass(this.core.settings.animateIn)\n    \t\t\t.removeClass(this.core.settings.animateOut);\n    \t\tthis.core.onTransitionEnd();\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t * @public\n    \t */\n    \tAnimate.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\tfor (handler in this.handlers) {\n    \t\t\tthis.core.$element.off(handler, this.handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.Animate = Animate;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the autoplay plugin.\n    \t * @class The Autoplay Plugin\n    \t * @param {Owl} scope - The Owl Carousel\n    \t */\n    \tvar Autoplay = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * The autoplay timeout id.\n    \t\t * @type {Number}\n    \t\t */\n    \t\tthis._call = null;\n\n    \t\t/**\n    \t\t * Depending on the state of the plugin, this variable contains either\n    \t\t * the start time of the timer or the current timer value if it's\n    \t\t * paused. Since we start in a paused state we initialize the timer\n    \t\t * value.\n    \t\t * @type {Number}\n    \t\t */\n    \t\tthis._time = 0;\n\n    \t\t/**\n    \t\t * Stores the timeout currently used.\n    \t\t * @type {Number}\n    \t\t */\n    \t\tthis._timeout = 0;\n\n    \t\t/**\n    \t\t * Indicates whenever the autoplay is paused.\n    \t\t * @type {Boolean}\n    \t\t */\n    \t\tthis._paused = true;\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'changed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && e.property.name === 'settings') {\n    \t\t\t\t\tif (this._core.settings.autoplay) {\n    \t\t\t\t\t\tthis.play();\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tthis.stop();\n    \t\t\t\t\t}\n    \t\t\t\t} else if (e.namespace && e.property.name === 'position' && this._paused) {\n    \t\t\t\t\t// Reset the timer. This code is triggered when the position\n    \t\t\t\t\t// of the carousel was changed through user interaction.\n    \t\t\t\t\tthis._time = 0;\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.autoplay) {\n    \t\t\t\t\tthis.play();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'play.owl.autoplay': $.proxy(function(e, t, s) {\n    \t\t\t\tif (e.namespace) {\n    \t\t\t\t\tthis.play(t, s);\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'stop.owl.autoplay': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace) {\n    \t\t\t\t\tthis.stop();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'mouseover.owl.autoplay': $.proxy(function() {\n    \t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n    \t\t\t\t\tthis.pause();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'mouseleave.owl.autoplay': $.proxy(function() {\n    \t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n    \t\t\t\t\tthis.play();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'touchstart.owl.core': $.proxy(function() {\n    \t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n    \t\t\t\t\tthis.pause();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'touchend.owl.core': $.proxy(function() {\n    \t\t\t\tif (this._core.settings.autoplayHoverPause) {\n    \t\t\t\t\tthis.play();\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// register event handlers\n    \t\tthis._core.$element.on(this._handlers);\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, Autoplay.Defaults, this._core.options);\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tAutoplay.Defaults = {\n    \t\tautoplay: false,\n    \t\tautoplayTimeout: 5000,\n    \t\tautoplayHoverPause: false,\n    \t\tautoplaySpeed: false\n    \t};\n\n    \t/**\n    \t * Transition to the next slide and set a timeout for the next transition.\n    \t * @private\n    \t * @param {Number} [speed] - The animation speed for the animations.\n    \t */\n    \tAutoplay.prototype._next = function(speed) {\n    \t\tthis._call = window.setTimeout(\n    \t\t\t$.proxy(this._next, this, speed),\n    \t\t\tthis._timeout * (Math.round(this.read() / this._timeout) + 1) - this.read()\n    \t\t);\n\n    \t\tif (this._core.is('interacting') || document.hidden) {\n    \t\t\treturn;\n    \t\t}\n    \t\tthis._core.next(speed || this._core.settings.autoplaySpeed);\n    \t};\n\n    \t/**\n    \t * Reads the current timer value when the timer is playing.\n    \t * @public\n    \t */\n    \tAutoplay.prototype.read = function() {\n    \t\treturn new Date().getTime() - this._time;\n    \t};\n\n    \t/**\n    \t * Starts the autoplay.\n    \t * @public\n    \t * @param {Number} [timeout] - The interval before the next animation starts.\n    \t * @param {Number} [speed] - The animation speed for the animations.\n    \t */\n    \tAutoplay.prototype.play = function(timeout, speed) {\n    \t\tvar elapsed;\n\n    \t\tif (!this._core.is('rotating')) {\n    \t\t\tthis._core.enter('rotating');\n    \t\t}\n\n    \t\ttimeout = timeout || this._core.settings.autoplayTimeout;\n\n    \t\t// Calculate the elapsed time since the last transition. If the carousel\n    \t\t// wasn't playing this calculation will yield zero.\n    \t\telapsed = Math.min(this._time % (this._timeout || timeout), timeout);\n\n    \t\tif (this._paused) {\n    \t\t\t// Start the clock.\n    \t\t\tthis._time = this.read();\n    \t\t\tthis._paused = false;\n    \t\t} else {\n    \t\t\t// Clear the active timeout to allow replacement.\n    \t\t\twindow.clearTimeout(this._call);\n    \t\t}\n\n    \t\t// Adjust the origin of the timer to match the new timeout value.\n    \t\tthis._time += this.read() % timeout - elapsed;\n\n    \t\tthis._timeout = timeout;\n    \t\tthis._call = window.setTimeout($.proxy(this._next, this, speed), timeout - elapsed);\n    \t};\n\n    \t/**\n    \t * Stops the autoplay.\n    \t * @public\n    \t */\n    \tAutoplay.prototype.stop = function() {\n    \t\tif (this._core.is('rotating')) {\n    \t\t\t// Reset the clock.\n    \t\t\tthis._time = 0;\n    \t\t\tthis._paused = true;\n\n    \t\t\twindow.clearTimeout(this._call);\n    \t\t\tthis._core.leave('rotating');\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Pauses the autoplay.\n    \t * @public\n    \t */\n    \tAutoplay.prototype.pause = function() {\n    \t\tif (this._core.is('rotating') && !this._paused) {\n    \t\t\t// Pause the clock.\n    \t\t\tthis._time = this.read();\n    \t\t\tthis._paused = true;\n\n    \t\t\twindow.clearTimeout(this._call);\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t */\n    \tAutoplay.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\tthis.stop();\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the navigation plugin.\n    \t * @class The Navigation Plugin\n    \t * @param {Owl} carousel - The Owl Carousel.\n    \t */\n    \tvar Navigation = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * Indicates whether the plugin is initialized or not.\n    \t\t * @protected\n    \t\t * @type {Boolean}\n    \t\t */\n    \t\tthis._initialized = false;\n\n    \t\t/**\n    \t\t * The current paging indexes.\n    \t\t * @protected\n    \t\t * @type {Array}\n    \t\t */\n    \t\tthis._pages = [];\n\n    \t\t/**\n    \t\t * All DOM elements of the user interface.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._controls = {};\n\n    \t\t/**\n    \t\t * Markup for an indicator.\n    \t\t * @protected\n    \t\t * @type {Array.<String>}\n    \t\t */\n    \t\tthis._templates = [];\n\n    \t\t/**\n    \t\t * The carousel element.\n    \t\t * @type {jQuery}\n    \t\t */\n    \t\tthis.$element = this._core.$element;\n\n    \t\t/**\n    \t\t * Overridden methods of the carousel.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._overrides = {\n    \t\t\tnext: this._core.next,\n    \t\t\tprev: this._core.prev,\n    \t\t\tto: this._core.to\n    \t\t};\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n    \t\t\t\t\tthis._templates.push('<div class=\"' + this._core.settings.dotClass + '\">' +\n    \t\t\t\t\t\t$(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot') + '</div>');\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'added.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n    \t\t\t\t\tthis._templates.splice(e.position, 0, this._templates.pop());\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'remove.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n    \t\t\t\t\tthis._templates.splice(e.position, 1);\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'changed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && e.property.name == 'position') {\n    \t\t\t\t\tthis.draw();\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && !this._initialized) {\n    \t\t\t\t\tthis._core.trigger('initialize', null, 'navigation');\n    \t\t\t\t\tthis.initialize();\n    \t\t\t\t\tthis.update();\n    \t\t\t\t\tthis.draw();\n    \t\t\t\t\tthis._initialized = true;\n    \t\t\t\t\tthis._core.trigger('initialized', null, 'navigation');\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'refreshed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._initialized) {\n    \t\t\t\t\tthis._core.trigger('refresh', null, 'navigation');\n    \t\t\t\t\tthis.update();\n    \t\t\t\t\tthis.draw();\n    \t\t\t\t\tthis._core.trigger('refreshed', null, 'navigation');\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, Navigation.Defaults, this._core.options);\n\n    \t\t// register event handlers\n    \t\tthis.$element.on(this._handlers);\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t * @todo Rename `slideBy` to `navBy`\n    \t */\n    \tNavigation.Defaults = {\n    \t\tnav: false,\n    \t\tnavText: [\n    \t\t\t'<span aria-label=\"' + 'Previous' + '\">&#x2039;</span>',\n    \t\t\t'<span aria-label=\"' + 'Next' + '\">&#x203a;</span>'\n    \t\t],\n    \t\tnavSpeed: false,\n    \t\tnavElement: 'button type=\"button\" role=\"presentation\"',\n    \t\tnavContainer: false,\n    \t\tnavContainerClass: 'owl-nav',\n    \t\tnavClass: [\n    \t\t\t'owl-prev',\n    \t\t\t'owl-next'\n    \t\t],\n    \t\tslideBy: 1,\n    \t\tdotClass: 'owl-dot',\n    \t\tdotsClass: 'owl-dots',\n    \t\tdots: true,\n    \t\tdotsEach: false,\n    \t\tdotsData: false,\n    \t\tdotsSpeed: false,\n    \t\tdotsContainer: false\n    \t};\n\n    \t/**\n    \t * Initializes the layout of the plugin and extends the carousel.\n    \t * @protected\n    \t */\n    \tNavigation.prototype.initialize = function() {\n    \t\tvar override,\n    \t\t\tsettings = this._core.settings;\n\n    \t\t// create DOM structure for relative navigation\n    \t\tthis._controls.$relative = (settings.navContainer ? $(settings.navContainer)\n    \t\t\t: $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');\n\n    \t\tthis._controls.$previous = $('<' + settings.navElement + '>')\n    \t\t\t.addClass(settings.navClass[0])\n    \t\t\t.html(settings.navText[0])\n    \t\t\t.prependTo(this._controls.$relative)\n    \t\t\t.on('click', $.proxy(function(e) {\n    \t\t\t\tthis.prev(settings.navSpeed);\n    \t\t\t}, this));\n    \t\tthis._controls.$next = $('<' + settings.navElement + '>')\n    \t\t\t.addClass(settings.navClass[1])\n    \t\t\t.html(settings.navText[1])\n    \t\t\t.appendTo(this._controls.$relative)\n    \t\t\t.on('click', $.proxy(function(e) {\n    \t\t\t\tthis.next(settings.navSpeed);\n    \t\t\t}, this));\n\n    \t\t// create DOM structure for absolute navigation\n    \t\tif (!settings.dotsData) {\n    \t\t\tthis._templates = [ $('<button role=\"button\">')\n    \t\t\t\t.addClass(settings.dotClass)\n    \t\t\t\t.append($('<span>'))\n    \t\t\t\t.prop('outerHTML') ];\n    \t\t}\n\n    \t\tthis._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer)\n    \t\t\t: $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');\n\n    \t\tthis._controls.$absolute.on('click', 'button', $.proxy(function(e) {\n    \t\t\tvar index = $(e.target).parent().is(this._controls.$absolute)\n    \t\t\t\t? $(e.target).index() : $(e.target).parent().index();\n\n    \t\t\te.preventDefault();\n\n    \t\t\tthis.to(index, settings.dotsSpeed);\n    \t\t}, this));\n\n    \t\t/*$el.on('focusin', function() {\n    \t\t\t$(document).off(\".carousel\");\n\n    \t\t\t$(document).on('keydown.carousel', function(e) {\n    \t\t\t\tif(e.keyCode == 37) {\n    \t\t\t\t\t$el.trigger('prev.owl')\n    \t\t\t\t}\n    \t\t\t\tif(e.keyCode == 39) {\n    \t\t\t\t\t$el.trigger('next.owl')\n    \t\t\t\t}\n    \t\t\t});\n    \t\t});*/\n\n    \t\t// override public methods of the carousel\n    \t\tfor (override in this._overrides) {\n    \t\t\tthis._core[override] = $.proxy(this[override], this);\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t * @protected\n    \t */\n    \tNavigation.prototype.destroy = function() {\n    \t\tvar handler, control, property, override, settings;\n    \t\tsettings = this._core.settings;\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (control in this._controls) {\n    \t\t\tif (control === '$relative' && settings.navContainer) {\n    \t\t\t\tthis._controls[control].html('');\n    \t\t\t} else {\n    \t\t\t\tthis._controls[control].remove();\n    \t\t\t}\n    \t\t}\n    \t\tfor (override in this.overides) {\n    \t\t\tthis._core[override] = this._overrides[override];\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Updates the internal state.\n    \t * @protected\n    \t */\n    \tNavigation.prototype.update = function() {\n    \t\tvar i, j, k,\n    \t\t\tlower = this._core.clones().length / 2,\n    \t\t\tupper = lower + this._core.items().length,\n    \t\t\tmaximum = this._core.maximum(true),\n    \t\t\tsettings = this._core.settings,\n    \t\t\tsize = settings.center || settings.autoWidth || settings.dotsData\n    \t\t\t\t? 1 : settings.dotsEach || settings.items;\n\n    \t\tif (settings.slideBy !== 'page') {\n    \t\t\tsettings.slideBy = Math.min(settings.slideBy, settings.items);\n    \t\t}\n\n    \t\tif (settings.dots || settings.slideBy == 'page') {\n    \t\t\tthis._pages = [];\n\n    \t\t\tfor (i = lower, j = 0, k = 0; i < upper; i++) {\n    \t\t\t\tif (j >= size || j === 0) {\n    \t\t\t\t\tthis._pages.push({\n    \t\t\t\t\t\tstart: Math.min(maximum, i - lower),\n    \t\t\t\t\t\tend: i - lower + size - 1\n    \t\t\t\t\t});\n    \t\t\t\t\tif (Math.min(maximum, i - lower) === maximum) {\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t\tj = 0, ++k;\n    \t\t\t\t}\n    \t\t\t\tj += this._core.mergers(this._core.relative(i));\n    \t\t\t}\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Draws the user interface.\n    \t * @todo The option `dotsData` wont work.\n    \t * @protected\n    \t */\n    \tNavigation.prototype.draw = function() {\n    \t\tvar difference,\n    \t\t\tsettings = this._core.settings,\n    \t\t\tdisabled = this._core.items().length <= settings.items,\n    \t\t\tindex = this._core.relative(this._core.current()),\n    \t\t\tloop = settings.loop || settings.rewind;\n\n    \t\tthis._controls.$relative.toggleClass('disabled', !settings.nav || disabled);\n\n    \t\tif (settings.nav) {\n    \t\t\tthis._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));\n    \t\t\tthis._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));\n    \t\t}\n\n    \t\tthis._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);\n\n    \t\tif (settings.dots) {\n    \t\t\tdifference = this._pages.length - this._controls.$absolute.children().length;\n\n    \t\t\tif (settings.dotsData && difference !== 0) {\n    \t\t\t\tthis._controls.$absolute.html(this._templates.join(''));\n    \t\t\t} else if (difference > 0) {\n    \t\t\t\tthis._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));\n    \t\t\t} else if (difference < 0) {\n    \t\t\t\tthis._controls.$absolute.children().slice(difference).remove();\n    \t\t\t}\n\n    \t\t\tthis._controls.$absolute.find('.active').removeClass('active');\n    \t\t\tthis._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');\n    \t\t}\n    \t};\n\n    \t/**\n    \t * Extends event data.\n    \t * @protected\n    \t * @param {Event} event - The event object which gets thrown.\n    \t */\n    \tNavigation.prototype.onTrigger = function(event) {\n    \t\tvar settings = this._core.settings;\n\n    \t\tevent.page = {\n    \t\t\tindex: $.inArray(this.current(), this._pages),\n    \t\t\tcount: this._pages.length,\n    \t\t\tsize: settings && (settings.center || settings.autoWidth || settings.dotsData\n    \t\t\t\t? 1 : settings.dotsEach || settings.items)\n    \t\t};\n    \t};\n\n    \t/**\n    \t * Gets the current page position of the carousel.\n    \t * @protected\n    \t * @returns {Number}\n    \t */\n    \tNavigation.prototype.current = function() {\n    \t\tvar current = this._core.relative(this._core.current());\n    \t\treturn $.grep(this._pages, $.proxy(function(page, index) {\n    \t\t\treturn page.start <= current && page.end >= current;\n    \t\t}, this)).pop();\n    \t};\n\n    \t/**\n    \t * Gets the current succesor/predecessor position.\n    \t * @protected\n    \t * @returns {Number}\n    \t */\n    \tNavigation.prototype.getPosition = function(successor) {\n    \t\tvar position, length,\n    \t\t\tsettings = this._core.settings;\n\n    \t\tif (settings.slideBy == 'page') {\n    \t\t\tposition = $.inArray(this.current(), this._pages);\n    \t\t\tlength = this._pages.length;\n    \t\t\tsuccessor ? ++position : --position;\n    \t\t\tposition = this._pages[((position % length) + length) % length].start;\n    \t\t} else {\n    \t\t\tposition = this._core.relative(this._core.current());\n    \t\t\tlength = this._core.items().length;\n    \t\t\tsuccessor ? position += settings.slideBy : position -= settings.slideBy;\n    \t\t}\n\n    \t\treturn position;\n    \t};\n\n    \t/**\n    \t * Slides to the next item or page.\n    \t * @public\n    \t * @param {Number} [speed=false] - The time in milliseconds for the transition.\n    \t */\n    \tNavigation.prototype.next = function(speed) {\n    \t\t$.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);\n    \t};\n\n    \t/**\n    \t * Slides to the previous item or page.\n    \t * @public\n    \t * @param {Number} [speed=false] - The time in milliseconds for the transition.\n    \t */\n    \tNavigation.prototype.prev = function(speed) {\n    \t\t$.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);\n    \t};\n\n    \t/**\n    \t * Slides to the specified item or page.\n    \t * @public\n    \t * @param {Number} position - The position of the item or page.\n    \t * @param {Number} [speed] - The time in milliseconds for the transition.\n    \t * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.\n    \t */\n    \tNavigation.prototype.to = function(position, speed, standard) {\n    \t\tvar length;\n\n    \t\tif (!standard && this._pages.length) {\n    \t\t\tlength = this._pages.length;\n    \t\t\t$.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);\n    \t\t} else {\n    \t\t\t$.proxy(this._overrides.to, this._core)(position, speed);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \t/**\n    \t * Creates the hash plugin.\n    \t * @class The Hash Plugin\n    \t * @param {Owl} carousel - The Owl Carousel\n    \t */\n    \tvar Hash = function(carousel) {\n    \t\t/**\n    \t\t * Reference to the core.\n    \t\t * @protected\n    \t\t * @type {Owl}\n    \t\t */\n    \t\tthis._core = carousel;\n\n    \t\t/**\n    \t\t * Hash index for the items.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._hashes = {};\n\n    \t\t/**\n    \t\t * The carousel element.\n    \t\t * @type {jQuery}\n    \t\t */\n    \t\tthis.$element = this._core.$element;\n\n    \t\t/**\n    \t\t * All event handlers.\n    \t\t * @protected\n    \t\t * @type {Object}\n    \t\t */\n    \t\tthis._handlers = {\n    \t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && this._core.settings.startPosition === 'URLHash') {\n    \t\t\t\t\t$(window).trigger('hashchange.owl.navigation');\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace) {\n    \t\t\t\t\tvar hash = $(e.content).find('[data-hash]').addBack('[data-hash]').attr('data-hash');\n\n    \t\t\t\t\tif (!hash) {\n    \t\t\t\t\t\treturn;\n    \t\t\t\t\t}\n\n    \t\t\t\t\tthis._hashes[hash] = e.content;\n    \t\t\t\t}\n    \t\t\t}, this),\n    \t\t\t'changed.owl.carousel': $.proxy(function(e) {\n    \t\t\t\tif (e.namespace && e.property.name === 'position') {\n    \t\t\t\t\tvar current = this._core.items(this._core.relative(this._core.current())),\n    \t\t\t\t\t\thash = $.map(this._hashes, function(item, hash) {\n    \t\t\t\t\t\t\treturn item === current ? hash : null;\n    \t\t\t\t\t\t}).join();\n\n    \t\t\t\t\tif (!hash || window.location.hash.slice(1) === hash) {\n    \t\t\t\t\t\treturn;\n    \t\t\t\t\t}\n\n    \t\t\t\t\twindow.location.hash = hash;\n    \t\t\t\t}\n    \t\t\t}, this)\n    \t\t};\n\n    \t\t// set default options\n    \t\tthis._core.options = $.extend({}, Hash.Defaults, this._core.options);\n\n    \t\t// register the event handlers\n    \t\tthis.$element.on(this._handlers);\n\n    \t\t// register event listener for hash navigation\n    \t\t$(window).on('hashchange.owl.navigation', $.proxy(function(e) {\n    \t\t\tvar hash = window.location.hash.substring(1),\n    \t\t\t\titems = this._core.$stage.children(),\n    \t\t\t\tposition = this._hashes[hash] && items.index(this._hashes[hash]);\n\n    \t\t\tif (position === undefined || position === this._core.current()) {\n    \t\t\t\treturn;\n    \t\t\t}\n\n    \t\t\tthis._core.to(this._core.relative(position), false, true);\n    \t\t}, this));\n    \t};\n\n    \t/**\n    \t * Default options.\n    \t * @public\n    \t */\n    \tHash.Defaults = {\n    \t\tURLhashListener: false\n    \t};\n\n    \t/**\n    \t * Destroys the plugin.\n    \t * @public\n    \t */\n    \tHash.prototype.destroy = function() {\n    \t\tvar handler, property;\n\n    \t\t$(window).off('hashchange.owl.navigation');\n\n    \t\tfor (handler in this._handlers) {\n    \t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n    \t\t}\n    \t\tfor (property in Object.getOwnPropertyNames(this)) {\n    \t\t\ttypeof this[property] != 'function' && (this[property] = null);\n    \t\t}\n    \t};\n\n    \t$.fn.owlCarousel.Constructor.Plugins.Hash = Hash;\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n    (function($, window, document, undefined) {\n\n    \tvar style = $('<support>').get(0).style,\n    \t\tprefixes = 'Webkit Moz O ms'.split(' '),\n    \t\tevents = {\n    \t\t\ttransition: {\n    \t\t\t\tend: {\n    \t\t\t\t\tWebkitTransition: 'webkitTransitionEnd',\n    \t\t\t\t\tMozTransition: 'transitionend',\n    \t\t\t\t\tOTransition: 'oTransitionEnd',\n    \t\t\t\t\ttransition: 'transitionend'\n    \t\t\t\t}\n    \t\t\t},\n    \t\t\tanimation: {\n    \t\t\t\tend: {\n    \t\t\t\t\tWebkitAnimation: 'webkitAnimationEnd',\n    \t\t\t\t\tMozAnimation: 'animationend',\n    \t\t\t\t\tOAnimation: 'oAnimationEnd',\n    \t\t\t\t\tanimation: 'animationend'\n    \t\t\t\t}\n    \t\t\t}\n    \t\t},\n    \t\ttests = {\n    \t\t\tcsstransforms: function() {\n    \t\t\t\treturn !!test('transform');\n    \t\t\t},\n    \t\t\tcsstransforms3d: function() {\n    \t\t\t\treturn !!test('perspective');\n    \t\t\t},\n    \t\t\tcsstransitions: function() {\n    \t\t\t\treturn !!test('transition');\n    \t\t\t},\n    \t\t\tcssanimations: function() {\n    \t\t\t\treturn !!test('animation');\n    \t\t\t}\n    \t\t};\n\n    \tfunction test(property, prefixed) {\n    \t\tvar result = false,\n    \t\t\tupper = property.charAt(0).toUpperCase() + property.slice(1);\n\n    \t\t$.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function(i, property) {\n    \t\t\tif (style[property] !== undefined) {\n    \t\t\t\tresult = prefixed ? property : true;\n    \t\t\t\treturn false;\n    \t\t\t}\n    \t\t});\n\n    \t\treturn result;\n    \t}\n\n    \tfunction prefixed(property) {\n    \t\treturn test(property, true);\n    \t}\n\n    \tif (tests.csstransitions()) {\n    \t\t/* jshint -W053 */\n    \t\t$.support.transition = new String(prefixed('transition'));\n    \t\t$.support.transition.end = events.transition.end[ $.support.transition ];\n    \t}\n\n    \tif (tests.cssanimations()) {\n    \t\t/* jshint -W053 */\n    \t\t$.support.animation = new String(prefixed('animation'));\n    \t\t$.support.animation.end = events.animation.end[ $.support.animation ];\n    \t}\n\n    \tif (tests.csstransforms()) {\n    \t\t/* jshint -W053 */\n    \t\t$.support.transform = new String(prefixed('transform'));\n    \t\t$.support.transform3d = tests.csstransforms3d();\n    \t}\n\n    })(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);\n\n    var $ = __webpack_provided_window_dot_jQuery;\r\n    var ReactOwlCarousel = /** @class */ (function (_super) {\r\n        __extends(ReactOwlCarousel, _super);\r\n        function ReactOwlCarousel(props) {\r\n            var _this = _super.call(this, props) || this;\r\n            _this.containerRef = function (inst) {\r\n                _this.container = inst;\r\n            };\r\n            var _a = filterOptions(_this.props), options = _a[0], propsWithoutOptions = _a[1];\r\n            _this.options = options;\r\n            _this.propsWithoutOptions = propsWithoutOptions;\r\n            return _this;\r\n        }\r\n        ReactOwlCarousel.prototype.componentDidMount = function () {\r\n            this.$ele = $(this.container);\r\n            this.create();\r\n        };\r\n        ReactOwlCarousel.prototype.UNSAFE_componentWillReceiveProps = function () {\r\n            this.destory();\r\n        };\r\n        ReactOwlCarousel.prototype.componentDidUpdate = function () {\r\n            var _a = filterOptions(this.props), options = _a[0], propsWithoutOptions = _a[1];\r\n            this.options = options;\r\n            this.propsWithoutOptions = propsWithoutOptions;\r\n            this.create();\r\n        };\r\n        ReactOwlCarousel.prototype.next = function (speed) {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            if (typeof speed === 'number') {\r\n                this.$ele.trigger('next.owl.carousel', [speed]);\r\n            }\r\n            else {\r\n                this.$ele.trigger('next.owl.carousel', speed);\r\n            }\r\n        };\r\n        ReactOwlCarousel.prototype.prev = function (speed) {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            if (typeof speed === 'number') {\r\n                this.$ele.trigger('prev.owl.carousel', [speed]);\r\n            }\r\n            else {\r\n                this.$ele.trigger('prev.owl.carousel', speed);\r\n            }\r\n        };\r\n        ReactOwlCarousel.prototype.to = function (position, speed) {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            if (typeof position === 'number' && typeof speed === 'number') {\r\n                this.$ele.trigger('to.owl.carousel', [position, speed]);\r\n            }\r\n            else {\r\n                this.$ele.trigger('to.owl.carousel');\r\n            }\r\n        };\r\n        ReactOwlCarousel.prototype.create = function (options) {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            this.$ele.owlCarousel(options || this.options);\r\n        };\r\n        ReactOwlCarousel.prototype.destory = function () {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            this.$ele.trigger('destroy.owl.carousel');\r\n        };\r\n        ReactOwlCarousel.prototype.play = function (timeout, speed) {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            if (typeof timeout === 'number' && typeof speed === 'number') {\r\n                this.$ele.trigger('play.owl.autoplay', [timeout, speed]);\r\n            }\r\n            else {\r\n                this.$ele.trigger('play.owl.autoplay');\r\n            }\r\n        };\r\n        ReactOwlCarousel.prototype.stop = function () {\r\n            if (!this.$ele)\r\n                throw new Error('OwlCarousel is not created');\r\n            this.$ele.trigger('stop.owl.autoplay');\r\n        };\r\n        ReactOwlCarousel.prototype.render = function () {\r\n            var _a = this.propsWithoutOptions, className = _a.className, props = __rest(_a, [\"className\"]);\r\n            return (React__default.createElement(\"div\", __assign({ className: \"owl-carousel \" + className, ref: this.containerRef }, props)));\r\n        };\r\n        return ReactOwlCarousel;\r\n    }(React.Component));\r\n    var OPTIONS = new Set([\r\n        'items',\r\n        'margin',\r\n        'loop',\r\n        'center',\r\n        'mouseDrag',\r\n        'touchDrag',\r\n        'pullDrag',\r\n        'freeDrag',\r\n        'stagePadding',\r\n        'merge',\r\n        'mergeFit',\r\n        'autoWidth',\r\n        'startPosition',\r\n        'URLhashListener',\r\n        'nav',\r\n        'rewind',\r\n        'navText',\r\n        'navElement',\r\n        'slideBy',\r\n        'dots',\r\n        'dotsEach',\r\n        'dotData',\r\n        'lazyLoad',\r\n        'lazyContent',\r\n        'autoplay',\r\n        'autoplayTimeout',\r\n        'autoplayHoverPause',\r\n        'smartSpeed',\r\n        'fluidSpeed',\r\n        'autoplaySpeed',\r\n        'navSpeed',\r\n        'dotsSpeed',\r\n        'dragEndSpeed',\r\n        'callbacks',\r\n        'responsive',\r\n        'responsiveRefreshRate',\r\n        'responsiveBaseElement',\r\n        'video',\r\n        'videoHeight',\r\n        'videoWidth',\r\n        'animateOut',\r\n        'animateIn',\r\n        'fallbackEasing',\r\n        'info',\r\n        'nestedItemSelector',\r\n        'itemElement',\r\n        'stageElement',\r\n        'navContainer',\r\n        'dotsContainer',\r\n        // 'CLASSES'\r\n        'refreshClass',\r\n        'loadingClass',\r\n        'loadedClass',\r\n        'rtlClass',\r\n        'dragClass',\r\n        'grabClass',\r\n        'stageClass',\r\n        'stageOuterClass',\r\n        'navContainerClass',\r\n        'navClass',\r\n        'controlsClass',\r\n        'dotClass',\r\n        'dotsClass',\r\n        'autoHeightClass',\r\n        'responsiveClass',\r\n        // 'EVENTS'\r\n        'onInitialize',\r\n        'onInitialized',\r\n        'onResize',\r\n        'onResized',\r\n        'onRefresh',\r\n        'onRefreshed',\r\n        'onDrag',\r\n        'onDragged',\r\n        'onTranslate',\r\n        'onTranslated',\r\n        'onChange',\r\n        'onChanged',\r\n        'onLoadLazy',\r\n        'onLoadedLazy',\r\n        'onStopVideo',\r\n        'onPlayVideo',\r\n    ]);\r\n    function filterOptions(item) {\r\n        var options = {};\r\n        var propsWithoutOptions = {};\r\n        Object.keys(item).forEach(function (key) {\r\n            if (OPTIONS.has(key)) {\r\n                options[key] = item[key];\r\n            }\r\n            else {\r\n                propsWithoutOptions[key] = item[key];\r\n            }\r\n        });\r\n        return [options, propsWithoutOptions];\r\n    }\n\n    return ReactOwlCarousel;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW93bC1jYXJvdXNlbC91bWQvT3dsQ2Fyb3VzZWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUksS0FBNEQsNEJBQTRCLG1CQUFPLENBQUMsNEVBQU87QUFDM0csSUFBSSxDQUNpRDtBQUNyRCxDQUFDLDJCQUEyQjs7QUFFNUI7O0FBRUE7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUNuRiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxjQUFjO0FBQy9FO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixPQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0I7QUFDcEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7O0FBRVI7QUFDQTtBQUNBLFFBQVE7O0FBRVI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkI7QUFDN0IsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7QUFFUiw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCLFlBQVkscUNBQXFDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxZQUFZLDBDQUEwQztBQUN0Rjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvQkFBb0I7QUFDdEM7QUFDQTtBQUNBLDRDQUE0QyxlQUFlOztBQUUzRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUMscUJBQXFCOztBQUV0RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQjtBQUN0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsV0FBVztBQUMzQixrQkFBa0IsUUFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxjQUFjO0FBQzVGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFD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QUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQztBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxLQUFLLGtCQUFrQixvQ0FBYTtBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBSztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBLHNDQUFzQzs7QUFFdEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQsa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7O0FBRVI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsT0FBTyxFQUFFOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxxQ0FBcUMsV0FBVztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxLQUFLLGtCQUFrQixvQ0FBYTtBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBSztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSOztBQUVBO0FBQ0Esc0NBQXNDOztBQUV0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxLQUFLLGtCQUFrQixvQ0FBYTtBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEtBQUssa0JBQWtCLG9DQUFhOztBQUVwQyxZQUFZLG9DQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdFQUFnRTtBQUNuSTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtb3dsLWNhcm91c2VsL3VtZC9Pd2xDYXJvdXNlbC5qcz9mODE3Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gICAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJ3JlYWN0JykpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydyZWFjdCddLCBmYWN0b3J5KSA6XG4gICAgKGdsb2JhbC5SZWFjdE93bENhcm91c2VsID0gZmFjdG9yeShnbG9iYWwuUmVhY3QpKTtcbn0odGhpcywgKGZ1bmN0aW9uIChSZWFjdCkgeyAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgUmVhY3RfX2RlZmF1bHQgPSAnZGVmYXVsdCcgaW4gUmVhY3QgPyBSZWFjdFsnZGVmYXVsdCddIDogUmVhY3Q7XG5cbiAgICAvKiEgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuICAgIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXHJcbiAgICB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxyXG4gICAgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuXHJcbiAgICBUSElTIENPREUgSVMgUFJPVklERUQgT04gQU4gKkFTIElTKiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAgICBLSU5ELCBFSVRIRVIgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgV0lUSE9VVCBMSU1JVEFUSU9OIEFOWSBJTVBMSUVEXHJcbiAgICBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgVElUTEUsIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLFxyXG4gICAgTUVSQ0hBTlRBQkxJVFkgT1IgTk9OLUlORlJJTkdFTUVOVC5cclxuXHJcbiAgICBTZWUgdGhlIEFwYWNoZSBWZXJzaW9uIDIuMCBMaWNlbnNlIGZvciBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcclxuICAgIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbiAgICAvKiBnbG9iYWwgUmVmbGVjdCwgUHJvbWlzZSAqL1xyXG5cclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIF9fZXh0ZW5kcyhkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiBfX2Fzc2lnbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBfX3Jlc3QocywgZSkge1xyXG4gICAgICAgIHZhciB0ID0ge307XHJcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXHJcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDApXHJcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE93bCBDYXJvdXNlbCB2Mi4zLjRcbiAgICAgKiBDb3B5cmlnaHQgMjAxMy0yMDE4IERhdmlkIERldXRzY2hcbiAgICAgKiBMaWNlbnNlZCB1bmRlcjogU0VFIExJQ0VOU0UgSU4gaHR0cHM6Ly9naXRodWIuY29tL093bENhcm91c2VsMi9Pd2xDYXJvdXNlbDIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICAgICAqL1xuICAgIChmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDcmVhdGVzIGEgY2Fyb3VzZWwuXG4gICAgXHQgKiBAY2xhc3MgVGhlIE93bCBDYXJvdXNlbC5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8alF1ZXJ5fSBlbGVtZW50IC0gVGhlIGVsZW1lbnQgdG8gY3JlYXRlIHRoZSBjYXJvdXNlbCBmb3IuXG4gICAgXHQgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gVGhlIG9wdGlvbnNcbiAgICBcdCAqL1xuICAgIFx0ZnVuY3Rpb24gT3dsKGVsZW1lbnQsIG9wdGlvbnMpIHtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQ3VycmVudCBzZXR0aW5ncyBmb3IgdGhlIGNhcm91c2VsLlxuICAgIFx0XHQgKiBAcHVibGljXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLnNldHRpbmdzID0gbnVsbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQ3VycmVudCBvcHRpb25zIHNldCBieSB0aGUgY2FsbGVyIGluY2x1ZGluZyBkZWZhdWx0cy5cbiAgICBcdFx0ICogQHB1YmxpY1xuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIE93bC5EZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFBsdWdpbiBlbGVtZW50LlxuICAgIFx0XHQgKiBAcHVibGljXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogUHJveGllZCBldmVudCBoYW5kbGVycy5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5faGFuZGxlcnMgPSB7fTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogUmVmZXJlbmNlcyB0byB0aGUgcnVubmluZyBwbHVnaW5zIG9mIHRoaXMgY2Fyb3VzZWwuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3BsdWdpbnMgPSB7fTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQ3VycmVudGx5IHN1cHByZXNzZWQgZXZlbnRzIHRvIHByZXZlbnQgdGhlbSBmcm9tIGJlaW5nIHJldHJpZ2dlcmVkLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9zdXByZXNzID0ge307XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEFic29sdXRlIGN1cnJlbnQgcG9zaXRpb24uXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2N1cnJlbnQgPSBudWxsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBBbmltYXRpb24gc3BlZWQgaW4gbWlsbGlzZWNvbmRzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9zcGVlZCA9IG51bGw7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIENvb3JkaW5hdGVzIG9mIGFsbCBpdGVtcyBpbiBwaXhlbC5cbiAgICBcdFx0ICogQHRvZG8gVGhlIG5hbWUgb2YgdGhpcyBtZW1iZXIgaXMgbWlzc2xlYWRpbmcuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2Nvb3JkaW5hdGVzID0gW107XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEN1cnJlbnQgYnJlYWtwb2ludC5cbiAgICBcdFx0ICogQHRvZG8gUmVhbCBtZWRpYSBxdWVyaWVzIHdvdWxkIGJlIG5pY2UuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2JyZWFrcG9pbnQgPSBudWxsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBDdXJyZW50IHdpZHRoIG9mIHRoZSBwbHVnaW4gZWxlbWVudC5cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3dpZHRoID0gbnVsbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQWxsIHJlYWwgaXRlbXMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2l0ZW1zID0gW107XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEFsbCBjbG9uZWQgaXRlbXMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2Nsb25lcyA9IFtdO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBNZXJnZSB2YWx1ZXMgb2YgYWxsIGl0ZW1zLlxuICAgIFx0XHQgKiBAdG9kbyBNYXliZSB0aGlzIGNvdWxkIGJlIHBhcnQgb2YgYSBwbHVnaW4uXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX21lcmdlcnMgPSBbXTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogV2lkdGhzIG9mIGFsbCBpdGVtcy5cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3dpZHRocyA9IFtdO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBJbnZhbGlkYXRlZCBwYXJ0cyB3aXRoaW4gdGhlIHVwZGF0ZSBwcm9jZXNzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9pbnZhbGlkYXRlZCA9IHt9O1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBPcmRlcmVkIGxpc3Qgb2Ygd29ya2VycyBmb3IgdGhlIHVwZGF0ZSBwcm9jZXNzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9waXBlID0gW107XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEN1cnJlbnQgc3RhdGUgaW5mb3JtYXRpb24gZm9yIHRoZSBkcmFnIG9wZXJhdGlvbi5cbiAgICBcdFx0ICogQHRvZG8gIzI2MVxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9kcmFnID0ge1xuICAgIFx0XHRcdHRpbWU6IG51bGwsXG4gICAgXHRcdFx0dGFyZ2V0OiBudWxsLFxuICAgIFx0XHRcdHBvaW50ZXI6IG51bGwsXG4gICAgXHRcdFx0c3RhZ2U6IHtcbiAgICBcdFx0XHRcdHN0YXJ0OiBudWxsLFxuICAgIFx0XHRcdFx0Y3VycmVudDogbnVsbFxuICAgIFx0XHRcdH0sXG4gICAgXHRcdFx0ZGlyZWN0aW9uOiBudWxsXG4gICAgXHRcdH07XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEN1cnJlbnQgc3RhdGUgaW5mb3JtYXRpb24gYW5kIHRoZWlyIHRhZ3MuXG4gICAgXHRcdCAqIEB0eXBlIHtPYmplY3R9XG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3N0YXRlcyA9IHtcbiAgICBcdFx0XHRjdXJyZW50OiB7fSxcbiAgICBcdFx0XHR0YWdzOiB7XG4gICAgXHRcdFx0XHQnaW5pdGlhbGl6aW5nJzogWyAnYnVzeScgXSxcbiAgICBcdFx0XHRcdCdhbmltYXRpbmcnOiBbICdidXN5JyBdLFxuICAgIFx0XHRcdFx0J2RyYWdnaW5nJzogWyAnaW50ZXJhY3RpbmcnIF1cbiAgICBcdFx0XHR9XG4gICAgXHRcdH07XG5cbiAgICBcdFx0JC5lYWNoKFsgJ29uUmVzaXplJywgJ29uVGhyb3R0bGVkUmVzaXplJyBdLCAkLnByb3h5KGZ1bmN0aW9uKGksIGhhbmRsZXIpIHtcbiAgICBcdFx0XHR0aGlzLl9oYW5kbGVyc1toYW5kbGVyXSA9ICQucHJveHkodGhpc1toYW5kbGVyXSwgdGhpcyk7XG4gICAgXHRcdH0sIHRoaXMpKTtcblxuICAgIFx0XHQkLmVhY2goT3dsLlBsdWdpbnMsICQucHJveHkoZnVuY3Rpb24oa2V5LCBwbHVnaW4pIHtcbiAgICBcdFx0XHR0aGlzLl9wbHVnaW5zW2tleS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIGtleS5zbGljZSgxKV1cbiAgICBcdFx0XHRcdD0gbmV3IHBsdWdpbih0aGlzKTtcbiAgICBcdFx0fSwgdGhpcykpO1xuXG4gICAgXHRcdCQuZWFjaChPd2wuV29ya2VycywgJC5wcm94eShmdW5jdGlvbihwcmlvcml0eSwgd29ya2VyKSB7XG4gICAgXHRcdFx0dGhpcy5fcGlwZS5wdXNoKHtcbiAgICBcdFx0XHRcdCdmaWx0ZXInOiB3b3JrZXIuZmlsdGVyLFxuICAgIFx0XHRcdFx0J3J1bic6ICQucHJveHkod29ya2VyLnJ1biwgdGhpcylcbiAgICBcdFx0XHR9KTtcbiAgICBcdFx0fSwgdGhpcykpO1xuXG4gICAgXHRcdHRoaXMuc2V0dXAoKTtcbiAgICBcdFx0dGhpcy5pbml0aWFsaXplKCk7XG4gICAgXHR9XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRGVmYXVsdCBvcHRpb25zIGZvciB0aGUgY2Fyb3VzZWwuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKi9cbiAgICBcdE93bC5EZWZhdWx0cyA9IHtcbiAgICBcdFx0aXRlbXM6IDMsXG4gICAgXHRcdGxvb3A6IGZhbHNlLFxuICAgIFx0XHRjZW50ZXI6IGZhbHNlLFxuICAgIFx0XHRyZXdpbmQ6IGZhbHNlLFxuICAgIFx0XHRjaGVja1Zpc2liaWxpdHk6IHRydWUsXG5cbiAgICBcdFx0bW91c2VEcmFnOiB0cnVlLFxuICAgIFx0XHR0b3VjaERyYWc6IHRydWUsXG4gICAgXHRcdHB1bGxEcmFnOiB0cnVlLFxuICAgIFx0XHRmcmVlRHJhZzogZmFsc2UsXG5cbiAgICBcdFx0bWFyZ2luOiAwLFxuICAgIFx0XHRzdGFnZVBhZGRpbmc6IDAsXG5cbiAgICBcdFx0bWVyZ2U6IGZhbHNlLFxuICAgIFx0XHRtZXJnZUZpdDogdHJ1ZSxcbiAgICBcdFx0YXV0b1dpZHRoOiBmYWxzZSxcblxuICAgIFx0XHRzdGFydFBvc2l0aW9uOiAwLFxuICAgIFx0XHRydGw6IGZhbHNlLFxuXG4gICAgXHRcdHNtYXJ0U3BlZWQ6IDI1MCxcbiAgICBcdFx0Zmx1aWRTcGVlZDogZmFsc2UsXG4gICAgXHRcdGRyYWdFbmRTcGVlZDogZmFsc2UsXG5cbiAgICBcdFx0cmVzcG9uc2l2ZToge30sXG4gICAgXHRcdHJlc3BvbnNpdmVSZWZyZXNoUmF0ZTogMjAwLFxuICAgIFx0XHRyZXNwb25zaXZlQmFzZUVsZW1lbnQ6IHdpbmRvdyxcblxuICAgIFx0XHRmYWxsYmFja0Vhc2luZzogJ3N3aW5nJyxcbiAgICBcdFx0c2xpZGVUcmFuc2l0aW9uOiAnJyxcblxuICAgIFx0XHRpbmZvOiBmYWxzZSxcblxuICAgIFx0XHRuZXN0ZWRJdGVtU2VsZWN0b3I6IGZhbHNlLFxuICAgIFx0XHRpdGVtRWxlbWVudDogJ2RpdicsXG4gICAgXHRcdHN0YWdlRWxlbWVudDogJ2RpdicsXG5cbiAgICBcdFx0cmVmcmVzaENsYXNzOiAnb3dsLXJlZnJlc2gnLFxuICAgIFx0XHRsb2FkZWRDbGFzczogJ293bC1sb2FkZWQnLFxuICAgIFx0XHRsb2FkaW5nQ2xhc3M6ICdvd2wtbG9hZGluZycsXG4gICAgXHRcdHJ0bENsYXNzOiAnb3dsLXJ0bCcsXG4gICAgXHRcdHJlc3BvbnNpdmVDbGFzczogJ293bC1yZXNwb25zaXZlJyxcbiAgICBcdFx0ZHJhZ0NsYXNzOiAnb3dsLWRyYWcnLFxuICAgIFx0XHRpdGVtQ2xhc3M6ICdvd2wtaXRlbScsXG4gICAgXHRcdHN0YWdlQ2xhc3M6ICdvd2wtc3RhZ2UnLFxuICAgIFx0XHRzdGFnZU91dGVyQ2xhc3M6ICdvd2wtc3RhZ2Utb3V0ZXInLFxuICAgIFx0XHRncmFiQ2xhc3M6ICdvd2wtZ3JhYidcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRW51bWVyYXRpb24gZm9yIHdpZHRoLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHJlYWRvbmx5XG4gICAgXHQgKiBAZW51bSB7U3RyaW5nfVxuICAgIFx0ICovXG4gICAgXHRPd2wuV2lkdGggPSB7XG4gICAgXHRcdERlZmF1bHQ6ICdkZWZhdWx0JyxcbiAgICBcdFx0SW5uZXI6ICdpbm5lcicsXG4gICAgXHRcdE91dGVyOiAnb3V0ZXInXG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEVudW1lcmF0aW9uIGZvciB0eXBlcy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEByZWFkb25seVxuICAgIFx0ICogQGVudW0ge1N0cmluZ31cbiAgICBcdCAqL1xuICAgIFx0T3dsLlR5cGUgPSB7XG4gICAgXHRcdEV2ZW50OiAnZXZlbnQnLFxuICAgIFx0XHRTdGF0ZTogJ3N0YXRlJ1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDb250YWlucyBhbGwgcmVnaXN0ZXJlZCBwbHVnaW5zLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRPd2wuUGx1Z2lucyA9IHt9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIExpc3Qgb2Ygd29ya2VycyBpbnZvbHZlZCBpbiB0aGUgdXBkYXRlIHByb2Nlc3MuXG4gICAgXHQgKi9cbiAgICBcdE93bC5Xb3JrZXJzID0gWyB7XG4gICAgXHRcdGZpbHRlcjogWyAnd2lkdGgnLCAnc2V0dGluZ3MnIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0dGhpcy5fd2lkdGggPSB0aGlzLiRlbGVtZW50LndpZHRoKCk7XG4gICAgXHRcdH1cbiAgICBcdH0sIHtcbiAgICBcdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdpdGVtcycsICdzZXR0aW5ncycgXSxcbiAgICBcdFx0cnVuOiBmdW5jdGlvbihjYWNoZSkge1xuICAgIFx0XHRcdGNhY2hlLmN1cnJlbnQgPSB0aGlzLl9pdGVtcyAmJiB0aGlzLl9pdGVtc1t0aGlzLnJlbGF0aXZlKHRoaXMuX2N1cnJlbnQpXTtcbiAgICBcdFx0fVxuICAgIFx0fSwge1xuICAgIFx0XHRmaWx0ZXI6IFsgJ2l0ZW1zJywgJ3NldHRpbmdzJyBdLFxuICAgIFx0XHRydW46IGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdHRoaXMuJHN0YWdlLmNoaWxkcmVuKCcuY2xvbmVkJykucmVtb3ZlKCk7XG4gICAgXHRcdH1cbiAgICBcdH0sIHtcbiAgICBcdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdpdGVtcycsICdzZXR0aW5ncycgXSxcbiAgICBcdFx0cnVuOiBmdW5jdGlvbihjYWNoZSkge1xuICAgIFx0XHRcdHZhciBtYXJnaW4gPSB0aGlzLnNldHRpbmdzLm1hcmdpbiB8fCAnJyxcbiAgICBcdFx0XHRcdGdyaWQgPSAhdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsXG4gICAgXHRcdFx0XHRydGwgPSB0aGlzLnNldHRpbmdzLnJ0bCxcbiAgICBcdFx0XHRcdGNzcyA9IHtcbiAgICBcdFx0XHRcdFx0J3dpZHRoJzogJ2F1dG8nLFxuICAgIFx0XHRcdFx0XHQnbWFyZ2luLWxlZnQnOiBydGwgPyBtYXJnaW4gOiAnJyxcbiAgICBcdFx0XHRcdFx0J21hcmdpbi1yaWdodCc6IHJ0bCA/ICcnIDogbWFyZ2luXG4gICAgXHRcdFx0XHR9O1xuXG4gICAgXHRcdFx0IWdyaWQgJiYgdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5jc3MoY3NzKTtcblxuICAgIFx0XHRcdGNhY2hlLmNzcyA9IGNzcztcbiAgICBcdFx0fVxuICAgIFx0fSwge1xuICAgIFx0XHRmaWx0ZXI6IFsgJ3dpZHRoJywgJ2l0ZW1zJywgJ3NldHRpbmdzJyBdLFxuICAgIFx0XHRydW46IGZ1bmN0aW9uKGNhY2hlKSB7XG4gICAgXHRcdFx0dmFyIHdpZHRoID0gKHRoaXMud2lkdGgoKSAvIHRoaXMuc2V0dGluZ3MuaXRlbXMpLnRvRml4ZWQoMykgLSB0aGlzLnNldHRpbmdzLm1hcmdpbixcbiAgICBcdFx0XHRcdG1lcmdlID0gbnVsbCxcbiAgICBcdFx0XHRcdGl0ZXJhdG9yID0gdGhpcy5faXRlbXMubGVuZ3RoLFxuICAgIFx0XHRcdFx0Z3JpZCA9ICF0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCxcbiAgICBcdFx0XHRcdHdpZHRocyA9IFtdO1xuXG4gICAgXHRcdFx0Y2FjaGUuaXRlbXMgPSB7XG4gICAgXHRcdFx0XHRtZXJnZTogZmFsc2UsXG4gICAgXHRcdFx0XHR3aWR0aDogd2lkdGhcbiAgICBcdFx0XHR9O1xuXG4gICAgXHRcdFx0d2hpbGUgKGl0ZXJhdG9yLS0pIHtcbiAgICBcdFx0XHRcdG1lcmdlID0gdGhpcy5fbWVyZ2Vyc1tpdGVyYXRvcl07XG4gICAgXHRcdFx0XHRtZXJnZSA9IHRoaXMuc2V0dGluZ3MubWVyZ2VGaXQgJiYgTWF0aC5taW4obWVyZ2UsIHRoaXMuc2V0dGluZ3MuaXRlbXMpIHx8IG1lcmdlO1xuXG4gICAgXHRcdFx0XHRjYWNoZS5pdGVtcy5tZXJnZSA9IG1lcmdlID4gMSB8fCBjYWNoZS5pdGVtcy5tZXJnZTtcblxuICAgIFx0XHRcdFx0d2lkdGhzW2l0ZXJhdG9yXSA9ICFncmlkID8gdGhpcy5faXRlbXNbaXRlcmF0b3JdLndpZHRoKCkgOiB3aWR0aCAqIG1lcmdlO1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdHRoaXMuX3dpZHRocyA9IHdpZHRocztcbiAgICBcdFx0fVxuICAgIFx0fSwge1xuICAgIFx0XHRmaWx0ZXI6IFsgJ2l0ZW1zJywgJ3NldHRpbmdzJyBdLFxuICAgIFx0XHRydW46IGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdHZhciBjbG9uZXMgPSBbXSxcbiAgICBcdFx0XHRcdGl0ZW1zID0gdGhpcy5faXRlbXMsXG4gICAgXHRcdFx0XHRzZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3MsXG4gICAgXHRcdFx0XHQvLyBUT0RPOiBTaG91bGQgYmUgY29tcHV0ZWQgZnJvbSBudW1iZXIgb2YgbWluIHdpZHRoIGl0ZW1zIGluIHN0YWdlXG4gICAgXHRcdFx0XHR2aWV3ID0gTWF0aC5tYXgoc2V0dGluZ3MuaXRlbXMgKiAyLCA0KSxcbiAgICBcdFx0XHRcdHNpemUgPSBNYXRoLmNlaWwoaXRlbXMubGVuZ3RoIC8gMikgKiAyLFxuICAgIFx0XHRcdFx0cmVwZWF0ID0gc2V0dGluZ3MubG9vcCAmJiBpdGVtcy5sZW5ndGggPyBzZXR0aW5ncy5yZXdpbmQgPyB2aWV3IDogTWF0aC5tYXgodmlldywgc2l6ZSkgOiAwLFxuICAgIFx0XHRcdFx0YXBwZW5kID0gJycsXG4gICAgXHRcdFx0XHRwcmVwZW5kID0gJyc7XG5cbiAgICBcdFx0XHRyZXBlYXQgLz0gMjtcblxuICAgIFx0XHRcdHdoaWxlIChyZXBlYXQgPiAwKSB7XG4gICAgXHRcdFx0XHQvLyBTd2l0Y2ggdG8gb25seSB1c2luZyBhcHBlbmRlZCBjbG9uZXNcbiAgICBcdFx0XHRcdGNsb25lcy5wdXNoKHRoaXMubm9ybWFsaXplKGNsb25lcy5sZW5ndGggLyAyLCB0cnVlKSk7XG4gICAgXHRcdFx0XHRhcHBlbmQgPSBhcHBlbmQgKyBpdGVtc1tjbG9uZXNbY2xvbmVzLmxlbmd0aCAtIDFdXVswXS5vdXRlckhUTUw7XG4gICAgXHRcdFx0XHRjbG9uZXMucHVzaCh0aGlzLm5vcm1hbGl6ZShpdGVtcy5sZW5ndGggLSAxIC0gKGNsb25lcy5sZW5ndGggLSAxKSAvIDIsIHRydWUpKTtcbiAgICBcdFx0XHRcdHByZXBlbmQgPSBpdGVtc1tjbG9uZXNbY2xvbmVzLmxlbmd0aCAtIDFdXVswXS5vdXRlckhUTUwgKyBwcmVwZW5kO1xuICAgIFx0XHRcdFx0cmVwZWF0IC09IDE7XG4gICAgXHRcdFx0fVxuXG4gICAgXHRcdFx0dGhpcy5fY2xvbmVzID0gY2xvbmVzO1xuXG4gICAgXHRcdFx0JChhcHBlbmQpLmFkZENsYXNzKCdjbG9uZWQnKS5hcHBlbmRUbyh0aGlzLiRzdGFnZSk7XG4gICAgXHRcdFx0JChwcmVwZW5kKS5hZGRDbGFzcygnY2xvbmVkJykucHJlcGVuZFRvKHRoaXMuJHN0YWdlKTtcbiAgICBcdFx0fVxuICAgIFx0fSwge1xuICAgIFx0XHRmaWx0ZXI6IFsgJ3dpZHRoJywgJ2l0ZW1zJywgJ3NldHRpbmdzJyBdLFxuICAgIFx0XHRydW46IGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdHZhciBydGwgPSB0aGlzLnNldHRpbmdzLnJ0bCA/IDEgOiAtMSxcbiAgICBcdFx0XHRcdHNpemUgPSB0aGlzLl9jbG9uZXMubGVuZ3RoICsgdGhpcy5faXRlbXMubGVuZ3RoLFxuICAgIFx0XHRcdFx0aXRlcmF0b3IgPSAtMSxcbiAgICBcdFx0XHRcdHByZXZpb3VzID0gMCxcbiAgICBcdFx0XHRcdGN1cnJlbnQgPSAwLFxuICAgIFx0XHRcdFx0Y29vcmRpbmF0ZXMgPSBbXTtcblxuICAgIFx0XHRcdHdoaWxlICgrK2l0ZXJhdG9yIDwgc2l6ZSkge1xuICAgIFx0XHRcdFx0cHJldmlvdXMgPSBjb29yZGluYXRlc1tpdGVyYXRvciAtIDFdIHx8IDA7XG4gICAgXHRcdFx0XHRjdXJyZW50ID0gdGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoaXRlcmF0b3IpXSArIHRoaXMuc2V0dGluZ3MubWFyZ2luO1xuICAgIFx0XHRcdFx0Y29vcmRpbmF0ZXMucHVzaChwcmV2aW91cyArIGN1cnJlbnQgKiBydGwpO1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdHRoaXMuX2Nvb3JkaW5hdGVzID0gY29vcmRpbmF0ZXM7XG4gICAgXHRcdH1cbiAgICBcdH0sIHtcbiAgICBcdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdpdGVtcycsICdzZXR0aW5ncycgXSxcbiAgICBcdFx0cnVuOiBmdW5jdGlvbigpIHtcbiAgICBcdFx0XHR2YXIgcGFkZGluZyA9IHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nLFxuICAgIFx0XHRcdFx0Y29vcmRpbmF0ZXMgPSB0aGlzLl9jb29yZGluYXRlcyxcbiAgICBcdFx0XHRcdGNzcyA9IHtcbiAgICBcdFx0XHRcdFx0J3dpZHRoJzogTWF0aC5jZWlsKE1hdGguYWJzKGNvb3JkaW5hdGVzW2Nvb3JkaW5hdGVzLmxlbmd0aCAtIDFdKSkgKyBwYWRkaW5nICogMixcbiAgICBcdFx0XHRcdFx0J3BhZGRpbmctbGVmdCc6IHBhZGRpbmcgfHwgJycsXG4gICAgXHRcdFx0XHRcdCdwYWRkaW5nLXJpZ2h0JzogcGFkZGluZyB8fCAnJ1xuICAgIFx0XHRcdFx0fTtcblxuICAgIFx0XHRcdHRoaXMuJHN0YWdlLmNzcyhjc3MpO1xuICAgIFx0XHR9XG4gICAgXHR9LCB7XG4gICAgXHRcdGZpbHRlcjogWyAnd2lkdGgnLCAnaXRlbXMnLCAnc2V0dGluZ3MnIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oY2FjaGUpIHtcbiAgICBcdFx0XHR2YXIgaXRlcmF0b3IgPSB0aGlzLl9jb29yZGluYXRlcy5sZW5ndGgsXG4gICAgXHRcdFx0XHRncmlkID0gIXRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoLFxuICAgIFx0XHRcdFx0aXRlbXMgPSB0aGlzLiRzdGFnZS5jaGlsZHJlbigpO1xuXG4gICAgXHRcdFx0aWYgKGdyaWQgJiYgY2FjaGUuaXRlbXMubWVyZ2UpIHtcbiAgICBcdFx0XHRcdHdoaWxlIChpdGVyYXRvci0tKSB7XG4gICAgXHRcdFx0XHRcdGNhY2hlLmNzcy53aWR0aCA9IHRoaXMuX3dpZHRoc1t0aGlzLnJlbGF0aXZlKGl0ZXJhdG9yKV07XG4gICAgXHRcdFx0XHRcdGl0ZW1zLmVxKGl0ZXJhdG9yKS5jc3MoY2FjaGUuY3NzKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9IGVsc2UgaWYgKGdyaWQpIHtcbiAgICBcdFx0XHRcdGNhY2hlLmNzcy53aWR0aCA9IGNhY2hlLml0ZW1zLndpZHRoO1xuICAgIFx0XHRcdFx0aXRlbXMuY3NzKGNhY2hlLmNzcyk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9XG4gICAgXHR9LCB7XG4gICAgXHRcdGZpbHRlcjogWyAnaXRlbXMnIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0dGhpcy5fY29vcmRpbmF0ZXMubGVuZ3RoIDwgMSAmJiB0aGlzLiRzdGFnZS5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgIFx0XHR9XG4gICAgXHR9LCB7XG4gICAgXHRcdGZpbHRlcjogWyAnd2lkdGgnLCAnaXRlbXMnLCAnc2V0dGluZ3MnIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oY2FjaGUpIHtcbiAgICBcdFx0XHRjYWNoZS5jdXJyZW50ID0gY2FjaGUuY3VycmVudCA/IHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuaW5kZXgoY2FjaGUuY3VycmVudCkgOiAwO1xuICAgIFx0XHRcdGNhY2hlLmN1cnJlbnQgPSBNYXRoLm1heCh0aGlzLm1pbmltdW0oKSwgTWF0aC5taW4odGhpcy5tYXhpbXVtKCksIGNhY2hlLmN1cnJlbnQpKTtcbiAgICBcdFx0XHR0aGlzLnJlc2V0KGNhY2hlLmN1cnJlbnQpO1xuICAgIFx0XHR9XG4gICAgXHR9LCB7XG4gICAgXHRcdGZpbHRlcjogWyAncG9zaXRpb24nIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0dGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXModGhpcy5fY3VycmVudCkpO1xuICAgIFx0XHR9XG4gICAgXHR9LCB7XG4gICAgXHRcdGZpbHRlcjogWyAnd2lkdGgnLCAncG9zaXRpb24nLCAnaXRlbXMnLCAnc2V0dGluZ3MnIF0sXG4gICAgXHRcdHJ1bjogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0dmFyIHJ0bCA9IHRoaXMuc2V0dGluZ3MucnRsID8gMSA6IC0xLFxuICAgIFx0XHRcdFx0cGFkZGluZyA9IHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nICogMixcbiAgICBcdFx0XHRcdGJlZ2luID0gdGhpcy5jb29yZGluYXRlcyh0aGlzLmN1cnJlbnQoKSkgKyBwYWRkaW5nLFxuICAgIFx0XHRcdFx0ZW5kID0gYmVnaW4gKyB0aGlzLndpZHRoKCkgKiBydGwsXG4gICAgXHRcdFx0XHRpbm5lciwgb3V0ZXIsIG1hdGNoZXMgPSBbXSwgaSwgbjtcblxuICAgIFx0XHRcdGZvciAoaSA9IDAsIG4gPSB0aGlzLl9jb29yZGluYXRlcy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICBcdFx0XHRcdGlubmVyID0gdGhpcy5fY29vcmRpbmF0ZXNbaSAtIDFdIHx8IDA7XG4gICAgXHRcdFx0XHRvdXRlciA9IE1hdGguYWJzKHRoaXMuX2Nvb3JkaW5hdGVzW2ldKSArIHBhZGRpbmcgKiBydGw7XG5cbiAgICBcdFx0XHRcdGlmICgodGhpcy5vcChpbm5lciwgJzw9JywgYmVnaW4pICYmICh0aGlzLm9wKGlubmVyLCAnPicsIGVuZCkpKVxuICAgIFx0XHRcdFx0XHR8fCAodGhpcy5vcChvdXRlciwgJzwnLCBiZWdpbikgJiYgdGhpcy5vcChvdXRlciwgJz4nLCBlbmQpKSkge1xuICAgIFx0XHRcdFx0XHRtYXRjaGVzLnB1c2goaSk7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0fVxuXG4gICAgXHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgXHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oJzplcSgnICsgbWF0Y2hlcy5qb2luKCcpLCA6ZXEoJykgKyAnKScpLmFkZENsYXNzKCdhY3RpdmUnKTtcblxuICAgIFx0XHRcdHRoaXMuJHN0YWdlLmNoaWxkcmVuKCcuY2VudGVyJykucmVtb3ZlQ2xhc3MoJ2NlbnRlcicpO1xuICAgIFx0XHRcdGlmICh0aGlzLnNldHRpbmdzLmNlbnRlcikge1xuICAgIFx0XHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLmN1cnJlbnQoKSkuYWRkQ2xhc3MoJ2NlbnRlcicpO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fVxuICAgIFx0fSBdO1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZSB0aGUgc3RhZ2UgRE9NIGVsZW1lbnRcbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5pbml0aWFsaXplU3RhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dGhpcy4kc3RhZ2UgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy4nICsgdGhpcy5zZXR0aW5ncy5zdGFnZUNsYXNzKTtcblxuICAgIFx0XHQvLyBpZiB0aGUgc3RhZ2UgaXMgYWxyZWFkeSBpbiB0aGUgRE9NLCBncmFiIGl0IGFuZCBza2lwIHN0YWdlIGluaXRpYWxpemF0aW9uXG4gICAgXHRcdGlmICh0aGlzLiRzdGFnZS5sZW5ndGgpIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpO1xuXG4gICAgXHRcdC8vIGNyZWF0ZSBzdGFnZVxuICAgIFx0XHR0aGlzLiRzdGFnZSA9ICQoJzwnICsgdGhpcy5zZXR0aW5ncy5zdGFnZUVsZW1lbnQgKyAnPicsIHtcbiAgICBcdFx0XHRcImNsYXNzXCI6IHRoaXMuc2V0dGluZ3Muc3RhZ2VDbGFzc1xuICAgIFx0XHR9KS53cmFwKCAkKCAnPGRpdi8+Jywge1xuICAgIFx0XHRcdFwiY2xhc3NcIjogdGhpcy5zZXR0aW5ncy5zdGFnZU91dGVyQ2xhc3NcbiAgICBcdFx0fSkpO1xuXG4gICAgXHRcdC8vIGFwcGVuZCBzdGFnZVxuICAgIFx0XHR0aGlzLiRlbGVtZW50LmFwcGVuZCh0aGlzLiRzdGFnZS5wYXJlbnQoKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZSBpdGVtIERPTSBlbGVtZW50c1xuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmluaXRpYWxpemVJdGVtcyA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgJGl0ZW1zID0gdGhpcy4kZWxlbWVudC5maW5kKCcub3dsLWl0ZW0nKTtcblxuICAgIFx0XHQvLyBpZiB0aGUgaXRlbXMgYXJlIGFscmVhZHkgaW4gdGhlIERPTSwgZ3JhYiB0aGVtIGFuZCBza2lwIGl0ZW0gaW5pdGlhbGl6YXRpb25cbiAgICBcdFx0aWYgKCRpdGVtcy5sZW5ndGgpIHtcbiAgICBcdFx0XHR0aGlzLl9pdGVtcyA9ICRpdGVtcy5nZXQoKS5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgIFx0XHRcdFx0cmV0dXJuICQoaXRlbSk7XG4gICAgXHRcdFx0fSk7XG5cbiAgICBcdFx0XHR0aGlzLl9tZXJnZXJzID0gdGhpcy5faXRlbXMubWFwKGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdFx0cmV0dXJuIDE7XG4gICAgXHRcdFx0fSk7XG5cbiAgICBcdFx0XHR0aGlzLnJlZnJlc2goKTtcblxuICAgIFx0XHRcdHJldHVybjtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC8vIGFwcGVuZCBjb250ZW50XG4gICAgXHRcdHRoaXMucmVwbGFjZSh0aGlzLiRlbGVtZW50LmNoaWxkcmVuKCkubm90KHRoaXMuJHN0YWdlLnBhcmVudCgpKSk7XG5cbiAgICBcdFx0Ly8gY2hlY2sgdmlzaWJpbGl0eVxuICAgIFx0XHRpZiAodGhpcy5pc1Zpc2libGUoKSkge1xuICAgIFx0XHRcdC8vIHVwZGF0ZSB2aWV3XG4gICAgXHRcdFx0dGhpcy5yZWZyZXNoKCk7XG4gICAgXHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0Ly8gaW52YWxpZGF0ZSB3aWR0aFxuICAgIFx0XHRcdHRoaXMuaW52YWxpZGF0ZSgnd2lkdGgnKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuJGVsZW1lbnRcbiAgICBcdFx0XHQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRpbmdDbGFzcylcbiAgICBcdFx0XHQuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRlZENsYXNzKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogSW5pdGlhbGl6ZXMgdGhlIGNhcm91c2VsLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dGhpcy5lbnRlcignaW5pdGlhbGl6aW5nJyk7XG4gICAgXHRcdHRoaXMudHJpZ2dlcignaW5pdGlhbGl6ZScpO1xuXG4gICAgXHRcdHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3ModGhpcy5zZXR0aW5ncy5ydGxDbGFzcywgdGhpcy5zZXR0aW5ncy5ydGwpO1xuXG4gICAgXHRcdGlmICh0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCAmJiAhdGhpcy5pcygncHJlLWxvYWRpbmcnKSkge1xuICAgIFx0XHRcdHZhciBpbWdzLCBuZXN0ZWRTZWxlY3Rvciwgd2lkdGg7XG4gICAgXHRcdFx0aW1ncyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnaW1nJyk7XG4gICAgXHRcdFx0bmVzdGVkU2VsZWN0b3IgPSB0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvciA/ICcuJyArIHRoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yIDogdW5kZWZpbmVkO1xuICAgIFx0XHRcdHdpZHRoID0gdGhpcy4kZWxlbWVudC5jaGlsZHJlbihuZXN0ZWRTZWxlY3Rvcikud2lkdGgoKTtcblxuICAgIFx0XHRcdGlmIChpbWdzLmxlbmd0aCAmJiB3aWR0aCA8PSAwKSB7XG4gICAgXHRcdFx0XHR0aGlzLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMoaW1ncyk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy5pbml0aWFsaXplU3RhZ2UoKTtcbiAgICBcdFx0dGhpcy5pbml0aWFsaXplSXRlbXMoKTtcblxuICAgIFx0XHQvLyByZWdpc3RlciBldmVudCBoYW5kbGVyc1xuICAgIFx0XHR0aGlzLnJlZ2lzdGVyRXZlbnRIYW5kbGVycygpO1xuXG4gICAgXHRcdHRoaXMubGVhdmUoJ2luaXRpYWxpemluZycpO1xuICAgIFx0XHR0aGlzLnRyaWdnZXIoJ2luaXRpYWxpemVkJyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEByZXR1cm5zIHtCb29sZWFufSB2aXNpYmlsaXR5IG9mICRlbGVtZW50XG4gICAgXHQgKiAgICAgICAgICAgICAgICAgICAgaWYgeW91IGtub3cgdGhlIGNhcm91c2VsIHdpbGwgYWx3YXlzIGJlIHZpc2libGUgeW91IGNhbiBzZXQgYGNoZWNrVmlzaWJpbGl0eWAgdG8gYGZhbHNlYCB0b1xuICAgIFx0ICogICAgICAgICAgICAgICAgICAgIHByZXZlbnQgdGhlIGV4cGVuc2l2ZSBicm93c2VyIGxheW91dCBmb3JjZWQgcmVmbG93IHRoZSAkZWxlbWVudC5pcygnOnZpc2libGUnKSBkb2VzXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUuaXNWaXNpYmxlID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHJldHVybiB0aGlzLnNldHRpbmdzLmNoZWNrVmlzaWJpbGl0eVxuICAgIFx0XHRcdD8gdGhpcy4kZWxlbWVudC5pcygnOnZpc2libGUnKVxuICAgIFx0XHRcdDogdHJ1ZTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU2V0dXBzIHRoZSBjdXJyZW50IHNldHRpbmdzLlxuICAgIFx0ICogQHRvZG8gUmVtb3ZlIHJlc3BvbnNpdmUgY2xhc3Nlcy4gV2h5IHNob3VsZCBhZGFwdGl2ZSBkZXNpZ25zIGJlIGJyb3VnaHQgaW50byBJRTg/XG4gICAgXHQgKiBAdG9kbyBTdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGJ5IHVzaW5nIGBtYXRjaE1lZGlhYCB3b3VsZCBiZSBuaWNlLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnNldHVwID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciB2aWV3cG9ydCA9IHRoaXMudmlld3BvcnQoKSxcbiAgICBcdFx0XHRvdmVyd3JpdGVzID0gdGhpcy5vcHRpb25zLnJlc3BvbnNpdmUsXG4gICAgXHRcdFx0bWF0Y2ggPSAtMSxcbiAgICBcdFx0XHRzZXR0aW5ncyA9IG51bGw7XG5cbiAgICBcdFx0aWYgKCFvdmVyd3JpdGVzKSB7XG4gICAgXHRcdFx0c2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zKTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHQkLmVhY2gob3ZlcndyaXRlcywgZnVuY3Rpb24oYnJlYWtwb2ludCkge1xuICAgIFx0XHRcdFx0aWYgKGJyZWFrcG9pbnQgPD0gdmlld3BvcnQgJiYgYnJlYWtwb2ludCA+IG1hdGNoKSB7XG4gICAgXHRcdFx0XHRcdG1hdGNoID0gTnVtYmVyKGJyZWFrcG9pbnQpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0pO1xuXG4gICAgXHRcdFx0c2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zLCBvdmVyd3JpdGVzW21hdGNoXSk7XG4gICAgXHRcdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5zdGFnZVBhZGRpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICBcdFx0XHRcdHNldHRpbmdzLnN0YWdlUGFkZGluZyA9IHNldHRpbmdzLnN0YWdlUGFkZGluZygpO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0XHRkZWxldGUgc2V0dGluZ3MucmVzcG9uc2l2ZTtcblxuICAgIFx0XHRcdC8vIHJlc3BvbnNpdmUgY2xhc3NcbiAgICBcdFx0XHRpZiAoc2V0dGluZ3MucmVzcG9uc2l2ZUNsYXNzKSB7XG4gICAgXHRcdFx0XHR0aGlzLiRlbGVtZW50LmF0dHIoJ2NsYXNzJyxcbiAgICBcdFx0XHRcdFx0dGhpcy4kZWxlbWVudC5hdHRyKCdjbGFzcycpLnJlcGxhY2UobmV3IFJlZ0V4cCgnKCcgKyB0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUNsYXNzICsgJy0pXFxcXFMrXFxcXHMnLCAnZycpLCAnJDEnICsgbWF0Y2gpXG4gICAgXHRcdFx0XHQpO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMudHJpZ2dlcignY2hhbmdlJywgeyBwcm9wZXJ0eTogeyBuYW1lOiAnc2V0dGluZ3MnLCB2YWx1ZTogc2V0dGluZ3MgfSB9KTtcbiAgICBcdFx0dGhpcy5fYnJlYWtwb2ludCA9IG1hdGNoO1xuICAgIFx0XHR0aGlzLnNldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgXHRcdHRoaXMuaW52YWxpZGF0ZSgnc2V0dGluZ3MnKTtcbiAgICBcdFx0dGhpcy50cmlnZ2VyKCdjaGFuZ2VkJywgeyBwcm9wZXJ0eTogeyBuYW1lOiAnc2V0dGluZ3MnLCB2YWx1ZTogdGhpcy5zZXR0aW5ncyB9IH0pO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBVcGRhdGVzIG9wdGlvbiBsb2dpYyBpZiBuZWNlc3NlcnkuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub3B0aW9uc0xvZ2ljID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdGlmICh0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCkge1xuICAgIFx0XHRcdHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nID0gZmFsc2U7XG4gICAgXHRcdFx0dGhpcy5zZXR0aW5ncy5tZXJnZSA9IGZhbHNlO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFByZXBhcmVzIGFuIGl0ZW0gYmVmb3JlIGFkZC5cbiAgICBcdCAqIEB0b2RvIFJlbmFtZSBldmVudCBwYXJhbWV0ZXIgYGNvbnRlbnRgIHRvIGBpdGVtYC5cbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqIEByZXR1cm5zIHtqUXVlcnl8SFRNTEVsZW1lbnR9IC0gVGhlIGl0ZW0gY29udGFpbmVyLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnByZXBhcmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gICAgXHRcdHZhciBldmVudCA9IHRoaXMudHJpZ2dlcigncHJlcGFyZScsIHsgY29udGVudDogaXRlbSB9KTtcblxuICAgIFx0XHRpZiAoIWV2ZW50LmRhdGEpIHtcbiAgICBcdFx0XHRldmVudC5kYXRhID0gJCgnPCcgKyB0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50ICsgJy8+JylcbiAgICBcdFx0XHRcdC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuaXRlbUNsYXNzKS5hcHBlbmQoaXRlbSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLnRyaWdnZXIoJ3ByZXBhcmVkJywgeyBjb250ZW50OiBldmVudC5kYXRhIH0pO1xuXG4gICAgXHRcdHJldHVybiBldmVudC5kYXRhO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBVcGRhdGVzIHRoZSB2aWV3LlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgaSA9IDAsXG4gICAgXHRcdFx0biA9IHRoaXMuX3BpcGUubGVuZ3RoLFxuICAgIFx0XHRcdGZpbHRlciA9ICQucHJveHkoZnVuY3Rpb24ocCkgeyByZXR1cm4gdGhpc1twXSB9LCB0aGlzLl9pbnZhbGlkYXRlZCksXG4gICAgXHRcdFx0Y2FjaGUgPSB7fTtcblxuICAgIFx0XHR3aGlsZSAoaSA8IG4pIHtcbiAgICBcdFx0XHRpZiAodGhpcy5faW52YWxpZGF0ZWQuYWxsIHx8ICQuZ3JlcCh0aGlzLl9waXBlW2ldLmZpbHRlciwgZmlsdGVyKS5sZW5ndGggPiAwKSB7XG4gICAgXHRcdFx0XHR0aGlzLl9waXBlW2ldLnJ1bihjYWNoZSk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHRcdGkrKztcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuX2ludmFsaWRhdGVkID0ge307XG5cbiAgICBcdFx0IXRoaXMuaXMoJ3ZhbGlkJykgJiYgdGhpcy5lbnRlcigndmFsaWQnKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyB0aGUgd2lkdGggb2YgdGhlIHZpZXcuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge093bC5XaWR0aH0gW2RpbWVuc2lvbj1Pd2wuV2lkdGguRGVmYXVsdF0gLSBUaGUgZGltZW5zaW9uIHRvIHJldHVybi5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIHdpZHRoIG9mIHRoZSB2aWV3IGluIHBpeGVsLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLndpZHRoID0gZnVuY3Rpb24oZGltZW5zaW9uKSB7XG4gICAgXHRcdGRpbWVuc2lvbiA9IGRpbWVuc2lvbiB8fCBPd2wuV2lkdGguRGVmYXVsdDtcbiAgICBcdFx0c3dpdGNoIChkaW1lbnNpb24pIHtcbiAgICBcdFx0XHRjYXNlIE93bC5XaWR0aC5Jbm5lcjpcbiAgICBcdFx0XHRjYXNlIE93bC5XaWR0aC5PdXRlcjpcbiAgICBcdFx0XHRcdHJldHVybiB0aGlzLl93aWR0aDtcbiAgICBcdFx0XHRkZWZhdWx0OlxuICAgIFx0XHRcdFx0cmV0dXJuIHRoaXMuX3dpZHRoIC0gdGhpcy5zZXR0aW5ncy5zdGFnZVBhZGRpbmcgKiAyICsgdGhpcy5zZXR0aW5ncy5tYXJnaW47XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogUmVmcmVzaGVzIHRoZSBjYXJvdXNlbCBwcmltYXJpbHkgZm9yIGFkYXB0aXZlIHB1cnBvc2VzLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dGhpcy5lbnRlcigncmVmcmVzaGluZycpO1xuICAgIFx0XHR0aGlzLnRyaWdnZXIoJ3JlZnJlc2gnKTtcblxuICAgIFx0XHR0aGlzLnNldHVwKCk7XG5cbiAgICBcdFx0dGhpcy5vcHRpb25zTG9naWMoKTtcblxuICAgIFx0XHR0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5yZWZyZXNoQ2xhc3MpO1xuXG4gICAgXHRcdHRoaXMudXBkYXRlKCk7XG5cbiAgICBcdFx0dGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMucmVmcmVzaENsYXNzKTtcblxuICAgIFx0XHR0aGlzLmxlYXZlKCdyZWZyZXNoaW5nJyk7XG4gICAgXHRcdHRoaXMudHJpZ2dlcigncmVmcmVzaGVkJyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENoZWNrcyB3aW5kb3cgYHJlc2l6ZWAgZXZlbnQuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub25UaHJvdHRsZWRSZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0d2luZG93LmNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVyKTtcbiAgICBcdFx0dGhpcy5yZXNpemVUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KHRoaXMuX2hhbmRsZXJzLm9uUmVzaXplLCB0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmVSZWZyZXNoUmF0ZSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENoZWNrcyB3aW5kb3cgYHJlc2l6ZWAgZXZlbnQuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub25SZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0aWYgKCF0aGlzLl9pdGVtcy5sZW5ndGgpIHtcbiAgICBcdFx0XHRyZXR1cm4gZmFsc2U7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodGhpcy5fd2lkdGggPT09IHRoaXMuJGVsZW1lbnQud2lkdGgoKSkge1xuICAgIFx0XHRcdHJldHVybiBmYWxzZTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICghdGhpcy5pc1Zpc2libGUoKSkge1xuICAgIFx0XHRcdHJldHVybiBmYWxzZTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuZW50ZXIoJ3Jlc2l6aW5nJyk7XG5cbiAgICBcdFx0aWYgKHRoaXMudHJpZ2dlcigncmVzaXplJykuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICBcdFx0XHR0aGlzLmxlYXZlKCdyZXNpemluZycpO1xuICAgIFx0XHRcdHJldHVybiBmYWxzZTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuaW52YWxpZGF0ZSgnd2lkdGgnKTtcblxuICAgIFx0XHR0aGlzLnJlZnJlc2goKTtcblxuICAgIFx0XHR0aGlzLmxlYXZlKCdyZXNpemluZycpO1xuICAgIFx0XHR0aGlzLnRyaWdnZXIoJ3Jlc2l6ZWQnKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogUmVnaXN0ZXJzIGV2ZW50IGhhbmRsZXJzLlxuICAgIFx0ICogQHRvZG8gQ2hlY2sgYG1zUG9pbnRlckVuYWJsZWRgXG4gICAgXHQgKiBAdG9kbyAjMjYxXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUucmVnaXN0ZXJFdmVudEhhbmRsZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdGlmICgkLnN1cHBvcnQudHJhbnNpdGlvbikge1xuICAgIFx0XHRcdHRoaXMuJHN0YWdlLm9uKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCArICcub3dsLmNvcmUnLCAkLnByb3h5KHRoaXMub25UcmFuc2l0aW9uRW5kLCB0aGlzKSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodGhpcy5zZXR0aW5ncy5yZXNwb25zaXZlICE9PSBmYWxzZSkge1xuICAgIFx0XHRcdHRoaXMub24od2luZG93LCAncmVzaXplJywgdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0aWYgKHRoaXMuc2V0dGluZ3MubW91c2VEcmFnKSB7XG4gICAgXHRcdFx0dGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZHJhZ0NsYXNzKTtcbiAgICBcdFx0XHR0aGlzLiRzdGFnZS5vbignbW91c2Vkb3duLm93bC5jb3JlJywgJC5wcm94eSh0aGlzLm9uRHJhZ1N0YXJ0LCB0aGlzKSk7XG4gICAgXHRcdFx0dGhpcy4kc3RhZ2Uub24oJ2RyYWdzdGFydC5vd2wuY29yZSBzZWxlY3RzdGFydC5vd2wuY29yZScsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2UgfSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodGhpcy5zZXR0aW5ncy50b3VjaERyYWcpe1xuICAgIFx0XHRcdHRoaXMuJHN0YWdlLm9uKCd0b3VjaHN0YXJ0Lm93bC5jb3JlJywgJC5wcm94eSh0aGlzLm9uRHJhZ1N0YXJ0LCB0aGlzKSk7XG4gICAgXHRcdFx0dGhpcy4kc3RhZ2Uub24oJ3RvdWNoY2FuY2VsLm93bC5jb3JlJywgJC5wcm94eSh0aGlzLm9uRHJhZ0VuZCwgdGhpcykpO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEhhbmRsZXMgYHRvdWNoc3RhcnRgIGFuZCBgbW91c2Vkb3duYCBldmVudHMuXG4gICAgXHQgKiBAdG9kbyBIb3Jpem9udGFsIHN3aXBlIHRocmVzaG9sZCBhcyBvcHRpb25cbiAgICBcdCAqIEB0b2RvICMyNjFcbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IC0gVGhlIGV2ZW50IGFyZ3VtZW50cy5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5vbkRyYWdTdGFydCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgXHRcdHZhciBzdGFnZSA9IG51bGw7XG5cbiAgICBcdFx0aWYgKGV2ZW50LndoaWNoID09PSAzKSB7XG4gICAgXHRcdFx0cmV0dXJuO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0aWYgKCQuc3VwcG9ydC50cmFuc2Zvcm0pIHtcbiAgICBcdFx0XHRzdGFnZSA9IHRoaXMuJHN0YWdlLmNzcygndHJhbnNmb3JtJykucmVwbGFjZSgvLipcXCh8XFwpfCAvZywgJycpLnNwbGl0KCcsJyk7XG4gICAgXHRcdFx0c3RhZ2UgPSB7XG4gICAgXHRcdFx0XHR4OiBzdGFnZVtzdGFnZS5sZW5ndGggPT09IDE2ID8gMTIgOiA0XSxcbiAgICBcdFx0XHRcdHk6IHN0YWdlW3N0YWdlLmxlbmd0aCA9PT0gMTYgPyAxMyA6IDVdXG4gICAgXHRcdFx0fTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRzdGFnZSA9IHRoaXMuJHN0YWdlLnBvc2l0aW9uKCk7XG4gICAgXHRcdFx0c3RhZ2UgPSB7XG4gICAgXHRcdFx0XHR4OiB0aGlzLnNldHRpbmdzLnJ0bCA/XG4gICAgXHRcdFx0XHRcdHN0YWdlLmxlZnQgKyB0aGlzLiRzdGFnZS53aWR0aCgpIC0gdGhpcy53aWR0aCgpICsgdGhpcy5zZXR0aW5ncy5tYXJnaW4gOlxuICAgIFx0XHRcdFx0XHRzdGFnZS5sZWZ0LFxuICAgIFx0XHRcdFx0eTogc3RhZ2UudG9wXG4gICAgXHRcdFx0fTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICh0aGlzLmlzKCdhbmltYXRpbmcnKSkge1xuICAgIFx0XHRcdCQuc3VwcG9ydC50cmFuc2Zvcm0gPyB0aGlzLmFuaW1hdGUoc3RhZ2UueCkgOiB0aGlzLiRzdGFnZS5zdG9wKCk7XG4gICAgXHRcdFx0dGhpcy5pbnZhbGlkYXRlKCdwb3NpdGlvbicpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy4kZWxlbWVudC50b2dnbGVDbGFzcyh0aGlzLm9wdGlvbnMuZ3JhYkNsYXNzLCBldmVudC50eXBlID09PSAnbW91c2Vkb3duJyk7XG5cbiAgICBcdFx0dGhpcy5zcGVlZCgwKTtcblxuICAgIFx0XHR0aGlzLl9kcmFnLnRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBcdFx0dGhpcy5fZHJhZy50YXJnZXQgPSAkKGV2ZW50LnRhcmdldCk7XG4gICAgXHRcdHRoaXMuX2RyYWcuc3RhZ2Uuc3RhcnQgPSBzdGFnZTtcbiAgICBcdFx0dGhpcy5fZHJhZy5zdGFnZS5jdXJyZW50ID0gc3RhZ2U7XG4gICAgXHRcdHRoaXMuX2RyYWcucG9pbnRlciA9IHRoaXMucG9pbnRlcihldmVudCk7XG5cbiAgICBcdFx0JChkb2N1bWVudCkub24oJ21vdXNldXAub3dsLmNvcmUgdG91Y2hlbmQub3dsLmNvcmUnLCAkLnByb3h5KHRoaXMub25EcmFnRW5kLCB0aGlzKSk7XG5cbiAgICBcdFx0JChkb2N1bWVudCkub25lKCdtb3VzZW1vdmUub3dsLmNvcmUgdG91Y2htb3ZlLm93bC5jb3JlJywgJC5wcm94eShmdW5jdGlvbihldmVudCkge1xuICAgIFx0XHRcdHZhciBkZWx0YSA9IHRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsIHRoaXMucG9pbnRlcihldmVudCkpO1xuXG4gICAgXHRcdFx0JChkb2N1bWVudCkub24oJ21vdXNlbW92ZS5vd2wuY29yZSB0b3VjaG1vdmUub3dsLmNvcmUnLCAkLnByb3h5KHRoaXMub25EcmFnTW92ZSwgdGhpcykpO1xuXG4gICAgXHRcdFx0aWYgKE1hdGguYWJzKGRlbHRhLngpIDwgTWF0aC5hYnMoZGVsdGEueSkgJiYgdGhpcy5pcygndmFsaWQnKSkge1xuICAgIFx0XHRcdFx0cmV0dXJuO1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBcdFx0XHR0aGlzLmVudGVyKCdkcmFnZ2luZycpO1xuICAgIFx0XHRcdHRoaXMudHJpZ2dlcignZHJhZycpO1xuICAgIFx0XHR9LCB0aGlzKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEhhbmRsZXMgdGhlIGB0b3VjaG1vdmVgIGFuZCBgbW91c2Vtb3ZlYCBldmVudHMuXG4gICAgXHQgKiBAdG9kbyAjMjYxXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge0V2ZW50fSBldmVudCAtIFRoZSBldmVudCBhcmd1bWVudHMuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub25EcmFnTW92ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgXHRcdHZhciBtaW5pbXVtID0gbnVsbCxcbiAgICBcdFx0XHRtYXhpbXVtID0gbnVsbCxcbiAgICBcdFx0XHRwdWxsID0gbnVsbCxcbiAgICBcdFx0XHRkZWx0YSA9IHRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsIHRoaXMucG9pbnRlcihldmVudCkpLFxuICAgIFx0XHRcdHN0YWdlID0gdGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcuc3RhZ2Uuc3RhcnQsIGRlbHRhKTtcblxuICAgIFx0XHRpZiAoIXRoaXMuaXMoJ2RyYWdnaW5nJykpIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgXHRcdGlmICh0aGlzLnNldHRpbmdzLmxvb3ApIHtcbiAgICBcdFx0XHRtaW5pbXVtID0gdGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSk7XG4gICAgXHRcdFx0bWF4aW11bSA9IHRoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkgKyAxKSAtIG1pbmltdW07XG4gICAgXHRcdFx0c3RhZ2UueCA9ICgoKHN0YWdlLnggLSBtaW5pbXVtKSAlIG1heGltdW0gKyBtYXhpbXVtKSAlIG1heGltdW0pICsgbWluaW11bTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRtaW5pbXVtID0gdGhpcy5zZXR0aW5ncy5ydGwgPyB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWF4aW11bSgpKSA6IHRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpO1xuICAgIFx0XHRcdG1heGltdW0gPSB0aGlzLnNldHRpbmdzLnJ0bCA/IHRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpIDogdGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSk7XG4gICAgXHRcdFx0cHVsbCA9IHRoaXMuc2V0dGluZ3MucHVsbERyYWcgPyAtMSAqIGRlbHRhLnggLyA1IDogMDtcbiAgICBcdFx0XHRzdGFnZS54ID0gTWF0aC5tYXgoTWF0aC5taW4oc3RhZ2UueCwgbWluaW11bSArIHB1bGwpLCBtYXhpbXVtICsgcHVsbCk7XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLl9kcmFnLnN0YWdlLmN1cnJlbnQgPSBzdGFnZTtcblxuICAgIFx0XHR0aGlzLmFuaW1hdGUoc3RhZ2UueCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEhhbmRsZXMgdGhlIGB0b3VjaGVuZGAgYW5kIGBtb3VzZXVwYCBldmVudHMuXG4gICAgXHQgKiBAdG9kbyAjMjYxXG4gICAgXHQgKiBAdG9kbyBUaHJlc2hvbGQgZm9yIGNsaWNrIGV2ZW50XG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge0V2ZW50fSBldmVudCAtIFRoZSBldmVudCBhcmd1bWVudHMuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub25EcmFnRW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBcdFx0dmFyIGRlbHRhID0gdGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcucG9pbnRlciwgdGhpcy5wb2ludGVyKGV2ZW50KSksXG4gICAgXHRcdFx0c3RhZ2UgPSB0aGlzLl9kcmFnLnN0YWdlLmN1cnJlbnQsXG4gICAgXHRcdFx0ZGlyZWN0aW9uID0gZGVsdGEueCA+IDAgXiB0aGlzLnNldHRpbmdzLnJ0bCA/ICdsZWZ0JyA6ICdyaWdodCc7XG5cbiAgICBcdFx0JChkb2N1bWVudCkub2ZmKCcub3dsLmNvcmUnKTtcblxuICAgIFx0XHR0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MpO1xuXG4gICAgXHRcdGlmIChkZWx0YS54ICE9PSAwICYmIHRoaXMuaXMoJ2RyYWdnaW5nJykgfHwgIXRoaXMuaXMoJ3ZhbGlkJykpIHtcbiAgICBcdFx0XHR0aGlzLnNwZWVkKHRoaXMuc2V0dGluZ3MuZHJhZ0VuZFNwZWVkIHx8IHRoaXMuc2V0dGluZ3Muc21hcnRTcGVlZCk7XG4gICAgXHRcdFx0dGhpcy5jdXJyZW50KHRoaXMuY2xvc2VzdChzdGFnZS54LCBkZWx0YS54ICE9PSAwID8gZGlyZWN0aW9uIDogdGhpcy5fZHJhZy5kaXJlY3Rpb24pKTtcbiAgICBcdFx0XHR0aGlzLmludmFsaWRhdGUoJ3Bvc2l0aW9uJyk7XG4gICAgXHRcdFx0dGhpcy51cGRhdGUoKTtcblxuICAgIFx0XHRcdHRoaXMuX2RyYWcuZGlyZWN0aW9uID0gZGlyZWN0aW9uO1xuXG4gICAgXHRcdFx0aWYgKE1hdGguYWJzKGRlbHRhLngpID4gMyB8fCBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRoaXMuX2RyYWcudGltZSA+IDMwMCkge1xuICAgIFx0XHRcdFx0dGhpcy5fZHJhZy50YXJnZXQub25lKCdjbGljay5vd2wuY29yZScsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2U7IH0pO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICghdGhpcy5pcygnZHJhZ2dpbmcnKSkge1xuICAgIFx0XHRcdHJldHVybjtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMubGVhdmUoJ2RyYWdnaW5nJyk7XG4gICAgXHRcdHRoaXMudHJpZ2dlcignZHJhZ2dlZCcpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjbG9zZXN0IGl0ZW0gZm9yIGEgY29vcmRpbmF0ZS5cbiAgICBcdCAqIEB0b2RvIFNldHRpbmcgYGZyZWVEcmFnYCBtYWtlcyBgY2xvc2VzdGAgbm90IHJldXNhYmxlLiBTZWUgIzE2NS5cbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBjb29yZGluYXRlIC0gVGhlIGNvb3JkaW5hdGUgaW4gcGl4ZWwuXG4gICAgXHQgKiBAcGFyYW0ge1N0cmluZ30gZGlyZWN0aW9uIC0gVGhlIGRpcmVjdGlvbiB0byBjaGVjayBmb3IgdGhlIGNsb3Nlc3QgaXRlbS4gRXRoZXIgYGxlZnRgIG9yIGByaWdodGAuXG4gICAgXHQgKiBAcmV0dXJuIHtOdW1iZXJ9IC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjbG9zZXN0IGl0ZW0uXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUuY2xvc2VzdCA9IGZ1bmN0aW9uKGNvb3JkaW5hdGUsIGRpcmVjdGlvbikge1xuICAgIFx0XHR2YXIgcG9zaXRpb24gPSAtMSxcbiAgICBcdFx0XHRwdWxsID0gMzAsXG4gICAgXHRcdFx0d2lkdGggPSB0aGlzLndpZHRoKCksXG4gICAgXHRcdFx0Y29vcmRpbmF0ZXMgPSB0aGlzLmNvb3JkaW5hdGVzKCk7XG5cbiAgICBcdFx0aWYgKCF0aGlzLnNldHRpbmdzLmZyZWVEcmFnKSB7XG4gICAgXHRcdFx0Ly8gY2hlY2sgY2xvc2VzdCBpdGVtXG4gICAgXHRcdFx0JC5lYWNoKGNvb3JkaW5hdGVzLCAkLnByb3h5KGZ1bmN0aW9uKGluZGV4LCB2YWx1ZSkge1xuICAgIFx0XHRcdFx0Ly8gb24gYSBsZWZ0IHB1bGwsIGNoZWNrIG9uIGN1cnJlbnQgaW5kZXhcbiAgICBcdFx0XHRcdGlmIChkaXJlY3Rpb24gPT09ICdsZWZ0JyAmJiBjb29yZGluYXRlID4gdmFsdWUgLSBwdWxsICYmIGNvb3JkaW5hdGUgPCB2YWx1ZSArIHB1bGwpIHtcbiAgICBcdFx0XHRcdFx0cG9zaXRpb24gPSBpbmRleDtcbiAgICBcdFx0XHRcdC8vIG9uIGEgcmlnaHQgcHVsbCwgY2hlY2sgb24gcHJldmlvdXMgaW5kZXhcbiAgICBcdFx0XHRcdC8vIHRvIGRvIHNvLCBzdWJ0cmFjdCB3aWR0aCBmcm9tIHZhbHVlIGFuZCBzZXQgcG9zaXRpb24gPSBpbmRleCArIDFcbiAgICBcdFx0XHRcdH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAncmlnaHQnICYmIGNvb3JkaW5hdGUgPiB2YWx1ZSAtIHdpZHRoIC0gcHVsbCAmJiBjb29yZGluYXRlIDwgdmFsdWUgLSB3aWR0aCArIHB1bGwpIHtcbiAgICBcdFx0XHRcdFx0cG9zaXRpb24gPSBpbmRleCArIDE7XG4gICAgXHRcdFx0XHR9IGVsc2UgaWYgKHRoaXMub3AoY29vcmRpbmF0ZSwgJzwnLCB2YWx1ZSlcbiAgICBcdFx0XHRcdFx0JiYgdGhpcy5vcChjb29yZGluYXRlLCAnPicsIGNvb3JkaW5hdGVzW2luZGV4ICsgMV0gIT09IHVuZGVmaW5lZCA/IGNvb3JkaW5hdGVzW2luZGV4ICsgMV0gOiB2YWx1ZSAtIHdpZHRoKSkge1xuICAgIFx0XHRcdFx0XHRwb3NpdGlvbiA9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gaW5kZXggKyAxIDogaW5kZXg7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0XHRyZXR1cm4gcG9zaXRpb24gPT09IC0xO1xuICAgIFx0XHRcdH0sIHRoaXMpKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICghdGhpcy5zZXR0aW5ncy5sb29wKSB7XG4gICAgXHRcdFx0Ly8gbm9uIGxvb3AgYm91bmRyaWVzXG4gICAgXHRcdFx0aWYgKHRoaXMub3AoY29vcmRpbmF0ZSwgJz4nLCBjb29yZGluYXRlc1t0aGlzLm1pbmltdW0oKV0pKSB7XG4gICAgXHRcdFx0XHRwb3NpdGlvbiA9IGNvb3JkaW5hdGUgPSB0aGlzLm1pbmltdW0oKTtcbiAgICBcdFx0XHR9IGVsc2UgaWYgKHRoaXMub3AoY29vcmRpbmF0ZSwgJzwnLCBjb29yZGluYXRlc1t0aGlzLm1heGltdW0oKV0pKSB7XG4gICAgXHRcdFx0XHRwb3NpdGlvbiA9IGNvb3JkaW5hdGUgPSB0aGlzLm1heGltdW0oKTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH1cblxuICAgIFx0XHRyZXR1cm4gcG9zaXRpb247XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEFuaW1hdGVzIHRoZSBzdGFnZS5cbiAgICBcdCAqIEB0b2RvICMyNzBcbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBjb29yZGluYXRlIC0gVGhlIGNvb3JkaW5hdGUgaW4gcGl4ZWxzLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmFuaW1hdGUgPSBmdW5jdGlvbihjb29yZGluYXRlKSB7XG4gICAgXHRcdHZhciBhbmltYXRlID0gdGhpcy5zcGVlZCgpID4gMDtcblxuICAgIFx0XHR0aGlzLmlzKCdhbmltYXRpbmcnKSAmJiB0aGlzLm9uVHJhbnNpdGlvbkVuZCgpO1xuXG4gICAgXHRcdGlmIChhbmltYXRlKSB7XG4gICAgXHRcdFx0dGhpcy5lbnRlcignYW5pbWF0aW5nJyk7XG4gICAgXHRcdFx0dGhpcy50cmlnZ2VyKCd0cmFuc2xhdGUnKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICgkLnN1cHBvcnQudHJhbnNmb3JtM2QgJiYgJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICBcdFx0XHR0aGlzLiRzdGFnZS5jc3Moe1xuICAgIFx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoJyArIGNvb3JkaW5hdGUgKyAncHgsMHB4LDBweCknLFxuICAgIFx0XHRcdFx0dHJhbnNpdGlvbjogKHRoaXMuc3BlZWQoKSAvIDEwMDApICsgJ3MnICsgKFxuICAgIFx0XHRcdFx0XHR0aGlzLnNldHRpbmdzLnNsaWRlVHJhbnNpdGlvbiA/ICcgJyArIHRoaXMuc2V0dGluZ3Muc2xpZGVUcmFuc2l0aW9uIDogJydcbiAgICBcdFx0XHRcdClcbiAgICBcdFx0XHR9KTtcbiAgICBcdFx0fSBlbHNlIGlmIChhbmltYXRlKSB7XG4gICAgXHRcdFx0dGhpcy4kc3RhZ2UuYW5pbWF0ZSh7XG4gICAgXHRcdFx0XHRsZWZ0OiBjb29yZGluYXRlICsgJ3B4J1xuICAgIFx0XHRcdH0sIHRoaXMuc3BlZWQoKSwgdGhpcy5zZXR0aW5ncy5mYWxsYmFja0Vhc2luZywgJC5wcm94eSh0aGlzLm9uVHJhbnNpdGlvbkVuZCwgdGhpcykpO1xuICAgIFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdHRoaXMuJHN0YWdlLmNzcyh7XG4gICAgXHRcdFx0XHRsZWZ0OiBjb29yZGluYXRlICsgJ3B4J1xuICAgIFx0XHRcdH0pO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENoZWNrcyB3aGV0aGVyIHRoZSBjYXJvdXNlbCBpcyBpbiBhIHNwZWNpZmljIHN0YXRlIG9yIG5vdC5cbiAgICBcdCAqIEBwYXJhbSB7U3RyaW5nfSBzdGF0ZSAtIFRoZSBzdGF0ZSB0byBjaGVjay5cbiAgICBcdCAqIEByZXR1cm5zIHtCb29sZWFufSAtIFRoZSBmbGFnIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgY2Fyb3VzZWwgaXMgYnVzeS5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5pcyA9IGZ1bmN0aW9uKHN0YXRlKSB7XG4gICAgXHRcdHJldHVybiB0aGlzLl9zdGF0ZXMuY3VycmVudFtzdGF0ZV0gJiYgdGhpcy5fc3RhdGVzLmN1cnJlbnRbc3RhdGVdID4gMDtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU2V0cyB0aGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGN1cnJlbnQgaXRlbS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIG5ldyBhYnNvbHV0ZSBwb3NpdGlvbiBvciBub3RoaW5nIHRvIGxlYXZlIGl0IHVuY2hhbmdlZC5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50IGl0ZW0uXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUuY3VycmVudCA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0cmV0dXJuIHRoaXMuX2N1cnJlbnQ7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodGhpcy5faXRlbXMubGVuZ3RoID09PSAwKSB7XG4gICAgXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24pO1xuXG4gICAgXHRcdGlmICh0aGlzLl9jdXJyZW50ICE9PSBwb3NpdGlvbikge1xuICAgIFx0XHRcdHZhciBldmVudCA9IHRoaXMudHJpZ2dlcignY2hhbmdlJywgeyBwcm9wZXJ0eTogeyBuYW1lOiAncG9zaXRpb24nLCB2YWx1ZTogcG9zaXRpb24gfSB9KTtcblxuICAgIFx0XHRcdGlmIChldmVudC5kYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUoZXZlbnQuZGF0YSk7XG4gICAgXHRcdFx0fVxuXG4gICAgXHRcdFx0dGhpcy5fY3VycmVudCA9IHBvc2l0aW9uO1xuXG4gICAgXHRcdFx0dGhpcy5pbnZhbGlkYXRlKCdwb3NpdGlvbicpO1xuXG4gICAgXHRcdFx0dGhpcy50cmlnZ2VyKCdjaGFuZ2VkJywgeyBwcm9wZXJ0eTogeyBuYW1lOiAncG9zaXRpb24nLCB2YWx1ZTogdGhpcy5fY3VycmVudCB9IH0pO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0cmV0dXJuIHRoaXMuX2N1cnJlbnQ7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEludmFsaWRhdGVzIHRoZSBnaXZlbiBwYXJ0IG9mIHRoZSB1cGRhdGUgcm91dGluZS5cbiAgICBcdCAqIEBwYXJhbSB7U3RyaW5nfSBbcGFydF0gLSBUaGUgcGFydCB0byBpbnZhbGlkYXRlLlxuICAgIFx0ICogQHJldHVybnMge0FycmF5LjxTdHJpbmc+fSAtIFRoZSBpbnZhbGlkYXRlZCBwYXJ0cy5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5pbnZhbGlkYXRlID0gZnVuY3Rpb24ocGFydCkge1xuICAgIFx0XHRpZiAoJC50eXBlKHBhcnQpID09PSAnc3RyaW5nJykge1xuICAgIFx0XHRcdHRoaXMuX2ludmFsaWRhdGVkW3BhcnRdID0gdHJ1ZTtcbiAgICBcdFx0XHR0aGlzLmlzKCd2YWxpZCcpICYmIHRoaXMubGVhdmUoJ3ZhbGlkJyk7XG4gICAgXHRcdH1cbiAgICBcdFx0cmV0dXJuICQubWFwKHRoaXMuX2ludmFsaWRhdGVkLCBmdW5jdGlvbih2LCBpKSB7IHJldHVybiBpIH0pO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBSZXNldHMgdGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50IGl0ZW0uXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIG5ldyBpdGVtLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICBcdFx0cG9zaXRpb24gPSB0aGlzLm5vcm1hbGl6ZShwb3NpdGlvbik7XG5cbiAgICBcdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLl9zcGVlZCA9IDA7XG4gICAgXHRcdHRoaXMuX2N1cnJlbnQgPSBwb3NpdGlvbjtcblxuICAgIFx0XHR0aGlzLnN1cHByZXNzKFsgJ3RyYW5zbGF0ZScsICd0cmFuc2xhdGVkJyBdKTtcblxuICAgIFx0XHR0aGlzLmFuaW1hdGUodGhpcy5jb29yZGluYXRlcyhwb3NpdGlvbikpO1xuXG4gICAgXHRcdHRoaXMucmVsZWFzZShbICd0cmFuc2xhdGUnLCAndHJhbnNsYXRlZCcgXSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIE5vcm1hbGl6ZXMgYW4gYWJzb2x1dGUgb3IgYSByZWxhdGl2ZSBwb3NpdGlvbiBvZiBhbiBpdGVtLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIGFic29sdXRlIG9yIHJlbGF0aXZlIHBvc2l0aW9uIHRvIG5vcm1hbGl6ZS5cbiAgICBcdCAqIEBwYXJhbSB7Qm9vbGVhbn0gW3JlbGF0aXZlPWZhbHNlXSAtIFdoZXRoZXIgdGhlIGdpdmVuIHBvc2l0aW9uIGlzIHJlbGF0aXZlIG9yIG5vdC5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIG5vcm1hbGl6ZWQgcG9zaXRpb24uXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUubm9ybWFsaXplID0gZnVuY3Rpb24ocG9zaXRpb24sIHJlbGF0aXZlKSB7XG4gICAgXHRcdHZhciBuID0gdGhpcy5faXRlbXMubGVuZ3RoLFxuICAgIFx0XHRcdG0gPSByZWxhdGl2ZSA/IDAgOiB0aGlzLl9jbG9uZXMubGVuZ3RoO1xuXG4gICAgXHRcdGlmICghdGhpcy5pc051bWVyaWMocG9zaXRpb24pIHx8IG4gPCAxKSB7XG4gICAgXHRcdFx0cG9zaXRpb24gPSB1bmRlZmluZWQ7XG4gICAgXHRcdH0gZWxzZSBpZiAocG9zaXRpb24gPCAwIHx8IHBvc2l0aW9uID49IG4gKyBtKSB7XG4gICAgXHRcdFx0cG9zaXRpb24gPSAoKHBvc2l0aW9uIC0gbSAvIDIpICUgbiArIG4pICUgbiArIG0gLyAyO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0cmV0dXJuIHBvc2l0aW9uO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDb252ZXJ0cyBhbiBhYnNvbHV0ZSBwb3NpdGlvbiBvZiBhbiBpdGVtIGludG8gYSByZWxhdGl2ZSBvbmUuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gdG8gY29udmVydC5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIGNvbnZlcnRlZCBwb3NpdGlvbi5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5yZWxhdGl2ZSA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgXHRcdHBvc2l0aW9uIC09IHRoaXMuX2Nsb25lcy5sZW5ndGggLyAyO1xuICAgIFx0XHRyZXR1cm4gdGhpcy5ub3JtYWxpemUocG9zaXRpb24sIHRydWUpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIHRoZSBtYXhpbXVtIHBvc2l0aW9uIGZvciB0aGUgY3VycmVudCBpdGVtLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtCb29sZWFufSBbcmVsYXRpdmU9ZmFsc2VdIC0gV2hldGhlciB0byByZXR1cm4gYW4gYWJzb2x1dGUgcG9zaXRpb24gb3IgYSByZWxhdGl2ZSBwb3NpdGlvbi5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUubWF4aW11bSA9IGZ1bmN0aW9uKHJlbGF0aXZlKSB7XG4gICAgXHRcdHZhciBzZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3MsXG4gICAgXHRcdFx0bWF4aW11bSA9IHRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aCxcbiAgICBcdFx0XHRpdGVyYXRvcixcbiAgICBcdFx0XHRyZWNpcHJvY2FsSXRlbXNXaWR0aCxcbiAgICBcdFx0XHRlbGVtZW50V2lkdGg7XG5cbiAgICBcdFx0aWYgKHNldHRpbmdzLmxvb3ApIHtcbiAgICBcdFx0XHRtYXhpbXVtID0gdGhpcy5fY2xvbmVzLmxlbmd0aCAvIDIgKyB0aGlzLl9pdGVtcy5sZW5ndGggLSAxO1xuICAgIFx0XHR9IGVsc2UgaWYgKHNldHRpbmdzLmF1dG9XaWR0aCB8fCBzZXR0aW5ncy5tZXJnZSkge1xuICAgIFx0XHRcdGl0ZXJhdG9yID0gdGhpcy5faXRlbXMubGVuZ3RoO1xuICAgIFx0XHRcdGlmIChpdGVyYXRvcikge1xuICAgIFx0XHRcdFx0cmVjaXByb2NhbEl0ZW1zV2lkdGggPSB0aGlzLl9pdGVtc1stLWl0ZXJhdG9yXS53aWR0aCgpO1xuICAgIFx0XHRcdFx0ZWxlbWVudFdpZHRoID0gdGhpcy4kZWxlbWVudC53aWR0aCgpO1xuICAgIFx0XHRcdFx0d2hpbGUgKGl0ZXJhdG9yLS0pIHtcbiAgICBcdFx0XHRcdFx0cmVjaXByb2NhbEl0ZW1zV2lkdGggKz0gdGhpcy5faXRlbXNbaXRlcmF0b3JdLndpZHRoKCkgKyB0aGlzLnNldHRpbmdzLm1hcmdpbjtcbiAgICBcdFx0XHRcdFx0aWYgKHJlY2lwcm9jYWxJdGVtc1dpZHRoID4gZWxlbWVudFdpZHRoKSB7XG4gICAgXHRcdFx0XHRcdFx0YnJlYWs7XG4gICAgXHRcdFx0XHRcdH1cbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9XG4gICAgXHRcdFx0bWF4aW11bSA9IGl0ZXJhdG9yICsgMTtcbiAgICBcdFx0fSBlbHNlIGlmIChzZXR0aW5ncy5jZW50ZXIpIHtcbiAgICBcdFx0XHRtYXhpbXVtID0gdGhpcy5faXRlbXMubGVuZ3RoIC0gMTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRtYXhpbXVtID0gdGhpcy5faXRlbXMubGVuZ3RoIC0gc2V0dGluZ3MuaXRlbXM7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAocmVsYXRpdmUpIHtcbiAgICBcdFx0XHRtYXhpbXVtIC09IHRoaXMuX2Nsb25lcy5sZW5ndGggLyAyO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0cmV0dXJuIE1hdGgubWF4KG1heGltdW0sIDApO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIHRoZSBtaW5pbXVtIHBvc2l0aW9uIGZvciB0aGUgY3VycmVudCBpdGVtLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtCb29sZWFufSBbcmVsYXRpdmU9ZmFsc2VdIC0gV2hldGhlciB0byByZXR1cm4gYW4gYWJzb2x1dGUgcG9zaXRpb24gb3IgYSByZWxhdGl2ZSBwb3NpdGlvbi5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUubWluaW11bSA9IGZ1bmN0aW9uKHJlbGF0aXZlKSB7XG4gICAgXHRcdHJldHVybiByZWxhdGl2ZSA/IDAgOiB0aGlzLl9jbG9uZXMubGVuZ3RoIC8gMjtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyBhbiBpdGVtIGF0IHRoZSBzcGVjaWZpZWQgcmVsYXRpdmUgcG9zaXRpb24uXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gW3Bvc2l0aW9uXSAtIFRoZSByZWxhdGl2ZSBwb3NpdGlvbiBvZiB0aGUgaXRlbS5cbiAgICBcdCAqIEByZXR1cm4ge2pRdWVyeXxBcnJheS48alF1ZXJ5Pn0gLSBUaGUgaXRlbSBhdCB0aGUgZ2l2ZW4gcG9zaXRpb24gb3IgYWxsIGl0ZW1zIGlmIG5vIHBvc2l0aW9uIHdhcyBnaXZlbi5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5pdGVtcyA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0cmV0dXJuIHRoaXMuX2l0ZW1zLnNsaWNlKCk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRwb3NpdGlvbiA9IHRoaXMubm9ybWFsaXplKHBvc2l0aW9uLCB0cnVlKTtcbiAgICBcdFx0cmV0dXJuIHRoaXMuX2l0ZW1zW3Bvc2l0aW9uXTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyBhbiBpdGVtIGF0IHRoZSBzcGVjaWZpZWQgcmVsYXRpdmUgcG9zaXRpb24uXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gW3Bvc2l0aW9uXSAtIFRoZSByZWxhdGl2ZSBwb3NpdGlvbiBvZiB0aGUgaXRlbS5cbiAgICBcdCAqIEByZXR1cm4ge2pRdWVyeXxBcnJheS48alF1ZXJ5Pn0gLSBUaGUgaXRlbSBhdCB0aGUgZ2l2ZW4gcG9zaXRpb24gb3IgYWxsIGl0ZW1zIGlmIG5vIHBvc2l0aW9uIHdhcyBnaXZlbi5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5tZXJnZXJzID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICBcdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRyZXR1cm4gdGhpcy5fbWVyZ2Vycy5zbGljZSgpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0cG9zaXRpb24gPSB0aGlzLm5vcm1hbGl6ZShwb3NpdGlvbiwgdHJ1ZSk7XG4gICAgXHRcdHJldHVybiB0aGlzLl9tZXJnZXJzW3Bvc2l0aW9uXTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyB0aGUgYWJzb2x1dGUgcG9zaXRpb25zIG9mIGNsb25lcyBmb3IgYW4gaXRlbS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRoZSBpdGVtLlxuICAgIFx0ICogQHJldHVybnMge0FycmF5LjxOdW1iZXI+fSAtIFRoZSBhYnNvbHV0ZSBwb3NpdGlvbnMgb2YgY2xvbmVzIGZvciB0aGUgaXRlbSBvciBhbGwgaWYgbm8gcG9zaXRpb24gd2FzIGdpdmVuLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmNsb25lcyA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgXHRcdHZhciBvZGQgPSB0aGlzLl9jbG9uZXMubGVuZ3RoIC8gMixcbiAgICBcdFx0XHRldmVuID0gb2RkICsgdGhpcy5faXRlbXMubGVuZ3RoLFxuICAgIFx0XHRcdG1hcCA9IGZ1bmN0aW9uKGluZGV4KSB7IHJldHVybiBpbmRleCAlIDIgPT09IDAgPyBldmVuICsgaW5kZXggLyAyIDogb2RkIC0gKGluZGV4ICsgMSkgLyAyIH07XG5cbiAgICBcdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRyZXR1cm4gJC5tYXAodGhpcy5fY2xvbmVzLCBmdW5jdGlvbih2LCBpKSB7IHJldHVybiBtYXAoaSkgfSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRyZXR1cm4gJC5tYXAodGhpcy5fY2xvbmVzLCBmdW5jdGlvbih2LCBpKSB7IHJldHVybiB2ID09PSBwb3NpdGlvbiA/IG1hcChpKSA6IG51bGwgfSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFNldHMgdGhlIGN1cnJlbnQgYW5pbWF0aW9uIHNwZWVkLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgYW5pbWF0aW9uIHNwZWVkIGluIG1pbGxpc2Vjb25kcyBvciBub3RoaW5nIHRvIGxlYXZlIGl0IHVuY2hhbmdlZC5cbiAgICBcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIGN1cnJlbnQgYW5pbWF0aW9uIHNwZWVkIGluIG1pbGxpc2Vjb25kcy5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5zcGVlZCA9IGZ1bmN0aW9uKHNwZWVkKSB7XG4gICAgXHRcdGlmIChzcGVlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0dGhpcy5fc3BlZWQgPSBzcGVlZDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHJldHVybiB0aGlzLl9zcGVlZDtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyB0aGUgY29vcmRpbmF0ZSBvZiBhbiBpdGVtLlxuICAgIFx0ICogQHRvZG8gVGhlIG5hbWUgb2YgdGhpcyBtZXRob2QgaXMgbWlzc2xlYW5kaW5nLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBpdGVtIHdpdGhpbiBgbWluaW11bSgpYCBhbmQgYG1heGltdW0oKWAuXG4gICAgXHQgKiBAcmV0dXJucyB7TnVtYmVyfEFycmF5LjxOdW1iZXI+fSAtIFRoZSBjb29yZGluYXRlIG9mIHRoZSBpdGVtIGluIHBpeGVsIG9yIGFsbCBjb29yZGluYXRlcy5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5jb29yZGluYXRlcyA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgXHRcdHZhciBtdWx0aXBsaWVyID0gMSxcbiAgICBcdFx0XHRuZXdQb3NpdGlvbiA9IHBvc2l0aW9uIC0gMSxcbiAgICBcdFx0XHRjb29yZGluYXRlO1xuXG4gICAgXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0cmV0dXJuICQubWFwKHRoaXMuX2Nvb3JkaW5hdGVzLCAkLnByb3h5KGZ1bmN0aW9uKGNvb3JkaW5hdGUsIGluZGV4KSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gdGhpcy5jb29yZGluYXRlcyhpbmRleCk7XG4gICAgXHRcdFx0fSwgdGhpcykpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0aWYgKHRoaXMuc2V0dGluZ3MuY2VudGVyKSB7XG4gICAgXHRcdFx0aWYgKHRoaXMuc2V0dGluZ3MucnRsKSB7XG4gICAgXHRcdFx0XHRtdWx0aXBsaWVyID0gLTE7XG4gICAgXHRcdFx0XHRuZXdQb3NpdGlvbiA9IHBvc2l0aW9uICsgMTtcbiAgICBcdFx0XHR9XG5cbiAgICBcdFx0XHRjb29yZGluYXRlID0gdGhpcy5fY29vcmRpbmF0ZXNbcG9zaXRpb25dO1xuICAgIFx0XHRcdGNvb3JkaW5hdGUgKz0gKHRoaXMud2lkdGgoKSAtIGNvb3JkaW5hdGUgKyAodGhpcy5fY29vcmRpbmF0ZXNbbmV3UG9zaXRpb25dIHx8IDApKSAvIDIgKiBtdWx0aXBsaWVyO1xuICAgIFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdGNvb3JkaW5hdGUgPSB0aGlzLl9jb29yZGluYXRlc1tuZXdQb3NpdGlvbl0gfHwgMDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGNvb3JkaW5hdGUgPSBNYXRoLmNlaWwoY29vcmRpbmF0ZSk7XG5cbiAgICBcdFx0cmV0dXJuIGNvb3JkaW5hdGU7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENhbGN1bGF0ZXMgdGhlIHNwZWVkIGZvciBhIHRyYW5zbGF0aW9uLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IGZyb20gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIHN0YXJ0IGl0ZW0uXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gdG8gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIHRhcmdldCBpdGVtLlxuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtmYWN0b3I9dW5kZWZpbmVkXSAtIFRoZSB0aW1lIGZhY3RvciBpbiBtaWxsaXNlY29uZHMuXG4gICAgXHQgKiBAcmV0dXJucyB7TnVtYmVyfSAtIFRoZSB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgdGhlIHRyYW5zbGF0aW9uLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmR1cmF0aW9uID0gZnVuY3Rpb24oZnJvbSwgdG8sIGZhY3Rvcikge1xuICAgIFx0XHRpZiAoZmFjdG9yID09PSAwKSB7XG4gICAgXHRcdFx0cmV0dXJuIDA7XG4gICAgXHRcdH1cblxuICAgIFx0XHRyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5hYnModG8gLSBmcm9tKSwgMSksIDYpICogTWF0aC5hYnMoKGZhY3RvciB8fCB0aGlzLnNldHRpbmdzLnNtYXJ0U3BlZWQpKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU2xpZGVzIHRvIHRoZSBzcGVjaWZpZWQgaXRlbS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBwb3NpdGlvbiAtIFRoZSBwb3NpdGlvbiBvZiB0aGUgaXRlbS5cbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbc3BlZWRdIC0gVGhlIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGZvciB0aGUgdHJhbnNpdGlvbi5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBzcGVlZCkge1xuICAgIFx0XHR2YXIgY3VycmVudCA9IHRoaXMuY3VycmVudCgpLFxuICAgIFx0XHRcdHJldmVydCA9IG51bGwsXG4gICAgXHRcdFx0ZGlzdGFuY2UgPSBwb3NpdGlvbiAtIHRoaXMucmVsYXRpdmUoY3VycmVudCksXG4gICAgXHRcdFx0ZGlyZWN0aW9uID0gKGRpc3RhbmNlID4gMCkgLSAoZGlzdGFuY2UgPCAwKSxcbiAgICBcdFx0XHRpdGVtcyA9IHRoaXMuX2l0ZW1zLmxlbmd0aCxcbiAgICBcdFx0XHRtaW5pbXVtID0gdGhpcy5taW5pbXVtKCksXG4gICAgXHRcdFx0bWF4aW11bSA9IHRoaXMubWF4aW11bSgpO1xuXG4gICAgXHRcdGlmICh0aGlzLnNldHRpbmdzLmxvb3ApIHtcbiAgICBcdFx0XHRpZiAoIXRoaXMuc2V0dGluZ3MucmV3aW5kICYmIE1hdGguYWJzKGRpc3RhbmNlKSA+IGl0ZW1zIC8gMikge1xuICAgIFx0XHRcdFx0ZGlzdGFuY2UgKz0gZGlyZWN0aW9uICogLTEgKiBpdGVtcztcbiAgICBcdFx0XHR9XG5cbiAgICBcdFx0XHRwb3NpdGlvbiA9IGN1cnJlbnQgKyBkaXN0YW5jZTtcbiAgICBcdFx0XHRyZXZlcnQgPSAoKHBvc2l0aW9uIC0gbWluaW11bSkgJSBpdGVtcyArIGl0ZW1zKSAlIGl0ZW1zICsgbWluaW11bTtcblxuICAgIFx0XHRcdGlmIChyZXZlcnQgIT09IHBvc2l0aW9uICYmIHJldmVydCAtIGRpc3RhbmNlIDw9IG1heGltdW0gJiYgcmV2ZXJ0IC0gZGlzdGFuY2UgPiAwKSB7XG4gICAgXHRcdFx0XHRjdXJyZW50ID0gcmV2ZXJ0IC0gZGlzdGFuY2U7XG4gICAgXHRcdFx0XHRwb3NpdGlvbiA9IHJldmVydDtcbiAgICBcdFx0XHRcdHRoaXMucmVzZXQoY3VycmVudCk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9IGVsc2UgaWYgKHRoaXMuc2V0dGluZ3MucmV3aW5kKSB7XG4gICAgXHRcdFx0bWF4aW11bSArPSAxO1xuICAgIFx0XHRcdHBvc2l0aW9uID0gKHBvc2l0aW9uICUgbWF4aW11bSArIG1heGltdW0pICUgbWF4aW11bTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRwb3NpdGlvbiA9IE1hdGgubWF4KG1pbmltdW0sIE1hdGgubWluKG1heGltdW0sIHBvc2l0aW9uKSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLnNwZWVkKHRoaXMuZHVyYXRpb24oY3VycmVudCwgcG9zaXRpb24sIHNwZWVkKSk7XG4gICAgXHRcdHRoaXMuY3VycmVudChwb3NpdGlvbik7XG5cbiAgICBcdFx0aWYgKHRoaXMuaXNWaXNpYmxlKCkpIHtcbiAgICBcdFx0XHR0aGlzLnVwZGF0ZSgpO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFNsaWRlcyB0byB0aGUgbmV4dCBpdGVtLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbihzcGVlZCkge1xuICAgIFx0XHRzcGVlZCA9IHNwZWVkIHx8IGZhbHNlO1xuICAgIFx0XHR0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpICsgMSwgc3BlZWQpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBTbGlkZXMgdG8gdGhlIHByZXZpb3VzIGl0ZW0uXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gW3NwZWVkXSAtIFRoZSB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgdGhlIHRyYW5zaXRpb24uXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uKHNwZWVkKSB7XG4gICAgXHRcdHNwZWVkID0gc3BlZWQgfHwgZmFsc2U7XG4gICAgXHRcdHRoaXMudG8odGhpcy5yZWxhdGl2ZSh0aGlzLmN1cnJlbnQoKSkgLSAxLCBzcGVlZCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEhhbmRsZXMgdGhlIGVuZCBvZiBhbiBhbmltYXRpb24uXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge0V2ZW50fSBldmVudCAtIFRoZSBldmVudCBhcmd1bWVudHMuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub25UcmFuc2l0aW9uRW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgIFx0XHQvLyBpZiBjc3MyIGFuaW1hdGlvbiB0aGVuIGV2ZW50IG9iamVjdCBpcyB1bmRlZmluZWRcbiAgICBcdFx0aWYgKGV2ZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIFx0XHRcdC8vIENhdGNoIG9ubHkgb3dsLXN0YWdlIHRyYW5zaXRpb25FbmQgZXZlbnRcbiAgICBcdFx0XHRpZiAoKGV2ZW50LnRhcmdldCB8fCBldmVudC5zcmNFbGVtZW50IHx8IGV2ZW50Lm9yaWdpbmFsVGFyZ2V0KSAhPT0gdGhpcy4kc3RhZ2UuZ2V0KDApKSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy5sZWF2ZSgnYW5pbWF0aW5nJyk7XG4gICAgXHRcdHRoaXMudHJpZ2dlcigndHJhbnNsYXRlZCcpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIHZpZXdwb3J0IHdpZHRoLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHJldHVybiB7TnVtYmVyfSAtIFRoZSB3aWR0aCBpbiBwaXhlbC5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS52aWV3cG9ydCA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgd2lkdGg7XG4gICAgXHRcdGlmICh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50ICE9PSB3aW5kb3cpIHtcbiAgICBcdFx0XHR3aWR0aCA9ICQodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVCYXNlRWxlbWVudCkud2lkdGgoKTtcbiAgICBcdFx0fSBlbHNlIGlmICh3aW5kb3cuaW5uZXJXaWR0aCkge1xuICAgIFx0XHRcdHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgXHRcdH0gZWxzZSBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCkge1xuICAgIFx0XHRcdHdpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xuICAgIFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdGNvbnNvbGUud2FybignQ2FuIG5vdCBkZXRlY3Qgdmlld3BvcnQgd2lkdGguJyk7XG4gICAgXHRcdH1cbiAgICBcdFx0cmV0dXJuIHdpZHRoO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBSZXBsYWNlcyB0aGUgY3VycmVudCBjb250ZW50LlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtIVE1MRWxlbWVudHxqUXVlcnl8U3RyaW5nfSBjb250ZW50IC0gVGhlIG5ldyBjb250ZW50LlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgXHRcdHRoaXMuJHN0YWdlLmVtcHR5KCk7XG4gICAgXHRcdHRoaXMuX2l0ZW1zID0gW107XG5cbiAgICBcdFx0aWYgKGNvbnRlbnQpIHtcbiAgICBcdFx0XHRjb250ZW50ID0gKGNvbnRlbnQgaW5zdGFuY2VvZiBqUXVlcnkpID8gY29udGVudCA6ICQoY29udGVudCk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IpIHtcbiAgICBcdFx0XHRjb250ZW50ID0gY29udGVudC5maW5kKCcuJyArIHRoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGNvbnRlbnQuZmlsdGVyKGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdHJldHVybiB0aGlzLm5vZGVUeXBlID09PSAxO1xuICAgIFx0XHR9KS5lYWNoKCQucHJveHkoZnVuY3Rpb24oaW5kZXgsIGl0ZW0pIHtcbiAgICBcdFx0XHRpdGVtID0gdGhpcy5wcmVwYXJlKGl0ZW0pO1xuICAgIFx0XHRcdHRoaXMuJHN0YWdlLmFwcGVuZChpdGVtKTtcbiAgICBcdFx0XHR0aGlzLl9pdGVtcy5wdXNoKGl0ZW0pO1xuICAgIFx0XHRcdHRoaXMuX21lcmdlcnMucHVzaChpdGVtLmZpbmQoJ1tkYXRhLW1lcmdlXScpLmFkZEJhY2soJ1tkYXRhLW1lcmdlXScpLmF0dHIoJ2RhdGEtbWVyZ2UnKSAqIDEgfHwgMSk7XG4gICAgXHRcdH0sIHRoaXMpKTtcblxuICAgIFx0XHR0aGlzLnJlc2V0KHRoaXMuaXNOdW1lcmljKHRoaXMuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbikgPyB0aGlzLnNldHRpbmdzLnN0YXJ0UG9zaXRpb24gOiAwKTtcblxuICAgIFx0XHR0aGlzLmludmFsaWRhdGUoJ2l0ZW1zJyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEFkZHMgYW4gaXRlbS5cbiAgICBcdCAqIEB0b2RvIFVzZSBgaXRlbWAgaW5zdGVhZCBvZiBgY29udGVudGAgZm9yIHRoZSBldmVudCBhcmd1bWVudHMuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge0hUTUxFbGVtZW50fGpRdWVyeXxTdHJpbmd9IGNvbnRlbnQgLSBUaGUgaXRlbSBjb250ZW50IHRvIGFkZC5cbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIHJlbGF0aXZlIHBvc2l0aW9uIGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbSBvdGhlcndpc2UgdGhlIGl0ZW0gd2lsbCBiZSBhZGRlZCB0byB0aGUgZW5kLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKGNvbnRlbnQsIHBvc2l0aW9uKSB7XG4gICAgXHRcdHZhciBjdXJyZW50ID0gdGhpcy5yZWxhdGl2ZSh0aGlzLl9jdXJyZW50KTtcblxuICAgIFx0XHRwb3NpdGlvbiA9IHBvc2l0aW9uID09PSB1bmRlZmluZWQgPyB0aGlzLl9pdGVtcy5sZW5ndGggOiB0aGlzLm5vcm1hbGl6ZShwb3NpdGlvbiwgdHJ1ZSk7XG4gICAgXHRcdGNvbnRlbnQgPSBjb250ZW50IGluc3RhbmNlb2YgalF1ZXJ5ID8gY29udGVudCA6ICQoY29udGVudCk7XG5cbiAgICBcdFx0dGhpcy50cmlnZ2VyKCdhZGQnLCB7IGNvbnRlbnQ6IGNvbnRlbnQsIHBvc2l0aW9uOiBwb3NpdGlvbiB9KTtcblxuICAgIFx0XHRjb250ZW50ID0gdGhpcy5wcmVwYXJlKGNvbnRlbnQpO1xuXG4gICAgXHRcdGlmICh0aGlzLl9pdGVtcy5sZW5ndGggPT09IDAgfHwgcG9zaXRpb24gPT09IHRoaXMuX2l0ZW1zLmxlbmd0aCkge1xuICAgIFx0XHRcdHRoaXMuX2l0ZW1zLmxlbmd0aCA9PT0gMCAmJiB0aGlzLiRzdGFnZS5hcHBlbmQoY29udGVudCk7XG4gICAgXHRcdFx0dGhpcy5faXRlbXMubGVuZ3RoICE9PSAwICYmIHRoaXMuX2l0ZW1zW3Bvc2l0aW9uIC0gMV0uYWZ0ZXIoY29udGVudCk7XG4gICAgXHRcdFx0dGhpcy5faXRlbXMucHVzaChjb250ZW50KTtcbiAgICBcdFx0XHR0aGlzLl9tZXJnZXJzLnB1c2goY29udGVudC5maW5kKCdbZGF0YS1tZXJnZV0nKS5hZGRCYWNrKCdbZGF0YS1tZXJnZV0nKS5hdHRyKCdkYXRhLW1lcmdlJykgKiAxIHx8IDEpO1xuICAgIFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdHRoaXMuX2l0ZW1zW3Bvc2l0aW9uXS5iZWZvcmUoY29udGVudCk7XG4gICAgXHRcdFx0dGhpcy5faXRlbXMuc3BsaWNlKHBvc2l0aW9uLCAwLCBjb250ZW50KTtcbiAgICBcdFx0XHR0aGlzLl9tZXJnZXJzLnNwbGljZShwb3NpdGlvbiwgMCwgY29udGVudC5maW5kKCdbZGF0YS1tZXJnZV0nKS5hZGRCYWNrKCdbZGF0YS1tZXJnZV0nKS5hdHRyKCdkYXRhLW1lcmdlJykgKiAxIHx8IDEpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy5faXRlbXNbY3VycmVudF0gJiYgdGhpcy5yZXNldCh0aGlzLl9pdGVtc1tjdXJyZW50XS5pbmRleCgpKTtcblxuICAgIFx0XHR0aGlzLmludmFsaWRhdGUoJ2l0ZW1zJyk7XG5cbiAgICBcdFx0dGhpcy50cmlnZ2VyKCdhZGRlZCcsIHsgY29udGVudDogY29udGVudCwgcG9zaXRpb246IHBvc2l0aW9uIH0pO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBSZW1vdmVzIGFuIGl0ZW0gYnkgaXRzIHBvc2l0aW9uLlxuICAgIFx0ICogQHRvZG8gVXNlIGBpdGVtYCBpbnN0ZWFkIG9mIGBjb250ZW50YCBmb3IgdGhlIGV2ZW50IGFyZ3VtZW50cy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBwb3NpdGlvbiAtIFRoZSByZWxhdGl2ZSBwb3NpdGlvbiBvZiB0aGUgaXRlbSB0byByZW1vdmUuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICBcdFx0cG9zaXRpb24gPSB0aGlzLm5vcm1hbGl6ZShwb3NpdGlvbiwgdHJ1ZSk7XG5cbiAgICBcdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLnRyaWdnZXIoJ3JlbW92ZScsIHsgY29udGVudDogdGhpcy5faXRlbXNbcG9zaXRpb25dLCBwb3NpdGlvbjogcG9zaXRpb24gfSk7XG5cbiAgICBcdFx0dGhpcy5faXRlbXNbcG9zaXRpb25dLnJlbW92ZSgpO1xuICAgIFx0XHR0aGlzLl9pdGVtcy5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgIFx0XHR0aGlzLl9tZXJnZXJzLnNwbGljZShwb3NpdGlvbiwgMSk7XG5cbiAgICBcdFx0dGhpcy5pbnZhbGlkYXRlKCdpdGVtcycpO1xuXG4gICAgXHRcdHRoaXMudHJpZ2dlcigncmVtb3ZlZCcsIHsgY29udGVudDogbnVsbCwgcG9zaXRpb246IHBvc2l0aW9uIH0pO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBQcmVsb2FkcyBpbWFnZXMgd2l0aCBhdXRvIHdpZHRoLlxuICAgIFx0ICogQHRvZG8gUmVwbGFjZSBieSBhIG1vcmUgZ2VuZXJpYyBhcHByb2FjaFxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMgPSBmdW5jdGlvbihpbWFnZXMpIHtcbiAgICBcdFx0aW1hZ2VzLmVhY2goJC5wcm94eShmdW5jdGlvbihpLCBlbGVtZW50KSB7XG4gICAgXHRcdFx0dGhpcy5lbnRlcigncHJlLWxvYWRpbmcnKTtcbiAgICBcdFx0XHRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICBcdFx0XHQkKG5ldyBJbWFnZSgpKS5vbmUoJ2xvYWQnLCAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGVsZW1lbnQuYXR0cignc3JjJywgZS50YXJnZXQuc3JjKTtcbiAgICBcdFx0XHRcdGVsZW1lbnQuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgXHRcdFx0XHR0aGlzLmxlYXZlKCdwcmUtbG9hZGluZycpO1xuICAgIFx0XHRcdFx0IXRoaXMuaXMoJ3ByZS1sb2FkaW5nJykgJiYgIXRoaXMuaXMoJ2luaXRpYWxpemluZycpICYmIHRoaXMucmVmcmVzaCgpO1xuICAgIFx0XHRcdH0sIHRoaXMpKS5hdHRyKCdzcmMnLCBlbGVtZW50LmF0dHIoJ3NyYycpIHx8IGVsZW1lbnQuYXR0cignZGF0YS1zcmMnKSB8fCBlbGVtZW50LmF0dHIoJ2RhdGEtc3JjLXJldGluYScpKTtcbiAgICBcdFx0fSwgdGhpcykpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgY2Fyb3VzZWwuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgXHRcdHRoaXMuJGVsZW1lbnQub2ZmKCcub3dsLmNvcmUnKTtcbiAgICBcdFx0dGhpcy4kc3RhZ2Uub2ZmKCcub3dsLmNvcmUnKTtcbiAgICBcdFx0JChkb2N1bWVudCkub2ZmKCcub3dsLmNvcmUnKTtcblxuICAgIFx0XHRpZiAodGhpcy5zZXR0aW5ncy5yZXNwb25zaXZlICE9PSBmYWxzZSkge1xuICAgIFx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lcik7XG4gICAgXHRcdFx0dGhpcy5vZmYod2luZG93LCAncmVzaXplJywgdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0Zm9yICh2YXIgaSBpbiB0aGlzLl9wbHVnaW5zKSB7XG4gICAgXHRcdFx0dGhpcy5fcGx1Z2luc1tpXS5kZXN0cm95KCk7XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbignLmNsb25lZCcpLnJlbW92ZSgpO1xuXG4gICAgXHRcdHRoaXMuJHN0YWdlLnVud3JhcCgpO1xuICAgIFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNvbnRlbnRzKCkudW53cmFwKCk7XG4gICAgXHRcdHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkudW53cmFwKCk7XG4gICAgXHRcdHRoaXMuJHN0YWdlLnJlbW92ZSgpO1xuICAgIFx0XHR0aGlzLiRlbGVtZW50XG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5yZWZyZXNoQ2xhc3MpXG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpXG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5sb2FkZWRDbGFzcylcbiAgICBcdFx0XHQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnJ0bENsYXNzKVxuICAgIFx0XHRcdC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuZHJhZ0NsYXNzKVxuICAgIFx0XHRcdC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuZ3JhYkNsYXNzKVxuICAgIFx0XHRcdC5hdHRyKCdjbGFzcycsIHRoaXMuJGVsZW1lbnQuYXR0cignY2xhc3MnKS5yZXBsYWNlKG5ldyBSZWdFeHAodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVDbGFzcyArICctXFxcXFMrXFxcXHMnLCAnZycpLCAnJykpXG4gICAgXHRcdFx0LnJlbW92ZURhdGEoJ293bC5jYXJvdXNlbCcpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBPcGVyYXRvcnMgdG8gY2FsY3VsYXRlIHJpZ2h0LXRvLWxlZnQgYW5kIGxlZnQtdG8tcmlnaHQuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gW2FdIC0gVGhlIGxlZnQgc2lkZSBvcGVyYW5kLlxuICAgIFx0ICogQHBhcmFtIHtTdHJpbmd9IFtvXSAtIFRoZSBvcGVyYXRvci5cbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbYl0gLSBUaGUgcmlnaHQgc2lkZSBvcGVyYW5kLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLm9wID0gZnVuY3Rpb24oYSwgbywgYikge1xuICAgIFx0XHR2YXIgcnRsID0gdGhpcy5zZXR0aW5ncy5ydGw7XG4gICAgXHRcdHN3aXRjaCAobykge1xuICAgIFx0XHRcdGNhc2UgJzwnOlxuICAgIFx0XHRcdFx0cmV0dXJuIHJ0bCA/IGEgPiBiIDogYSA8IGI7XG4gICAgXHRcdFx0Y2FzZSAnPic6XG4gICAgXHRcdFx0XHRyZXR1cm4gcnRsID8gYSA8IGIgOiBhID4gYjtcbiAgICBcdFx0XHRjYXNlICc+PSc6XG4gICAgXHRcdFx0XHRyZXR1cm4gcnRsID8gYSA8PSBiIDogYSA+PSBiO1xuICAgIFx0XHRcdGNhc2UgJzw9JzpcbiAgICBcdFx0XHRcdHJldHVybiBydGwgPyBhID49IGIgOiBhIDw9IGI7XG4gICAgXHRcdFx0ZGVmYXVsdDpcbiAgICBcdFx0XHRcdGJyZWFrO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEF0dGFjaGVzIHRvIGFuIGludGVybmFsIGV2ZW50LlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCAtIFRoZSBldmVudCBzb3VyY2UuXG4gICAgXHQgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnQgLSBUaGUgZXZlbnQgbmFtZS5cbiAgICBcdCAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIC0gVGhlIGV2ZW50IGhhbmRsZXIgdG8gYXR0YWNoLlxuICAgIFx0ICogQHBhcmFtIHtCb29sZWFufSBjYXB0dXJlIC0gV2V0aGVyIHRoZSBldmVudCBzaG91bGQgYmUgaGFuZGxlZCBhdCB0aGUgY2FwdHVyaW5nIHBoYXNlIG9yIG5vdC5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKGVsZW1lbnQsIGV2ZW50LCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgIFx0XHRpZiAoZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgXHRcdFx0ZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgXHRcdH0gZWxzZSBpZiAoZWxlbWVudC5hdHRhY2hFdmVudCkge1xuICAgIFx0XHRcdGVsZW1lbnQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRGV0YWNoZXMgZnJvbSBhbiBpbnRlcm5hbCBldmVudC5cbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnQgLSBUaGUgZXZlbnQgc291cmNlLlxuICAgIFx0ICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50IC0gVGhlIGV2ZW50IG5hbWUuXG4gICAgXHQgKiBAcGFyYW0ge0Z1bmN0aW9ufSBsaXN0ZW5lciAtIFRoZSBhdHRhY2hlZCBldmVudCBoYW5kbGVyIHRvIGRldGFjaC5cbiAgICBcdCAqIEBwYXJhbSB7Qm9vbGVhbn0gY2FwdHVyZSAtIFdldGhlciB0aGUgYXR0YWNoZWQgZXZlbnQgaGFuZGxlciB3YXMgcmVnaXN0ZXJlZCBhcyBhIGNhcHR1cmluZyBsaXN0ZW5lciBvciBub3QuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUub2ZmID0gZnVuY3Rpb24oZWxlbWVudCwgZXZlbnQsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XG4gICAgXHRcdGlmIChlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIpIHtcbiAgICBcdFx0XHRlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICBcdFx0fSBlbHNlIGlmIChlbGVtZW50LmRldGFjaEV2ZW50KSB7XG4gICAgXHRcdFx0ZWxlbWVudC5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBUcmlnZ2VycyBhIHB1YmxpYyBldmVudC5cbiAgICBcdCAqIEB0b2RvIFJlbW92ZSBgc3RhdHVzYCwgYHJlbGF0ZWRUYXJnZXRgIHNob3VsZCBiZSB1c2VkIGluc3RlYWQuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSAtIFRoZSBldmVudCBuYW1lLlxuICAgIFx0ICogQHBhcmFtIHsqfSBbZGF0YT1udWxsXSAtIFRoZSBldmVudCBkYXRhLlxuICAgIFx0ICogQHBhcmFtIHtTdHJpbmd9IFtuYW1lc3BhY2U9Y2Fyb3VzZWxdIC0gVGhlIGV2ZW50IG5hbWVzcGFjZS5cbiAgICBcdCAqIEBwYXJhbSB7U3RyaW5nfSBbc3RhdGVdIC0gVGhlIHN0YXRlIHdoaWNoIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXZlbnQuXG4gICAgXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFtlbnRlcj1mYWxzZV0gLSBJbmRpY2F0ZXMgaWYgdGhlIGNhbGwgZW50ZXJzIHRoZSBzcGVjaWZpZWQgc3RhdGUgb3Igbm90LlxuICAgIFx0ICogQHJldHVybnMge0V2ZW50fSAtIFRoZSBldmVudCBhcmd1bWVudHMuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKG5hbWUsIGRhdGEsIG5hbWVzcGFjZSwgc3RhdGUsIGVudGVyKSB7XG4gICAgXHRcdHZhciBzdGF0dXMgPSB7XG4gICAgXHRcdFx0aXRlbTogeyBjb3VudDogdGhpcy5faXRlbXMubGVuZ3RoLCBpbmRleDogdGhpcy5jdXJyZW50KCkgfVxuICAgIFx0XHR9LCBoYW5kbGVyID0gJC5jYW1lbENhc2UoXG4gICAgXHRcdFx0JC5ncmVwKFsgJ29uJywgbmFtZSwgbmFtZXNwYWNlIF0sIGZ1bmN0aW9uKHYpIHsgcmV0dXJuIHYgfSlcbiAgICBcdFx0XHRcdC5qb2luKCctJykudG9Mb3dlckNhc2UoKVxuICAgIFx0XHQpLCBldmVudCA9ICQuRXZlbnQoXG4gICAgXHRcdFx0WyBuYW1lLCAnb3dsJywgbmFtZXNwYWNlIHx8ICdjYXJvdXNlbCcgXS5qb2luKCcuJykudG9Mb3dlckNhc2UoKSxcbiAgICBcdFx0XHQkLmV4dGVuZCh7IHJlbGF0ZWRUYXJnZXQ6IHRoaXMgfSwgc3RhdHVzLCBkYXRhKVxuICAgIFx0XHQpO1xuXG4gICAgXHRcdGlmICghdGhpcy5fc3VwcmVzc1tuYW1lXSkge1xuICAgIFx0XHRcdCQuZWFjaCh0aGlzLl9wbHVnaW5zLCBmdW5jdGlvbihuYW1lLCBwbHVnaW4pIHtcbiAgICBcdFx0XHRcdGlmIChwbHVnaW4ub25UcmlnZ2VyKSB7XG4gICAgXHRcdFx0XHRcdHBsdWdpbi5vblRyaWdnZXIoZXZlbnQpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0pO1xuXG4gICAgXHRcdFx0dGhpcy5yZWdpc3Rlcih7IHR5cGU6IE93bC5UeXBlLkV2ZW50LCBuYW1lOiBuYW1lIH0pO1xuICAgIFx0XHRcdHRoaXMuJGVsZW1lbnQudHJpZ2dlcihldmVudCk7XG5cbiAgICBcdFx0XHRpZiAodGhpcy5zZXR0aW5ncyAmJiB0eXBlb2YgdGhpcy5zZXR0aW5nc1toYW5kbGVyXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIFx0XHRcdFx0dGhpcy5zZXR0aW5nc1toYW5kbGVyXS5jYWxsKHRoaXMsIGV2ZW50KTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH1cblxuICAgIFx0XHRyZXR1cm4gZXZlbnQ7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEVudGVycyBhIHN0YXRlLlxuICAgIFx0ICogQHBhcmFtIG5hbWUgLSBUaGUgc3RhdGUgbmFtZS5cbiAgICBcdCAqL1xuICAgIFx0T3dsLnByb3RvdHlwZS5lbnRlciA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBcdFx0JC5lYWNoKFsgbmFtZSBdLmNvbmNhdCh0aGlzLl9zdGF0ZXMudGFnc1tuYW1lXSB8fCBbXSksICQucHJveHkoZnVuY3Rpb24oaSwgbmFtZSkge1xuICAgIFx0XHRcdGlmICh0aGlzLl9zdGF0ZXMuY3VycmVudFtuYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0XHR0aGlzLl9zdGF0ZXMuY3VycmVudFtuYW1lXSA9IDA7XG4gICAgXHRcdFx0fVxuXG4gICAgXHRcdFx0dGhpcy5fc3RhdGVzLmN1cnJlbnRbbmFtZV0rKztcbiAgICBcdFx0fSwgdGhpcykpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBMZWF2ZXMgYSBzdGF0ZS5cbiAgICBcdCAqIEBwYXJhbSBuYW1lIC0gVGhlIHN0YXRlIG5hbWUuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUubGVhdmUgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgXHRcdCQuZWFjaChbIG5hbWUgXS5jb25jYXQodGhpcy5fc3RhdGVzLnRhZ3NbbmFtZV0gfHwgW10pLCAkLnByb3h5KGZ1bmN0aW9uKGksIG5hbWUpIHtcbiAgICBcdFx0XHR0aGlzLl9zdGF0ZXMuY3VycmVudFtuYW1lXS0tO1xuICAgIFx0XHR9LCB0aGlzKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFJlZ2lzdGVycyBhbiBldmVudCBvciBzdGF0ZS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgLSBUaGUgZXZlbnQgb3Igc3RhdGUgdG8gcmVnaXN0ZXIuXG4gICAgXHQgKi9cbiAgICBcdE93bC5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBcdFx0aWYgKG9iamVjdC50eXBlID09PSBPd2wuVHlwZS5FdmVudCkge1xuICAgIFx0XHRcdGlmICghJC5ldmVudC5zcGVjaWFsW29iamVjdC5uYW1lXSkge1xuICAgIFx0XHRcdFx0JC5ldmVudC5zcGVjaWFsW29iamVjdC5uYW1lXSA9IHt9O1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdGlmICghJC5ldmVudC5zcGVjaWFsW29iamVjdC5uYW1lXS5vd2wpIHtcbiAgICBcdFx0XHRcdHZhciBfZGVmYXVsdCA9ICQuZXZlbnQuc3BlY2lhbFtvYmplY3QubmFtZV0uX2RlZmF1bHQ7XG4gICAgXHRcdFx0XHQkLmV2ZW50LnNwZWNpYWxbb2JqZWN0Lm5hbWVdLl9kZWZhdWx0ID0gZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0XHRpZiAoX2RlZmF1bHQgJiYgX2RlZmF1bHQuYXBwbHkgJiYgKCFlLm5hbWVzcGFjZSB8fCBlLm5hbWVzcGFjZS5pbmRleE9mKCdvd2wnKSA9PT0gLTEpKSB7XG4gICAgXHRcdFx0XHRcdFx0cmV0dXJuIF9kZWZhdWx0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgXHRcdFx0XHRcdH1cbiAgICBcdFx0XHRcdFx0cmV0dXJuIGUubmFtZXNwYWNlICYmIGUubmFtZXNwYWNlLmluZGV4T2YoJ293bCcpID4gLTE7XG4gICAgXHRcdFx0XHR9O1xuICAgIFx0XHRcdFx0JC5ldmVudC5zcGVjaWFsW29iamVjdC5uYW1lXS5vd2wgPSB0cnVlO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fSBlbHNlIGlmIChvYmplY3QudHlwZSA9PT0gT3dsLlR5cGUuU3RhdGUpIHtcbiAgICBcdFx0XHRpZiAoIXRoaXMuX3N0YXRlcy50YWdzW29iamVjdC5uYW1lXSkge1xuICAgIFx0XHRcdFx0dGhpcy5fc3RhdGVzLnRhZ3Nbb2JqZWN0Lm5hbWVdID0gb2JqZWN0LnRhZ3M7XG4gICAgXHRcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRcdHRoaXMuX3N0YXRlcy50YWdzW29iamVjdC5uYW1lXSA9IHRoaXMuX3N0YXRlcy50YWdzW29iamVjdC5uYW1lXS5jb25jYXQob2JqZWN0LnRhZ3MpO1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdHRoaXMuX3N0YXRlcy50YWdzW29iamVjdC5uYW1lXSA9ICQuZ3JlcCh0aGlzLl9zdGF0ZXMudGFnc1tvYmplY3QubmFtZV0sICQucHJveHkoZnVuY3Rpb24odGFnLCBpKSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gJC5pbkFycmF5KHRhZywgdGhpcy5fc3RhdGVzLnRhZ3Nbb2JqZWN0Lm5hbWVdKSA9PT0gaTtcbiAgICBcdFx0XHR9LCB0aGlzKSk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU3VwcHJlc3NlcyBldmVudHMuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBldmVudHMgLSBUaGUgZXZlbnRzIHRvIHN1cHByZXNzLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnN1cHByZXNzID0gZnVuY3Rpb24oZXZlbnRzKSB7XG4gICAgXHRcdCQuZWFjaChldmVudHMsICQucHJveHkoZnVuY3Rpb24oaW5kZXgsIGV2ZW50KSB7XG4gICAgXHRcdFx0dGhpcy5fc3VwcmVzc1tldmVudF0gPSB0cnVlO1xuICAgIFx0XHR9LCB0aGlzKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFJlbGVhc2VzIHN1cHByZXNzZWQgZXZlbnRzLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gZXZlbnRzIC0gVGhlIGV2ZW50cyB0byByZWxlYXNlLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnJlbGVhc2UgPSBmdW5jdGlvbihldmVudHMpIHtcbiAgICBcdFx0JC5lYWNoKGV2ZW50cywgJC5wcm94eShmdW5jdGlvbihpbmRleCwgZXZlbnQpIHtcbiAgICBcdFx0XHRkZWxldGUgdGhpcy5fc3VwcmVzc1tldmVudF07XG4gICAgXHRcdH0sIHRoaXMpKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogR2V0cyB1bmlmaWVkIHBvaW50ZXIgY29vcmRpbmF0ZXMgZnJvbSBldmVudC5cbiAgICBcdCAqIEB0b2RvICMyNjFcbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqIEBwYXJhbSB7RXZlbnR9IC0gVGhlIGBtb3VzZWRvd25gIG9yIGB0b3VjaHN0YXJ0YCBldmVudC5cbiAgICBcdCAqIEByZXR1cm5zIHtPYmplY3R9IC0gQ29udGFpbnMgYHhgIGFuZCBgeWAgY29vcmRpbmF0ZXMgb2YgY3VycmVudCBwb2ludGVyIHBvc2l0aW9uLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLnBvaW50ZXIgPSBmdW5jdGlvbihldmVudCkge1xuICAgIFx0XHR2YXIgcmVzdWx0ID0geyB4OiBudWxsLCB5OiBudWxsIH07XG5cbiAgICBcdFx0ZXZlbnQgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcblxuICAgIFx0XHRldmVudCA9IGV2ZW50LnRvdWNoZXMgJiYgZXZlbnQudG91Y2hlcy5sZW5ndGggP1xuICAgIFx0XHRcdGV2ZW50LnRvdWNoZXNbMF0gOiBldmVudC5jaGFuZ2VkVG91Y2hlcyAmJiBldmVudC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGggP1xuICAgIFx0XHRcdFx0ZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0gOiBldmVudDtcblxuICAgIFx0XHRpZiAoZXZlbnQucGFnZVgpIHtcbiAgICBcdFx0XHRyZXN1bHQueCA9IGV2ZW50LnBhZ2VYO1xuICAgIFx0XHRcdHJlc3VsdC55ID0gZXZlbnQucGFnZVk7XG4gICAgXHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0cmVzdWx0LnggPSBldmVudC5jbGllbnRYO1xuICAgIFx0XHRcdHJlc3VsdC55ID0gZXZlbnQuY2xpZW50WTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHJldHVybiByZXN1bHQ7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERldGVybWluZXMgaWYgdGhlIGlucHV0IGlzIGEgTnVtYmVyIG9yIHNvbWV0aGluZyB0aGF0IGNhbiBiZSBjb2VyY2VkIHRvIGEgTnVtYmVyXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcnxTdHJpbmd8T2JqZWN0fEFycmF5fEJvb2xlYW58UmVnRXhwfEZ1bmN0aW9ufFN5bWJvbH0gLSBUaGUgaW5wdXQgdG8gYmUgdGVzdGVkXG4gICAgXHQgKiBAcmV0dXJucyB7Qm9vbGVhbn0gLSBBbiBpbmRpY2F0aW9uIGlmIHRoZSBpbnB1dCBpcyBhIE51bWJlciBvciBjYW4gYmUgY29lcmNlZCB0byBhIE51bWJlclxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmlzTnVtZXJpYyA9IGZ1bmN0aW9uKG51bWJlcikge1xuICAgIFx0XHRyZXR1cm4gIWlzTmFOKHBhcnNlRmxvYXQobnVtYmVyKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEdldHMgdGhlIGRpZmZlcmVuY2Ugb2YgdHdvIHZlY3RvcnMuXG4gICAgXHQgKiBAdG9kbyAjMjYxXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge09iamVjdH0gLSBUaGUgZmlyc3QgdmVjdG9yLlxuICAgIFx0ICogQHBhcmFtIHtPYmplY3R9IC0gVGhlIHNlY29uZCB2ZWN0b3IuXG4gICAgXHQgKiBAcmV0dXJucyB7T2JqZWN0fSAtIFRoZSBkaWZmZXJlbmNlLlxuICAgIFx0ICovXG4gICAgXHRPd2wucHJvdG90eXBlLmRpZmZlcmVuY2UgPSBmdW5jdGlvbihmaXJzdCwgc2Vjb25kKSB7XG4gICAgXHRcdHJldHVybiB7XG4gICAgXHRcdFx0eDogZmlyc3QueCAtIHNlY29uZC54LFxuICAgIFx0XHRcdHk6IGZpcnN0LnkgLSBzZWNvbmQueVxuICAgIFx0XHR9O1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBUaGUgalF1ZXJ5IFBsdWdpbiBmb3IgdGhlIE93bCBDYXJvdXNlbFxuICAgIFx0ICogQHRvZG8gTmF2aWdhdGlvbiBwbHVnaW4gYG5leHRgIGFuZCBgcHJldmBcbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0JC5mbi5vd2xDYXJvdXNlbCA9IGZ1bmN0aW9uKG9wdGlvbikge1xuICAgIFx0XHR2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG5cbiAgICBcdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICBcdFx0XHR2YXIgJHRoaXMgPSAkKHRoaXMpLFxuICAgIFx0XHRcdFx0ZGF0YSA9ICR0aGlzLmRhdGEoJ293bC5jYXJvdXNlbCcpO1xuXG4gICAgXHRcdFx0aWYgKCFkYXRhKSB7XG4gICAgXHRcdFx0XHRkYXRhID0gbmV3IE93bCh0aGlzLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbik7XG4gICAgXHRcdFx0XHQkdGhpcy5kYXRhKCdvd2wuY2Fyb3VzZWwnLCBkYXRhKTtcblxuICAgIFx0XHRcdFx0JC5lYWNoKFtcbiAgICBcdFx0XHRcdFx0J25leHQnLCAncHJldicsICd0bycsICdkZXN0cm95JywgJ3JlZnJlc2gnLCAncmVwbGFjZScsICdhZGQnLCAncmVtb3ZlJ1xuICAgIFx0XHRcdFx0XSwgZnVuY3Rpb24oaSwgZXZlbnQpIHtcbiAgICBcdFx0XHRcdFx0ZGF0YS5yZWdpc3Rlcih7IHR5cGU6IE93bC5UeXBlLkV2ZW50LCBuYW1lOiBldmVudCB9KTtcbiAgICBcdFx0XHRcdFx0ZGF0YS4kZWxlbWVudC5vbihldmVudCArICcub3dsLmNhcm91c2VsLmNvcmUnLCAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgZS5yZWxhdGVkVGFyZ2V0ICE9PSB0aGlzKSB7XG4gICAgXHRcdFx0XHRcdFx0XHR0aGlzLnN1cHByZXNzKFsgZXZlbnQgXSk7XG4gICAgXHRcdFx0XHRcdFx0XHRkYXRhW2V2ZW50XS5hcHBseSh0aGlzLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpO1xuICAgIFx0XHRcdFx0XHRcdFx0dGhpcy5yZWxlYXNlKFsgZXZlbnQgXSk7XG4gICAgXHRcdFx0XHRcdFx0fVxuICAgIFx0XHRcdFx0XHR9LCBkYXRhKSk7XG4gICAgXHRcdFx0XHR9KTtcbiAgICBcdFx0XHR9XG5cbiAgICBcdFx0XHRpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyAmJiBvcHRpb24uY2hhckF0KDApICE9PSAnXycpIHtcbiAgICBcdFx0XHRcdGRhdGFbb3B0aW9uXS5hcHBseShkYXRhLCBhcmdzKTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH0pO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBUaGUgY29uc3RydWN0b3IgZm9yIHRoZSBqUXVlcnkgUGx1Z2luXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKi9cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IgPSBPd2w7XG5cbiAgICB9KSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4gICAgKGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZXMgdGhlIGF1dG8gcmVmcmVzaCBwbHVnaW4uXG4gICAgXHQgKiBAY2xhc3MgVGhlIEF1dG8gUmVmcmVzaCBQbHVnaW5cbiAgICBcdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWxcbiAgICBcdCAqL1xuICAgIFx0dmFyIEF1dG9SZWZyZXNoID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T3dsfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBSZWZyZXNoIGludGVydmFsLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtudW1iZXJ9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9pbnRlcnZhbCA9IG51bGw7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgY3VycmVudGx5IHZpc2libGUgb3Igbm90LlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtCb29sZWFufVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fdmlzaWJsZSA9IG51bGw7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEFsbCBldmVudCBoYW5kbGVycy5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T2JqZWN0fVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5faGFuZGxlcnMgPSB7XG4gICAgXHRcdFx0J2luaXRpYWxpemVkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b1JlZnJlc2gpIHtcbiAgICBcdFx0XHRcdFx0dGhpcy53YXRjaCgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpXG4gICAgXHRcdH07XG5cbiAgICBcdFx0Ly8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICAgIFx0XHR0aGlzLl9jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQXV0b1JlZnJlc2guRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XG5cbiAgICBcdFx0Ly8gcmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0QXV0b1JlZnJlc2guRGVmYXVsdHMgPSB7XG4gICAgXHRcdGF1dG9SZWZyZXNoOiB0cnVlLFxuICAgIFx0XHRhdXRvUmVmcmVzaEludGVydmFsOiA1MDBcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogV2F0Y2hlcyB0aGUgZWxlbWVudC5cbiAgICBcdCAqL1xuICAgIFx0QXV0b1JlZnJlc2gucHJvdG90eXBlLndhdGNoID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdGlmICh0aGlzLl9pbnRlcnZhbCkge1xuICAgIFx0XHRcdHJldHVybjtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuX3Zpc2libGUgPSB0aGlzLl9jb3JlLmlzVmlzaWJsZSgpO1xuICAgIFx0XHR0aGlzLl9pbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbCgkLnByb3h5KHRoaXMucmVmcmVzaCwgdGhpcyksIHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b1JlZnJlc2hJbnRlcnZhbCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFJlZnJlc2hlcyB0aGUgZWxlbWVudC5cbiAgICBcdCAqL1xuICAgIFx0QXV0b1JlZnJlc2gucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0aWYgKHRoaXMuX2NvcmUuaXNWaXNpYmxlKCkgPT09IHRoaXMuX3Zpc2libGUpIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLl92aXNpYmxlID0gIXRoaXMuX3Zpc2libGU7XG5cbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC50b2dnbGVDbGFzcygnb3dsLWhpZGRlbicsICF0aGlzLl92aXNpYmxlKTtcblxuICAgIFx0XHR0aGlzLl92aXNpYmxlICYmICh0aGlzLl9jb3JlLmludmFsaWRhdGUoJ3dpZHRoJykgJiYgdGhpcy5fY29yZS5yZWZyZXNoKCkpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxuICAgIFx0ICovXG4gICAgXHRBdXRvUmVmcmVzaC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgaGFuZGxlciwgcHJvcGVydHk7XG5cbiAgICBcdFx0d2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5faW50ZXJ2YWwpO1xuXG4gICAgXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xuICAgIFx0XHRcdHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuX2hhbmRsZXJzW2hhbmRsZXJdKTtcbiAgICBcdFx0fVxuICAgIFx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XG4gICAgXHRcdFx0dHlwZW9mIHRoaXNbcHJvcGVydHldICE9ICdmdW5jdGlvbicgJiYgKHRoaXNbcHJvcGVydHldID0gbnVsbCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvUmVmcmVzaCA9IEF1dG9SZWZyZXNoO1xuXG4gICAgfSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuICAgIChmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDcmVhdGVzIHRoZSBsYXp5IHBsdWdpbi5cbiAgICBcdCAqIEBjbGFzcyBUaGUgTGF6eSBQbHVnaW5cbiAgICBcdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWxcbiAgICBcdCAqL1xuICAgIFx0dmFyIExhenkgPSBmdW5jdGlvbihjYXJvdXNlbCkge1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBSZWZlcmVuY2UgdG8gdGhlIGNvcmUuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge093bH1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2NvcmUgPSBjYXJvdXNlbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQWxyZWFkeSBsb2FkZWQgaXRlbXMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge0FycmF5LjxqUXVlcnk+fVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fbG9hZGVkID0gW107XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEV2ZW50IGhhbmRsZXJzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtPYmplY3R9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9oYW5kbGVycyA9IHtcbiAgICBcdFx0XHQnaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIGNoYW5nZS5vd2wuY2Fyb3VzZWwgcmVzaXplZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmICghZS5uYW1lc3BhY2UpIHtcbiAgICBcdFx0XHRcdFx0cmV0dXJuO1xuICAgIFx0XHRcdFx0fVxuXG4gICAgXHRcdFx0XHRpZiAoIXRoaXMuX2NvcmUuc2V0dGluZ3MgfHwgIXRoaXMuX2NvcmUuc2V0dGluZ3MubGF6eUxvYWQpIHtcbiAgICBcdFx0XHRcdFx0cmV0dXJuO1xuICAgIFx0XHRcdFx0fVxuXG4gICAgXHRcdFx0XHRpZiAoKGUucHJvcGVydHkgJiYgZS5wcm9wZXJ0eS5uYW1lID09ICdwb3NpdGlvbicpIHx8IGUudHlwZSA9PSAnaW5pdGlhbGl6ZWQnKSB7XG4gICAgXHRcdFx0XHRcdHZhciBzZXR0aW5ncyA9IHRoaXMuX2NvcmUuc2V0dGluZ3MsXG4gICAgXHRcdFx0XHRcdFx0biA9IChzZXR0aW5ncy5jZW50ZXIgJiYgTWF0aC5jZWlsKHNldHRpbmdzLml0ZW1zIC8gMikgfHwgc2V0dGluZ3MuaXRlbXMpLFxuICAgIFx0XHRcdFx0XHRcdGkgPSAoKHNldHRpbmdzLmNlbnRlciAmJiBuICogLTEpIHx8IDApLFxuICAgIFx0XHRcdFx0XHRcdHBvc2l0aW9uID0gKGUucHJvcGVydHkgJiYgZS5wcm9wZXJ0eS52YWx1ZSAhPT0gdW5kZWZpbmVkID8gZS5wcm9wZXJ0eS52YWx1ZSA6IHRoaXMuX2NvcmUuY3VycmVudCgpKSArIGksXG4gICAgXHRcdFx0XHRcdFx0Y2xvbmVzID0gdGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGgsXG4gICAgXHRcdFx0XHRcdFx0bG9hZCA9ICQucHJveHkoZnVuY3Rpb24oaSwgdikgeyB0aGlzLmxvYWQodik7IH0sIHRoaXMpO1xuICAgIFx0XHRcdFx0XHQvL1RPRE86IE5lZWQgZG9jdW1lbnRhdGlvbiBmb3IgdGhpcyBuZXcgb3B0aW9uXG4gICAgXHRcdFx0XHRcdGlmIChzZXR0aW5ncy5sYXp5TG9hZEVhZ2VyID4gMCkge1xuICAgIFx0XHRcdFx0XHRcdG4gKz0gc2V0dGluZ3MubGF6eUxvYWRFYWdlcjtcbiAgICBcdFx0XHRcdFx0XHQvLyBJZiB0aGUgY2Fyb3VzZWwgaXMgbG9vcGluZyBhbHNvIHByZWxvYWQgaW1hZ2VzIHRoYXQgYXJlIHRvIHRoZSBcImxlZnRcIlxuICAgIFx0XHRcdFx0XHRcdGlmIChzZXR0aW5ncy5sb29wKSB7XG4gICAgICAgICAgICAgICAgICBwb3NpdGlvbiAtPSBzZXR0aW5ncy5sYXp5TG9hZEVhZ2VyO1xuICAgICAgICAgICAgICAgICAgbisrO1xuICAgICAgICAgICAgICAgIH1cbiAgICBcdFx0XHRcdFx0fVxuXG4gICAgXHRcdFx0XHRcdHdoaWxlIChpKysgPCBuKSB7XG4gICAgXHRcdFx0XHRcdFx0dGhpcy5sb2FkKGNsb25lcyAvIDIgKyB0aGlzLl9jb3JlLnJlbGF0aXZlKHBvc2l0aW9uKSk7XG4gICAgXHRcdFx0XHRcdFx0Y2xvbmVzICYmICQuZWFjaCh0aGlzLl9jb3JlLmNsb25lcyh0aGlzLl9jb3JlLnJlbGF0aXZlKHBvc2l0aW9uKSksIGxvYWQpO1xuICAgIFx0XHRcdFx0XHRcdHBvc2l0aW9uKys7XG4gICAgXHRcdFx0XHRcdH1cbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKVxuICAgIFx0XHR9O1xuXG4gICAgXHRcdC8vIHNldCB0aGUgZGVmYXVsdCBvcHRpb25zXG4gICAgXHRcdHRoaXMuX2NvcmUub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBMYXp5LkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpO1xuXG4gICAgXHRcdC8vIHJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJcbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0TGF6eS5EZWZhdWx0cyA9IHtcbiAgICBcdFx0bGF6eUxvYWQ6IGZhbHNlLFxuICAgIFx0XHRsYXp5TG9hZEVhZ2VyOiAwXG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIExvYWRzIGFsbCByZXNvdXJjZXMgb2YgYW4gaXRlbSBhdCB0aGUgc3BlY2lmaWVkIHBvc2l0aW9uLlxuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBpdGVtLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICovXG4gICAgXHRMYXp5LnByb3RvdHlwZS5sb2FkID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICBcdFx0dmFyICRpdGVtID0gdGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcShwb3NpdGlvbiksXG4gICAgXHRcdFx0JGVsZW1lbnRzID0gJGl0ZW0gJiYgJGl0ZW0uZmluZCgnLm93bC1sYXp5Jyk7XG5cbiAgICBcdFx0aWYgKCEkZWxlbWVudHMgfHwgJC5pbkFycmF5KCRpdGVtLmdldCgwKSwgdGhpcy5fbG9hZGVkKSA+IC0xKSB7XG4gICAgXHRcdFx0cmV0dXJuO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0JGVsZW1lbnRzLmVhY2goJC5wcm94eShmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xuICAgIFx0XHRcdHZhciAkZWxlbWVudCA9ICQoZWxlbWVudCksIGltYWdlLFxuICAgICAgICAgICAgICAgICAgICB1cmwgPSAod2luZG93LmRldmljZVBpeGVsUmF0aW8gPiAxICYmICRlbGVtZW50LmF0dHIoJ2RhdGEtc3JjLXJldGluYScpKSB8fCAkZWxlbWVudC5hdHRyKCdkYXRhLXNyYycpIHx8ICRlbGVtZW50LmF0dHIoJ2RhdGEtc3Jjc2V0Jyk7XG5cbiAgICBcdFx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ2xvYWQnLCB7IGVsZW1lbnQ6ICRlbGVtZW50LCB1cmw6IHVybCB9LCAnbGF6eScpO1xuXG4gICAgXHRcdFx0aWYgKCRlbGVtZW50LmlzKCdpbWcnKSkge1xuICAgIFx0XHRcdFx0JGVsZW1lbnQub25lKCdsb2FkLm93bC5sYXp5JywgJC5wcm94eShmdW5jdGlvbigpIHtcbiAgICBcdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgXHRcdFx0XHRcdHRoaXMuX2NvcmUudHJpZ2dlcignbG9hZGVkJywgeyBlbGVtZW50OiAkZWxlbWVudCwgdXJsOiB1cmwgfSwgJ2xhenknKTtcbiAgICBcdFx0XHRcdH0sIHRoaXMpKS5hdHRyKCdzcmMnLCB1cmwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGVsZW1lbnQuaXMoJ3NvdXJjZScpKSB7XG4gICAgICAgICAgICAgICAgICAgICRlbGVtZW50Lm9uZSgnbG9hZC5vd2wubGF6eScsICQucHJveHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb3JlLnRyaWdnZXIoJ2xvYWRlZCcsIHsgZWxlbWVudDogJGVsZW1lbnQsIHVybDogdXJsIH0sICdsYXp5Jyk7XG4gICAgICAgICAgICAgICAgICAgIH0sIHRoaXMpKS5hdHRyKCdzcmNzZXQnLCB1cmwpO1xuICAgIFx0XHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0XHRpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgIFx0XHRcdFx0aW1hZ2Uub25sb2FkID0gJC5wcm94eShmdW5jdGlvbigpIHtcbiAgICBcdFx0XHRcdFx0JGVsZW1lbnQuY3NzKHtcbiAgICBcdFx0XHRcdFx0XHQnYmFja2dyb3VuZC1pbWFnZSc6ICd1cmwoXCInICsgdXJsICsgJ1wiKScsXG4gICAgXHRcdFx0XHRcdFx0J29wYWNpdHknOiAnMSdcbiAgICBcdFx0XHRcdFx0fSk7XG4gICAgXHRcdFx0XHRcdHRoaXMuX2NvcmUudHJpZ2dlcignbG9hZGVkJywgeyBlbGVtZW50OiAkZWxlbWVudCwgdXJsOiB1cmwgfSwgJ2xhenknKTtcbiAgICBcdFx0XHRcdH0sIHRoaXMpO1xuICAgIFx0XHRcdFx0aW1hZ2Uuc3JjID0gdXJsO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fSwgdGhpcykpO1xuXG4gICAgXHRcdHRoaXMuX2xvYWRlZC5wdXNoKCRpdGVtLmdldCgwKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlc3Ryb3lzIHRoZSBwbHVnaW4uXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKi9cbiAgICBcdExhenkucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dmFyIGhhbmRsZXIsIHByb3BlcnR5O1xuXG4gICAgXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLmhhbmRsZXJzKSB7XG4gICAgXHRcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoaGFuZGxlciwgdGhpcy5oYW5kbGVyc1toYW5kbGVyXSk7XG4gICAgXHRcdH1cbiAgICBcdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xuICAgIFx0XHRcdHR5cGVvZiB0aGlzW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nICYmICh0aGlzW3Byb3BlcnR5XSA9IG51bGwpO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQkLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuTGF6eSA9IExhenk7XG5cbiAgICB9KSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4gICAgKGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZXMgdGhlIGF1dG8gaGVpZ2h0IHBsdWdpbi5cbiAgICBcdCAqIEBjbGFzcyBUaGUgQXV0byBIZWlnaHQgUGx1Z2luXG4gICAgXHQgKiBAcGFyYW0ge093bH0gY2Fyb3VzZWwgLSBUaGUgT3dsIENhcm91c2VsXG4gICAgXHQgKi9cbiAgICBcdHZhciBBdXRvSGVpZ2h0ID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T3dsfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xuXG4gICAgXHRcdHRoaXMuX3ByZXZpb3VzSGVpZ2h0ID0gbnVsbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQWxsIGV2ZW50IGhhbmRsZXJzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtPYmplY3R9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9oYW5kbGVycyA9IHtcbiAgICBcdFx0XHQnaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIHJlZnJlc2hlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQpIHtcbiAgICBcdFx0XHRcdFx0dGhpcy51cGRhdGUoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnY2hhbmdlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQgJiYgZS5wcm9wZXJ0eS5uYW1lID09PSAncG9zaXRpb24nKXtcbiAgICBcdFx0XHRcdFx0dGhpcy51cGRhdGUoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnbG9hZGVkLm93bC5sYXp5JzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0XG4gICAgXHRcdFx0XHRcdCYmIGUuZWxlbWVudC5jbG9zZXN0KCcuJyArIHRoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKS5pbmRleCgpID09PSB0aGlzLl9jb3JlLmN1cnJlbnQoKSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLnVwZGF0ZSgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpXG4gICAgXHRcdH07XG5cbiAgICBcdFx0Ly8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICAgIFx0XHR0aGlzLl9jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQXV0b0hlaWdodC5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKTtcblxuICAgIFx0XHQvLyByZWdpc3RlciBldmVudCBoYW5kbGVyc1xuICAgIFx0XHR0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKTtcbiAgICBcdFx0dGhpcy5faW50ZXJ2YWxJZCA9IG51bGw7XG4gICAgXHRcdHZhciByZWZUaGlzID0gdGhpcztcblxuICAgIFx0XHQvLyBUaGVzZSBjaGFuZ2VzIGhhdmUgYmVlbiB0YWtlbiBmcm9tIGEgUFIgYnkgZ2F2cm9jaGVsZWdub3UgcHJvcG9zZWQgaW4gIzE1NzVcbiAgICBcdFx0Ly8gYW5kIGhhdmUgYmVlbiBtYWRlIGNvbXBhdGlibGUgd2l0aCB0aGUgbGF0ZXN0IGpRdWVyeSB2ZXJzaW9uXG4gICAgXHRcdCQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdGlmIChyZWZUaGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQpIHtcbiAgICBcdFx0XHRcdHJlZlRoaXMudXBkYXRlKCk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9KTtcblxuICAgIFx0XHQvLyBBdXRvcmVzaXplIHRoZSBoZWlnaHQgb2YgdGhlIGNhcm91c2VsIHdoZW4gd2luZG93IGlzIHJlc2l6ZWRcbiAgICBcdFx0Ly8gV2hlbiBjYXJvdXNlbCBoYXMgaW1hZ2VzLCB0aGUgaGVpZ2h0IGlzIGRlcGVuZGVudCBvbiB0aGUgd2lkdGhcbiAgICBcdFx0Ly8gYW5kIHNob3VsZCBhbHNvIGNoYW5nZSBvbiByZXNpemVcbiAgICBcdFx0JCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbigpIHtcbiAgICBcdFx0XHRpZiAocmVmVGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0KSB7XG4gICAgXHRcdFx0XHRpZiAocmVmVGhpcy5faW50ZXJ2YWxJZCAhPSBudWxsKSB7XG4gICAgXHRcdFx0XHRcdGNsZWFyVGltZW91dChyZWZUaGlzLl9pbnRlcnZhbElkKTtcbiAgICBcdFx0XHRcdH1cblxuICAgIFx0XHRcdFx0cmVmVGhpcy5faW50ZXJ2YWxJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRcdHJlZlRoaXMudXBkYXRlKCk7XG4gICAgXHRcdFx0XHR9LCAyNTApO1xuICAgIFx0XHRcdH1cbiAgICBcdFx0fSk7XG5cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRGVmYXVsdCBvcHRpb25zLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRBdXRvSGVpZ2h0LkRlZmF1bHRzID0ge1xuICAgIFx0XHRhdXRvSGVpZ2h0OiBmYWxzZSxcbiAgICBcdFx0YXV0b0hlaWdodENsYXNzOiAnb3dsLWhlaWdodCdcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogVXBkYXRlcyB0aGUgdmlldy5cbiAgICBcdCAqL1xuICAgIFx0QXV0b0hlaWdodC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBzdGFydCA9IHRoaXMuX2NvcmUuX2N1cnJlbnQsXG4gICAgXHRcdFx0ZW5kID0gc3RhcnQgKyB0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1zLFxuICAgIFx0XHRcdGxhenlMb2FkRW5hYmxlZCA9IHRoaXMuX2NvcmUuc2V0dGluZ3MubGF6eUxvYWQsXG4gICAgXHRcdFx0dmlzaWJsZSA9IHRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCkudG9BcnJheSgpLnNsaWNlKHN0YXJ0LCBlbmQpLFxuICAgIFx0XHRcdGhlaWdodHMgPSBbXSxcbiAgICBcdFx0XHRtYXhoZWlnaHQgPSAwO1xuXG4gICAgXHRcdCQuZWFjaCh2aXNpYmxlLCBmdW5jdGlvbihpbmRleCwgaXRlbSkge1xuICAgIFx0XHRcdGhlaWdodHMucHVzaCgkKGl0ZW0pLmhlaWdodCgpKTtcbiAgICBcdFx0fSk7XG5cbiAgICBcdFx0bWF4aGVpZ2h0ID0gTWF0aC5tYXguYXBwbHkobnVsbCwgaGVpZ2h0cyk7XG5cbiAgICBcdFx0aWYgKG1heGhlaWdodCA8PSAxICYmIGxhenlMb2FkRW5hYmxlZCAmJiB0aGlzLl9wcmV2aW91c0hlaWdodCkge1xuICAgIFx0XHRcdG1heGhlaWdodCA9IHRoaXMuX3ByZXZpb3VzSGVpZ2h0O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy5fcHJldmlvdXNIZWlnaHQgPSBtYXhoZWlnaHQ7XG5cbiAgICBcdFx0dGhpcy5fY29yZS4kc3RhZ2UucGFyZW50KClcbiAgICBcdFx0XHQuaGVpZ2h0KG1heGhlaWdodClcbiAgICBcdFx0XHQuYWRkQ2xhc3ModGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0Q2xhc3MpO1xuICAgIFx0fTtcblxuICAgIFx0QXV0b0hlaWdodC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgaGFuZGxlciwgcHJvcGVydHk7XG5cbiAgICBcdFx0Zm9yIChoYW5kbGVyIGluIHRoaXMuX2hhbmRsZXJzKSB7XG4gICAgXHRcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoaGFuZGxlciwgdGhpcy5faGFuZGxlcnNbaGFuZGxlcl0pO1xuICAgIFx0XHR9XG4gICAgXHRcdGZvciAocHJvcGVydHkgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIHtcbiAgICBcdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT09ICdmdW5jdGlvbicgJiYgKHRoaXNbcHJvcGVydHldID0gbnVsbCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvSGVpZ2h0ID0gQXV0b0hlaWdodDtcblxuICAgIH0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcbiAgICAoZnVuY3Rpb24oJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XG5cbiAgICBcdC8qKlxuICAgIFx0ICogQ3JlYXRlcyB0aGUgdmlkZW8gcGx1Z2luLlxuICAgIFx0ICogQGNsYXNzIFRoZSBWaWRlbyBQbHVnaW5cbiAgICBcdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWxcbiAgICBcdCAqL1xuICAgIFx0dmFyIFZpZGVvID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T3dsfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBDYWNoZSBhbGwgdmlkZW8gVVJMcy5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T2JqZWN0fVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fdmlkZW9zID0ge307XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEN1cnJlbnQgcGxheWluZyBpdGVtLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtqUXVlcnl9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9wbGF5aW5nID0gbnVsbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQWxsIGV2ZW50IGhhbmRsZXJzLlxuICAgIFx0XHQgKiBAdG9kbyBUaGUgY2xvbmVkIGNvbnRlbnQgcmVtb3ZhbGUgaXMgdG9vIGxhdGVcbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T2JqZWN0fVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5faGFuZGxlcnMgPSB7XG4gICAgXHRcdFx0J2luaXRpYWxpemVkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMuX2NvcmUucmVnaXN0ZXIoeyB0eXBlOiAnc3RhdGUnLCBuYW1lOiAncGxheWluZycsIHRhZ3M6IFsgJ2ludGVyYWN0aW5nJyBdIH0pO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdyZXNpemUub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy52aWRlbyAmJiB0aGlzLmlzSW5GdWxsU2NyZWVuKCkpIHtcbiAgICBcdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdyZWZyZXNoZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5pcygncmVzaXppbmcnKSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLl9jb3JlLiRzdGFnZS5maW5kKCcuY2xvbmVkIC5vd2wtdmlkZW8tZnJhbWUnKS5yZW1vdmUoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnY2hhbmdlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiBlLnByb3BlcnR5Lm5hbWUgPT09ICdwb3NpdGlvbicgJiYgdGhpcy5fcGxheWluZykge1xuICAgIFx0XHRcdFx0XHR0aGlzLnN0b3AoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQncHJlcGFyZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoIWUubmFtZXNwYWNlKSB7XG4gICAgXHRcdFx0XHRcdHJldHVybjtcbiAgICBcdFx0XHRcdH1cblxuICAgIFx0XHRcdFx0dmFyICRlbGVtZW50ID0gJChlLmNvbnRlbnQpLmZpbmQoJy5vd2wtdmlkZW8nKTtcblxuICAgIFx0XHRcdFx0aWYgKCRlbGVtZW50Lmxlbmd0aCkge1xuICAgIFx0XHRcdFx0XHQkZWxlbWVudC5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xuICAgIFx0XHRcdFx0XHR0aGlzLmZldGNoKCRlbGVtZW50LCAkKGUuY29udGVudCkpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpXG4gICAgXHRcdH07XG5cbiAgICBcdFx0Ly8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICAgIFx0XHR0aGlzLl9jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgVmlkZW8uRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XG5cbiAgICBcdFx0Ly8gcmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XG5cbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbignY2xpY2sub3dsLnZpZGVvJywgJy5vd2wtdmlkZW8tcGxheS1pY29uJywgJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0dGhpcy5wbGF5KGUpO1xuICAgIFx0XHR9LCB0aGlzKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0VmlkZW8uRGVmYXVsdHMgPSB7XG4gICAgXHRcdHZpZGVvOiBmYWxzZSxcbiAgICBcdFx0dmlkZW9IZWlnaHQ6IGZhbHNlLFxuICAgIFx0XHR2aWRlb1dpZHRoOiBmYWxzZVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIHRoZSB2aWRlbyBJRCBhbmQgdGhlIHR5cGUgKFlvdVR1YmUvVmltZW8vdnphYXIgb25seSkuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcGFyYW0ge2pRdWVyeX0gdGFyZ2V0IC0gVGhlIHRhcmdldCBjb250YWluaW5nIHRoZSB2aWRlbyBkYXRhLlxuICAgIFx0ICogQHBhcmFtIHtqUXVlcnl9IGl0ZW0gLSBUaGUgaXRlbSBjb250YWluaW5nIHRoZSB2aWRlby5cbiAgICBcdCAqL1xuICAgIFx0VmlkZW8ucHJvdG90eXBlLmZldGNoID0gZnVuY3Rpb24odGFyZ2V0LCBpdGVtKSB7XG4gICAgXHRcdFx0dmFyIHR5cGUgPSAoZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRcdGlmICh0YXJnZXQuYXR0cignZGF0YS12aW1lby1pZCcpKSB7XG4gICAgXHRcdFx0XHRcdFx0cmV0dXJuICd2aW1lbyc7XG4gICAgXHRcdFx0XHRcdH0gZWxzZSBpZiAodGFyZ2V0LmF0dHIoJ2RhdGEtdnphYXItaWQnKSkge1xuICAgIFx0XHRcdFx0XHRcdHJldHVybiAndnphYXInXG4gICAgXHRcdFx0XHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0XHRcdFx0cmV0dXJuICd5b3V0dWJlJztcbiAgICBcdFx0XHRcdFx0fVxuICAgIFx0XHRcdFx0fSkoKSxcbiAgICBcdFx0XHRcdGlkID0gdGFyZ2V0LmF0dHIoJ2RhdGEtdmltZW8taWQnKSB8fCB0YXJnZXQuYXR0cignZGF0YS15b3V0dWJlLWlkJykgfHwgdGFyZ2V0LmF0dHIoJ2RhdGEtdnphYXItaWQnKSxcbiAgICBcdFx0XHRcdHdpZHRoID0gdGFyZ2V0LmF0dHIoJ2RhdGEtd2lkdGgnKSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvV2lkdGgsXG4gICAgXHRcdFx0XHRoZWlnaHQgPSB0YXJnZXQuYXR0cignZGF0YS1oZWlnaHQnKSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvSGVpZ2h0LFxuICAgIFx0XHRcdFx0dXJsID0gdGFyZ2V0LmF0dHIoJ2hyZWYnKTtcblxuICAgIFx0XHRpZiAodXJsKSB7XG5cbiAgICBcdFx0XHQvKlxuICAgIFx0XHRcdFx0XHRQYXJzZXMgdGhlIGlkJ3Mgb3V0IG9mIHRoZSBmb2xsb3dpbmcgdXJscyAoYW5kIHByb2JhYmx5IG1vcmUpOlxuICAgIFx0XHRcdFx0XHRodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTppZFxuICAgIFx0XHRcdFx0XHRodHRwczovL3lvdXR1LmJlLzppZFxuICAgIFx0XHRcdFx0XHRodHRwczovL3ZpbWVvLmNvbS86aWRcbiAgICBcdFx0XHRcdFx0aHR0cHM6Ly92aW1lby5jb20vY2hhbm5lbHMvOmNoYW5uZWwvOmlkXG4gICAgXHRcdFx0XHRcdGh0dHBzOi8vdmltZW8uY29tL2dyb3Vwcy86Z3JvdXAvdmlkZW9zLzppZFxuICAgIFx0XHRcdFx0XHRodHRwczovL2FwcC52emFhci5jb20vdmlkZW9zLzppZFxuXG4gICAgXHRcdFx0XHRcdFZpc3VhbCBleGFtcGxlOiBodHRwczovL3JlZ2V4cGVyLmNvbS8jKGh0dHAlM0ElN0NodHRwcyUzQSU3QyklNUMlMkYlNUMlMkYocGxheWVyLiU3Q3d3dy4lN0NhcHAuKSUzRih2aW1lbyU1Qy5jb20lN0N5b3V0dShiZSU1Qy5jb20lN0MlNUMuYmUlN0NiZSU1Qy5nb29nbGVhcGlzJTVDLmNvbSklN0N2emFhciU1Qy5jb20pJTVDJTJGKHZpZGVvJTVDJTJGJTdDdmlkZW9zJTVDJTJGJTdDZW1iZWQlNUMlMkYlN0NjaGFubmVscyU1QyUyRi4lMkIlNUMlMkYlN0Nncm91cHMlNUMlMkYuJTJCJTVDJTJGJTdDd2F0Y2glNUMlM0Z2JTNEJTdDdiU1QyUyRiklM0YoJTVCQS1aYS16MC05Ll8lMjUtJTVEKikoJTVDJTI2JTVDUyUyQiklM0ZcbiAgICBcdFx0XHQqL1xuXG4gICAgXHRcdFx0aWQgPSB1cmwubWF0Y2goLyhodHRwOnxodHRwczp8KVxcL1xcLyhwbGF5ZXIufHd3dy58YXBwLik/KHZpbWVvXFwuY29tfHlvdXR1KGJlXFwuY29tfFxcLmJlfGJlXFwuZ29vZ2xlYXBpc1xcLmNvbXxiZVxcLW5vY29va2llXFwuY29tKXx2emFhclxcLmNvbSlcXC8odmlkZW9cXC98dmlkZW9zXFwvfGVtYmVkXFwvfGNoYW5uZWxzXFwvLitcXC98Z3JvdXBzXFwvLitcXC98d2F0Y2hcXD92PXx2XFwvKT8oW0EtWmEtejAtOS5fJS1dKikoXFwmXFxTKyk/Lyk7XG5cbiAgICBcdFx0XHRpZiAoaWRbM10uaW5kZXhPZigneW91dHUnKSA+IC0xKSB7XG4gICAgXHRcdFx0XHR0eXBlID0gJ3lvdXR1YmUnO1xuICAgIFx0XHRcdH0gZWxzZSBpZiAoaWRbM10uaW5kZXhPZigndmltZW8nKSA+IC0xKSB7XG4gICAgXHRcdFx0XHR0eXBlID0gJ3ZpbWVvJztcbiAgICBcdFx0XHR9IGVsc2UgaWYgKGlkWzNdLmluZGV4T2YoJ3Z6YWFyJykgPiAtMSkge1xuICAgIFx0XHRcdFx0dHlwZSA9ICd2emFhcic7XG4gICAgXHRcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHRcdHRocm93IG5ldyBFcnJvcignVmlkZW8gVVJMIG5vdCBzdXBwb3J0ZWQuJyk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHRcdGlkID0gaWRbNl07XG4gICAgXHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHZpZGVvIFVSTC4nKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuX3ZpZGVvc1t1cmxdID0ge1xuICAgIFx0XHRcdHR5cGU6IHR5cGUsXG4gICAgXHRcdFx0aWQ6IGlkLFxuICAgIFx0XHRcdHdpZHRoOiB3aWR0aCxcbiAgICBcdFx0XHRoZWlnaHQ6IGhlaWdodFxuICAgIFx0XHR9O1xuXG4gICAgXHRcdGl0ZW0uYXR0cignZGF0YS12aWRlbycsIHVybCk7XG5cbiAgICBcdFx0dGhpcy50aHVtYm5haWwodGFyZ2V0LCB0aGlzLl92aWRlb3NbdXJsXSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZXMgdmlkZW8gdGh1bWJuYWlsLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHBhcmFtIHtqUXVlcnl9IHRhcmdldCAtIFRoZSB0YXJnZXQgY29udGFpbmluZyB0aGUgdmlkZW8gZGF0YS5cbiAgICBcdCAqIEBwYXJhbSB7T2JqZWN0fSBpbmZvIC0gVGhlIHZpZGVvIGluZm8gb2JqZWN0LlxuICAgIFx0ICogQHNlZSBgZmV0Y2hgXG4gICAgXHQgKi9cbiAgICBcdFZpZGVvLnByb3RvdHlwZS50aHVtYm5haWwgPSBmdW5jdGlvbih0YXJnZXQsIHZpZGVvKSB7XG4gICAgXHRcdHZhciB0bkxpbmssXG4gICAgXHRcdFx0aWNvbixcbiAgICBcdFx0XHRwYXRoLFxuICAgIFx0XHRcdGRpbWVuc2lvbnMgPSB2aWRlby53aWR0aCAmJiB2aWRlby5oZWlnaHQgPyAnd2lkdGg6JyArIHZpZGVvLndpZHRoICsgJ3B4O2hlaWdodDonICsgdmlkZW8uaGVpZ2h0ICsgJ3B4OycgOiAnJyxcbiAgICBcdFx0XHRjdXN0b21UbiA9IHRhcmdldC5maW5kKCdpbWcnKSxcbiAgICBcdFx0XHRzcmNUeXBlID0gJ3NyYycsXG4gICAgXHRcdFx0bGF6eUNsYXNzID0gJycsXG4gICAgXHRcdFx0c2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzLFxuICAgIFx0XHRcdGNyZWF0ZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBcdFx0XHRcdGljb24gPSAnPGRpdiBjbGFzcz1cIm93bC12aWRlby1wbGF5LWljb25cIj48L2Rpdj4nO1xuXG4gICAgXHRcdFx0XHRpZiAoc2V0dGluZ3MubGF6eUxvYWQpIHtcbiAgICBcdFx0XHRcdFx0dG5MaW5rID0gJCgnPGRpdi8+Jyx7XG4gICAgXHRcdFx0XHRcdFx0XCJjbGFzc1wiOiAnb3dsLXZpZGVvLXRuICcgKyBsYXp5Q2xhc3MsXG4gICAgXHRcdFx0XHRcdFx0XCJzcmNUeXBlXCI6IHBhdGhcbiAgICBcdFx0XHRcdFx0fSk7XG4gICAgXHRcdFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdFx0XHR0bkxpbmsgPSAkKCAnPGRpdi8+Jywge1xuICAgIFx0XHRcdFx0XHRcdFwiY2xhc3NcIjogXCJvd2wtdmlkZW8tdG5cIixcbiAgICBcdFx0XHRcdFx0XHRcInN0eWxlXCI6ICdvcGFjaXR5OjE7YmFja2dyb3VuZC1pbWFnZTp1cmwoJyArIHBhdGggKyAnKSdcbiAgICBcdFx0XHRcdFx0fSk7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0XHR0YXJnZXQuYWZ0ZXIodG5MaW5rKTtcbiAgICBcdFx0XHRcdHRhcmdldC5hZnRlcihpY29uKTtcbiAgICBcdFx0XHR9O1xuXG4gICAgXHRcdC8vIHdyYXAgdmlkZW8gY29udGVudCBpbnRvIG93bC12aWRlby13cmFwcGVyIGRpdlxuICAgIFx0XHR0YXJnZXQud3JhcCggJCggJzxkaXYvPicsIHtcbiAgICBcdFx0XHRcImNsYXNzXCI6IFwib3dsLXZpZGVvLXdyYXBwZXJcIixcbiAgICBcdFx0XHRcInN0eWxlXCI6IGRpbWVuc2lvbnNcbiAgICBcdFx0fSkpO1xuXG4gICAgXHRcdGlmICh0aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkKSB7XG4gICAgXHRcdFx0c3JjVHlwZSA9ICdkYXRhLXNyYyc7XG4gICAgXHRcdFx0bGF6eUNsYXNzID0gJ293bC1sYXp5JztcbiAgICBcdFx0fVxuXG4gICAgXHRcdC8vIGN1c3RvbSB0aHVtYm5haWxcbiAgICBcdFx0aWYgKGN1c3RvbVRuLmxlbmd0aCkge1xuICAgIFx0XHRcdGNyZWF0ZShjdXN0b21Ubi5hdHRyKHNyY1R5cGUpKTtcbiAgICBcdFx0XHRjdXN0b21Ubi5yZW1vdmUoKTtcbiAgICBcdFx0XHRyZXR1cm4gZmFsc2U7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAodmlkZW8udHlwZSA9PT0gJ3lvdXR1YmUnKSB7XG4gICAgXHRcdFx0cGF0aCA9IFwiLy9pbWcueW91dHViZS5jb20vdmkvXCIgKyB2aWRlby5pZCArIFwiL2hxZGVmYXVsdC5qcGdcIjtcbiAgICBcdFx0XHRjcmVhdGUocGF0aCk7XG4gICAgXHRcdH0gZWxzZSBpZiAodmlkZW8udHlwZSA9PT0gJ3ZpbWVvJykge1xuICAgIFx0XHRcdCQuYWpheCh7XG4gICAgXHRcdFx0XHR0eXBlOiAnR0VUJyxcbiAgICBcdFx0XHRcdHVybDogJy8vdmltZW8uY29tL2FwaS92Mi92aWRlby8nICsgdmlkZW8uaWQgKyAnLmpzb24nLFxuICAgIFx0XHRcdFx0anNvbnA6ICdjYWxsYmFjaycsXG4gICAgXHRcdFx0XHRkYXRhVHlwZTogJ2pzb25wJyxcbiAgICBcdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBcdFx0XHRcdFx0cGF0aCA9IGRhdGFbMF0udGh1bWJuYWlsX2xhcmdlO1xuICAgIFx0XHRcdFx0XHRjcmVhdGUocGF0aCk7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0fSk7XG4gICAgXHRcdH0gZWxzZSBpZiAodmlkZW8udHlwZSA9PT0gJ3Z6YWFyJykge1xuICAgIFx0XHRcdCQuYWpheCh7XG4gICAgXHRcdFx0XHR0eXBlOiAnR0VUJyxcbiAgICBcdFx0XHRcdHVybDogJy8vdnphYXIuY29tL2FwaS92aWRlb3MvJyArIHZpZGVvLmlkICsgJy5qc29uJyxcbiAgICBcdFx0XHRcdGpzb25wOiAnY2FsbGJhY2snLFxuICAgIFx0XHRcdFx0ZGF0YVR5cGU6ICdqc29ucCcsXG4gICAgXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgXHRcdFx0XHRcdHBhdGggPSBkYXRhLmZyYW1lZ3JhYl91cmw7XG4gICAgXHRcdFx0XHRcdGNyZWF0ZShwYXRoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9KTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBTdG9wcyB0aGUgY3VycmVudCB2aWRlby5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0VmlkZW8ucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdzdG9wJywgbnVsbCwgJ3ZpZGVvJyk7XG4gICAgXHRcdHRoaXMuX3BsYXlpbmcuZmluZCgnLm93bC12aWRlby1mcmFtZScpLnJlbW92ZSgpO1xuICAgIFx0XHR0aGlzLl9wbGF5aW5nLnJlbW92ZUNsYXNzKCdvd2wtdmlkZW8tcGxheWluZycpO1xuICAgIFx0XHR0aGlzLl9wbGF5aW5nID0gbnVsbDtcbiAgICBcdFx0dGhpcy5fY29yZS5sZWF2ZSgncGxheWluZycpO1xuICAgIFx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ3N0b3BwZWQnLCBudWxsLCAndmlkZW8nKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU3RhcnRzIHRoZSBjdXJyZW50IHZpZGVvLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnQgLSBUaGUgZXZlbnQgYXJndW1lbnRzLlxuICAgIFx0ICovXG4gICAgXHRWaWRlby5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgXHRcdHZhciB0YXJnZXQgPSAkKGV2ZW50LnRhcmdldCksXG4gICAgXHRcdFx0aXRlbSA9IHRhcmdldC5jbG9zZXN0KCcuJyArIHRoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKSxcbiAgICBcdFx0XHR2aWRlbyA9IHRoaXMuX3ZpZGVvc1tpdGVtLmF0dHIoJ2RhdGEtdmlkZW8nKV0sXG4gICAgXHRcdFx0d2lkdGggPSB2aWRlby53aWR0aCB8fCAnMTAwJScsXG4gICAgXHRcdFx0aGVpZ2h0ID0gdmlkZW8uaGVpZ2h0IHx8IHRoaXMuX2NvcmUuJHN0YWdlLmhlaWdodCgpLFxuICAgIFx0XHRcdGh0bWwsXG4gICAgXHRcdFx0aWZyYW1lO1xuXG4gICAgXHRcdGlmICh0aGlzLl9wbGF5aW5nKSB7XG4gICAgXHRcdFx0cmV0dXJuO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0dGhpcy5fY29yZS5lbnRlcigncGxheWluZycpO1xuICAgIFx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ3BsYXknLCBudWxsLCAndmlkZW8nKTtcblxuICAgIFx0XHRpdGVtID0gdGhpcy5fY29yZS5pdGVtcyh0aGlzLl9jb3JlLnJlbGF0aXZlKGl0ZW0uaW5kZXgoKSkpO1xuXG4gICAgXHRcdHRoaXMuX2NvcmUucmVzZXQoaXRlbS5pbmRleCgpKTtcblxuICAgIFx0XHRodG1sID0gJCggJzxpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gPjwvaWZyYW1lPicgKTtcbiAgICBcdFx0aHRtbC5hdHRyKCAnaGVpZ2h0JywgaGVpZ2h0ICk7XG4gICAgXHRcdGh0bWwuYXR0ciggJ3dpZHRoJywgd2lkdGggKTtcbiAgICBcdFx0aWYgKHZpZGVvLnR5cGUgPT09ICd5b3V0dWJlJykge1xuICAgIFx0XHRcdGh0bWwuYXR0ciggJ3NyYycsICcvL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nICsgdmlkZW8uaWQgKyAnP2F1dG9wbGF5PTEmcmVsPTAmdj0nICsgdmlkZW8uaWQgKTtcbiAgICBcdFx0fSBlbHNlIGlmICh2aWRlby50eXBlID09PSAndmltZW8nKSB7XG4gICAgXHRcdFx0aHRtbC5hdHRyKCAnc3JjJywgJy8vcGxheWVyLnZpbWVvLmNvbS92aWRlby8nICsgdmlkZW8uaWQgKyAnP2F1dG9wbGF5PTEnICk7XG4gICAgXHRcdH0gZWxzZSBpZiAodmlkZW8udHlwZSA9PT0gJ3Z6YWFyJykge1xuICAgIFx0XHRcdGh0bWwuYXR0ciggJ3NyYycsICcvL3ZpZXcudnphYXIuY29tLycgKyB2aWRlby5pZCArICcvcGxheWVyP2F1dG9wbGF5PXRydWUnICk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZnJhbWUgPSAkKGh0bWwpLndyYXAoICc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLWZyYW1lXCIgLz4nICkuaW5zZXJ0QWZ0ZXIoaXRlbS5maW5kKCcub3dsLXZpZGVvJykpO1xuXG4gICAgXHRcdHRoaXMuX3BsYXlpbmcgPSBpdGVtLmFkZENsYXNzKCdvd2wtdmlkZW8tcGxheWluZycpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDaGVja3Mgd2hldGhlciBhbiB2aWRlbyBpcyBjdXJyZW50bHkgaW4gZnVsbCBzY3JlZW4gbW9kZSBvciBub3QuXG4gICAgXHQgKiBAdG9kbyBCYWQgc3R5bGUgYmVjYXVzZSBsb29rcyBsaWtlIGEgcmVhZG9ubHkgbWV0aG9kIGJ1dCBjaGFuZ2VzIG1lbWJlcnMuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAgICBcdCAqL1xuICAgIFx0VmlkZW8ucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnQgfHwgZG9jdW1lbnQubW96RnVsbFNjcmVlbkVsZW1lbnQgfHxcbiAgICBcdFx0XHRcdGRvY3VtZW50LndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50O1xuXG4gICAgXHRcdHJldHVybiBlbGVtZW50ICYmICQoZWxlbWVudCkucGFyZW50KCkuaGFzQ2xhc3MoJ293bC12aWRlby1mcmFtZScpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxuICAgIFx0ICovXG4gICAgXHRWaWRlby5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgaGFuZGxlciwgcHJvcGVydHk7XG5cbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoJ2NsaWNrLm93bC52aWRlbycpO1xuXG4gICAgXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xuICAgIFx0XHRcdHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuX2hhbmRsZXJzW2hhbmRsZXJdKTtcbiAgICBcdFx0fVxuICAgIFx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XG4gICAgXHRcdFx0dHlwZW9mIHRoaXNbcHJvcGVydHldICE9ICdmdW5jdGlvbicgJiYgKHRoaXNbcHJvcGVydHldID0gbnVsbCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbyA9IFZpZGVvO1xuXG4gICAgfSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuICAgIChmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDcmVhdGVzIHRoZSBhbmltYXRlIHBsdWdpbi5cbiAgICBcdCAqIEBjbGFzcyBUaGUgTmF2aWdhdGlvbiBQbHVnaW5cbiAgICBcdCAqIEBwYXJhbSB7T3dsfSBzY29wZSAtIFRoZSBPd2wgQ2Fyb3VzZWxcbiAgICBcdCAqL1xuICAgIFx0dmFyIEFuaW1hdGUgPSBmdW5jdGlvbihzY29wZSkge1xuICAgIFx0XHR0aGlzLmNvcmUgPSBzY29wZTtcbiAgICBcdFx0dGhpcy5jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQW5pbWF0ZS5EZWZhdWx0cywgdGhpcy5jb3JlLm9wdGlvbnMpO1xuICAgIFx0XHR0aGlzLnN3YXBwaW5nID0gdHJ1ZTtcbiAgICBcdFx0dGhpcy5wcmV2aW91cyA9IHVuZGVmaW5lZDtcbiAgICBcdFx0dGhpcy5uZXh0ID0gdW5kZWZpbmVkO1xuXG4gICAgXHRcdHRoaXMuaGFuZGxlcnMgPSB7XG4gICAgXHRcdFx0J2NoYW5nZS5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiBlLnByb3BlcnR5Lm5hbWUgPT0gJ3Bvc2l0aW9uJykge1xuICAgIFx0XHRcdFx0XHR0aGlzLnByZXZpb3VzID0gdGhpcy5jb3JlLmN1cnJlbnQoKTtcbiAgICBcdFx0XHRcdFx0dGhpcy5uZXh0ID0gZS5wcm9wZXJ0eS52YWx1ZTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnZHJhZy5vd2wuY2Fyb3VzZWwgZHJhZ2dlZC5vd2wuY2Fyb3VzZWwgdHJhbnNsYXRlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLnN3YXBwaW5nID0gZS50eXBlID09ICd0cmFuc2xhdGVkJztcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQndHJhbnNsYXRlLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIHRoaXMuc3dhcHBpbmcgJiYgKHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVPdXQgfHwgdGhpcy5jb3JlLm9wdGlvbnMuYW5pbWF0ZUluKSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLnN3YXAoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKVxuICAgIFx0XHR9O1xuXG4gICAgXHRcdHRoaXMuY29yZS4kZWxlbWVudC5vbih0aGlzLmhhbmRsZXJzKTtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRGVmYXVsdCBvcHRpb25zLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRBbmltYXRlLkRlZmF1bHRzID0ge1xuICAgIFx0XHRhbmltYXRlT3V0OiBmYWxzZSxcbiAgICBcdFx0YW5pbWF0ZUluOiBmYWxzZVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBUb2dnbGVzIHRoZSBhbmltYXRpb24gY2xhc3NlcyB3aGVuZXZlciBhbiB0cmFuc2xhdGlvbnMgc3RhcnRzLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHJldHVybnMge0Jvb2xlYW58dW5kZWZpbmVkfVxuICAgIFx0ICovXG4gICAgXHRBbmltYXRlLnByb3RvdHlwZS5zd2FwID0gZnVuY3Rpb24oKSB7XG5cbiAgICBcdFx0aWYgKHRoaXMuY29yZS5zZXR0aW5ncy5pdGVtcyAhPT0gMSkge1xuICAgIFx0XHRcdHJldHVybjtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmICghJC5zdXBwb3J0LmFuaW1hdGlvbiB8fCAhJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLmNvcmUuc3BlZWQoMCk7XG5cbiAgICBcdFx0dmFyIGxlZnQsXG4gICAgXHRcdFx0Y2xlYXIgPSAkLnByb3h5KHRoaXMuY2xlYXIsIHRoaXMpLFxuICAgIFx0XHRcdHByZXZpb3VzID0gdGhpcy5jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMucHJldmlvdXMpLFxuICAgIFx0XHRcdG5leHQgPSB0aGlzLmNvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEodGhpcy5uZXh0KSxcbiAgICBcdFx0XHRpbmNvbWluZyA9IHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlSW4sXG4gICAgXHRcdFx0b3V0Z29pbmcgPSB0aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZU91dDtcblxuICAgIFx0XHRpZiAodGhpcy5jb3JlLmN1cnJlbnQoKSA9PT0gdGhpcy5wcmV2aW91cykge1xuICAgIFx0XHRcdHJldHVybjtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmIChvdXRnb2luZykge1xuICAgIFx0XHRcdGxlZnQgPSB0aGlzLmNvcmUuY29vcmRpbmF0ZXModGhpcy5wcmV2aW91cykgLSB0aGlzLmNvcmUuY29vcmRpbmF0ZXModGhpcy5uZXh0KTtcbiAgICBcdFx0XHRwcmV2aW91cy5vbmUoJC5zdXBwb3J0LmFuaW1hdGlvbi5lbmQsIGNsZWFyKVxuICAgIFx0XHRcdFx0LmNzcyggeyAnbGVmdCc6IGxlZnQgKyAncHgnIH0gKVxuICAgIFx0XHRcdFx0LmFkZENsYXNzKCdhbmltYXRlZCBvd2wtYW5pbWF0ZWQtb3V0JylcbiAgICBcdFx0XHRcdC5hZGRDbGFzcyhvdXRnb2luZyk7XG4gICAgXHRcdH1cblxuICAgIFx0XHRpZiAoaW5jb21pbmcpIHtcbiAgICBcdFx0XHRuZXh0Lm9uZSgkLnN1cHBvcnQuYW5pbWF0aW9uLmVuZCwgY2xlYXIpXG4gICAgXHRcdFx0XHQuYWRkQ2xhc3MoJ2FuaW1hdGVkIG93bC1hbmltYXRlZC1pbicpXG4gICAgXHRcdFx0XHQuYWRkQ2xhc3MoaW5jb21pbmcpO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHRBbmltYXRlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0JChlLnRhcmdldCkuY3NzKCB7ICdsZWZ0JzogJycgfSApXG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKCdhbmltYXRlZCBvd2wtYW5pbWF0ZWQtb3V0IG93bC1hbmltYXRlZC1pbicpXG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlSW4pXG4gICAgXHRcdFx0LnJlbW92ZUNsYXNzKHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlT3V0KTtcbiAgICBcdFx0dGhpcy5jb3JlLm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRBbmltYXRlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBoYW5kbGVyLCBwcm9wZXJ0eTtcblxuICAgIFx0XHRmb3IgKGhhbmRsZXIgaW4gdGhpcy5oYW5kbGVycykge1xuICAgIFx0XHRcdHRoaXMuY29yZS4kZWxlbWVudC5vZmYoaGFuZGxlciwgdGhpcy5oYW5kbGVyc1toYW5kbGVyXSk7XG4gICAgXHRcdH1cbiAgICBcdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xuICAgIFx0XHRcdHR5cGVvZiB0aGlzW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nICYmICh0aGlzW3Byb3BlcnR5XSA9IG51bGwpO1xuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQkLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuQW5pbWF0ZSA9IEFuaW1hdGU7XG5cbiAgICB9KSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4gICAgKGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgXHQvKipcbiAgICBcdCAqIENyZWF0ZXMgdGhlIGF1dG9wbGF5IHBsdWdpbi5cbiAgICBcdCAqIEBjbGFzcyBUaGUgQXV0b3BsYXkgUGx1Z2luXG4gICAgXHQgKiBAcGFyYW0ge093bH0gc2NvcGUgLSBUaGUgT3dsIENhcm91c2VsXG4gICAgXHQgKi9cbiAgICBcdHZhciBBdXRvcGxheSA9IGZ1bmN0aW9uKGNhcm91c2VsKSB7XG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBSZWZlcmVuY2UgdG8gdGhlIGNvcmUuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge093bH1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2NvcmUgPSBjYXJvdXNlbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogVGhlIGF1dG9wbGF5IHRpbWVvdXQgaWQuXG4gICAgXHRcdCAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9jYWxsID0gbnVsbDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogRGVwZW5kaW5nIG9uIHRoZSBzdGF0ZSBvZiB0aGUgcGx1Z2luLCB0aGlzIHZhcmlhYmxlIGNvbnRhaW5zIGVpdGhlclxuICAgIFx0XHQgKiB0aGUgc3RhcnQgdGltZSBvZiB0aGUgdGltZXIgb3IgdGhlIGN1cnJlbnQgdGltZXIgdmFsdWUgaWYgaXQnc1xuICAgIFx0XHQgKiBwYXVzZWQuIFNpbmNlIHdlIHN0YXJ0IGluIGEgcGF1c2VkIHN0YXRlIHdlIGluaXRpYWxpemUgdGhlIHRpbWVyXG4gICAgXHRcdCAqIHZhbHVlLlxuICAgIFx0XHQgKiBAdHlwZSB7TnVtYmVyfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fdGltZSA9IDA7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFN0b3JlcyB0aGUgdGltZW91dCBjdXJyZW50bHkgdXNlZC5cbiAgICBcdFx0ICogQHR5cGUge051bWJlcn1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3RpbWVvdXQgPSAwO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBJbmRpY2F0ZXMgd2hlbmV2ZXIgdGhlIGF1dG9wbGF5IGlzIHBhdXNlZC5cbiAgICBcdFx0ICogQHR5cGUge0Jvb2xlYW59XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9wYXVzZWQgPSB0cnVlO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBBbGwgZXZlbnQgaGFuZGxlcnMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge09iamVjdH1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xuICAgIFx0XHRcdCdjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIGUucHJvcGVydHkubmFtZSA9PT0gJ3NldHRpbmdzJykge1xuICAgIFx0XHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheSkge1xuICAgIFx0XHRcdFx0XHRcdHRoaXMucGxheSgpO1xuICAgIFx0XHRcdFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdFx0XHRcdHRoaXMuc3RvcCgpO1xuICAgIFx0XHRcdFx0XHR9XG4gICAgXHRcdFx0XHR9IGVsc2UgaWYgKGUubmFtZXNwYWNlICYmIGUucHJvcGVydHkubmFtZSA9PT0gJ3Bvc2l0aW9uJyAmJiB0aGlzLl9wYXVzZWQpIHtcbiAgICBcdFx0XHRcdFx0Ly8gUmVzZXQgdGhlIHRpbWVyLiBUaGlzIGNvZGUgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHBvc2l0aW9uXG4gICAgXHRcdFx0XHRcdC8vIG9mIHRoZSBjYXJvdXNlbCB3YXMgY2hhbmdlZCB0aHJvdWdoIHVzZXIgaW50ZXJhY3Rpb24uXG4gICAgXHRcdFx0XHRcdHRoaXMuX3RpbWUgPSAwO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5KSB7XG4gICAgXHRcdFx0XHRcdHRoaXMucGxheSgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdwbGF5Lm93bC5hdXRvcGxheSc6ICQucHJveHkoZnVuY3Rpb24oZSwgdCwgcykge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMucGxheSh0LCBzKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnc3RvcC5vd2wuYXV0b3BsYXknOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLnN0b3AoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQnbW91c2VvdmVyLm93bC5hdXRvcGxheSc6ICQucHJveHkoZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UgJiYgdGhpcy5fY29yZS5pcygncm90YXRpbmcnKSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLnBhdXNlKCk7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0fSwgdGhpcyksXG4gICAgXHRcdFx0J21vdXNlbGVhdmUub3dsLmF1dG9wbGF5JzogJC5wcm94eShmdW5jdGlvbigpIHtcbiAgICBcdFx0XHRcdGlmICh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSAmJiB0aGlzLl9jb3JlLmlzKCdyb3RhdGluZycpKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMucGxheSgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCd0b3VjaHN0YXJ0Lm93bC5jb3JlJzogJC5wcm94eShmdW5jdGlvbigpIHtcbiAgICBcdFx0XHRcdGlmICh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSAmJiB0aGlzLl9jb3JlLmlzKCdyb3RhdGluZycpKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMucGF1c2UoKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKSxcbiAgICBcdFx0XHQndG91Y2hlbmQub3dsLmNvcmUnOiAkLnByb3h5KGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdFx0aWYgKHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlIb3ZlclBhdXNlKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMucGxheSgpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpXG4gICAgXHRcdH07XG5cbiAgICBcdFx0Ly8gcmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcbiAgICBcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XG5cbiAgICBcdFx0Ly8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICAgIFx0XHR0aGlzLl9jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQXV0b3BsYXkuRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0QXV0b3BsYXkuRGVmYXVsdHMgPSB7XG4gICAgXHRcdGF1dG9wbGF5OiBmYWxzZSxcbiAgICBcdFx0YXV0b3BsYXlUaW1lb3V0OiA1MDAwLFxuICAgIFx0XHRhdXRvcGxheUhvdmVyUGF1c2U6IGZhbHNlLFxuICAgIFx0XHRhdXRvcGxheVNwZWVkOiBmYWxzZVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBUcmFuc2l0aW9uIHRvIHRoZSBuZXh0IHNsaWRlIGFuZCBzZXQgYSB0aW1lb3V0IGZvciB0aGUgbmV4dCB0cmFuc2l0aW9uLlxuICAgIFx0ICogQHByaXZhdGVcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbc3BlZWRdIC0gVGhlIGFuaW1hdGlvbiBzcGVlZCBmb3IgdGhlIGFuaW1hdGlvbnMuXG4gICAgXHQgKi9cbiAgICBcdEF1dG9wbGF5LnByb3RvdHlwZS5fbmV4dCA9IGZ1bmN0aW9uKHNwZWVkKSB7XG4gICAgXHRcdHRoaXMuX2NhbGwgPSB3aW5kb3cuc2V0VGltZW91dChcbiAgICBcdFx0XHQkLnByb3h5KHRoaXMuX25leHQsIHRoaXMsIHNwZWVkKSxcbiAgICBcdFx0XHR0aGlzLl90aW1lb3V0ICogKE1hdGgucm91bmQodGhpcy5yZWFkKCkgLyB0aGlzLl90aW1lb3V0KSArIDEpIC0gdGhpcy5yZWFkKClcbiAgICBcdFx0KTtcblxuICAgIFx0XHRpZiAodGhpcy5fY29yZS5pcygnaW50ZXJhY3RpbmcnKSB8fCBkb2N1bWVudC5oaWRkZW4pIHtcbiAgICBcdFx0XHRyZXR1cm47XG4gICAgXHRcdH1cbiAgICBcdFx0dGhpcy5fY29yZS5uZXh0KHNwZWVkIHx8IHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlTcGVlZCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFJlYWRzIHRoZSBjdXJyZW50IHRpbWVyIHZhbHVlIHdoZW4gdGhlIHRpbWVyIGlzIHBsYXlpbmcuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKi9cbiAgICBcdEF1dG9wbGF5LnByb3RvdHlwZS5yZWFkID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRoaXMuX3RpbWU7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFN0YXJ0cyB0aGUgYXV0b3BsYXkuXG4gICAgXHQgKiBAcHVibGljXG4gICAgXHQgKiBAcGFyYW0ge051bWJlcn0gW3RpbWVvdXRdIC0gVGhlIGludGVydmFsIGJlZm9yZSB0aGUgbmV4dCBhbmltYXRpb24gc3RhcnRzLlxuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgYW5pbWF0aW9uIHNwZWVkIGZvciB0aGUgYW5pbWF0aW9ucy5cbiAgICBcdCAqL1xuICAgIFx0QXV0b3BsYXkucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbih0aW1lb3V0LCBzcGVlZCkge1xuICAgIFx0XHR2YXIgZWxhcHNlZDtcblxuICAgIFx0XHRpZiAoIXRoaXMuX2NvcmUuaXMoJ3JvdGF0aW5nJykpIHtcbiAgICBcdFx0XHR0aGlzLl9jb3JlLmVudGVyKCdyb3RhdGluZycpO1xuICAgIFx0XHR9XG5cbiAgICBcdFx0dGltZW91dCA9IHRpbWVvdXQgfHwgdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheVRpbWVvdXQ7XG5cbiAgICBcdFx0Ly8gQ2FsY3VsYXRlIHRoZSBlbGFwc2VkIHRpbWUgc2luY2UgdGhlIGxhc3QgdHJhbnNpdGlvbi4gSWYgdGhlIGNhcm91c2VsXG4gICAgXHRcdC8vIHdhc24ndCBwbGF5aW5nIHRoaXMgY2FsY3VsYXRpb24gd2lsbCB5aWVsZCB6ZXJvLlxuICAgIFx0XHRlbGFwc2VkID0gTWF0aC5taW4odGhpcy5fdGltZSAlICh0aGlzLl90aW1lb3V0IHx8IHRpbWVvdXQpLCB0aW1lb3V0KTtcblxuICAgIFx0XHRpZiAodGhpcy5fcGF1c2VkKSB7XG4gICAgXHRcdFx0Ly8gU3RhcnQgdGhlIGNsb2NrLlxuICAgIFx0XHRcdHRoaXMuX3RpbWUgPSB0aGlzLnJlYWQoKTtcbiAgICBcdFx0XHR0aGlzLl9wYXVzZWQgPSBmYWxzZTtcbiAgICBcdFx0fSBlbHNlIHtcbiAgICBcdFx0XHQvLyBDbGVhciB0aGUgYWN0aXZlIHRpbWVvdXQgdG8gYWxsb3cgcmVwbGFjZW1lbnQuXG4gICAgXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCh0aGlzLl9jYWxsKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC8vIEFkanVzdCB0aGUgb3JpZ2luIG9mIHRoZSB0aW1lciB0byBtYXRjaCB0aGUgbmV3IHRpbWVvdXQgdmFsdWUuXG4gICAgXHRcdHRoaXMuX3RpbWUgKz0gdGhpcy5yZWFkKCkgJSB0aW1lb3V0IC0gZWxhcHNlZDtcblxuICAgIFx0XHR0aGlzLl90aW1lb3V0ID0gdGltZW91dDtcbiAgICBcdFx0dGhpcy5fY2FsbCA9IHdpbmRvdy5zZXRUaW1lb3V0KCQucHJveHkodGhpcy5fbmV4dCwgdGhpcywgc3BlZWQpLCB0aW1lb3V0IC0gZWxhcHNlZCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFN0b3BzIHRoZSBhdXRvcGxheS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0QXV0b3BsYXkucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0aWYgKHRoaXMuX2NvcmUuaXMoJ3JvdGF0aW5nJykpIHtcbiAgICBcdFx0XHQvLyBSZXNldCB0aGUgY2xvY2suXG4gICAgXHRcdFx0dGhpcy5fdGltZSA9IDA7XG4gICAgXHRcdFx0dGhpcy5fcGF1c2VkID0gdHJ1ZTtcblxuICAgIFx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fY2FsbCk7XG4gICAgXHRcdFx0dGhpcy5fY29yZS5sZWF2ZSgncm90YXRpbmcnKTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBQYXVzZXMgdGhlIGF1dG9wbGF5LlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRBdXRvcGxheS5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0aWYgKHRoaXMuX2NvcmUuaXMoJ3JvdGF0aW5nJykgJiYgIXRoaXMuX3BhdXNlZCkge1xuICAgIFx0XHRcdC8vIFBhdXNlIHRoZSBjbG9jay5cbiAgICBcdFx0XHR0aGlzLl90aW1lID0gdGhpcy5yZWFkKCk7XG4gICAgXHRcdFx0dGhpcy5fcGF1c2VkID0gdHJ1ZTtcblxuICAgIFx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fY2FsbCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRGVzdHJveXMgdGhlIHBsdWdpbi5cbiAgICBcdCAqL1xuICAgIFx0QXV0b3BsYXkucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dmFyIGhhbmRsZXIsIHByb3BlcnR5O1xuXG4gICAgXHRcdHRoaXMuc3RvcCgpO1xuXG4gICAgXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xuICAgIFx0XHRcdHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuX2hhbmRsZXJzW2hhbmRsZXJdKTtcbiAgICBcdFx0fVxuICAgIFx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XG4gICAgXHRcdFx0dHlwZW9mIHRoaXNbcHJvcGVydHldICE9ICdmdW5jdGlvbicgJiYgKHRoaXNbcHJvcGVydHldID0gbnVsbCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5hdXRvcGxheSA9IEF1dG9wbGF5O1xuXG4gICAgfSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuICAgIChmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBDcmVhdGVzIHRoZSBuYXZpZ2F0aW9uIHBsdWdpbi5cbiAgICBcdCAqIEBjbGFzcyBUaGUgTmF2aWdhdGlvbiBQbHVnaW5cbiAgICBcdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWwuXG4gICAgXHQgKi9cbiAgICBcdHZhciBOYXZpZ2F0aW9uID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T3dsfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgcGx1Z2luIGlzIGluaXRpYWxpemVkIG9yIG5vdC5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFRoZSBjdXJyZW50IHBhZ2luZyBpbmRleGVzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtBcnJheX1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX3BhZ2VzID0gW107XG5cbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIEFsbCBET00gZWxlbWVudHMgb2YgdGhlIHVzZXIgaW50ZXJmYWNlLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtPYmplY3R9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9jb250cm9scyA9IHt9O1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBNYXJrdXAgZm9yIGFuIGluZGljYXRvci5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7QXJyYXkuPFN0cmluZz59XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl90ZW1wbGF0ZXMgPSBbXTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogVGhlIGNhcm91c2VsIGVsZW1lbnQuXG4gICAgXHRcdCAqIEB0eXBlIHtqUXVlcnl9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLiRlbGVtZW50ID0gdGhpcy5fY29yZS4kZWxlbWVudDtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogT3ZlcnJpZGRlbiBtZXRob2RzIG9mIHRoZSBjYXJvdXNlbC5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T2JqZWN0fVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fb3ZlcnJpZGVzID0ge1xuICAgIFx0XHRcdG5leHQ6IHRoaXMuX2NvcmUubmV4dCxcbiAgICBcdFx0XHRwcmV2OiB0aGlzLl9jb3JlLnByZXYsXG4gICAgXHRcdFx0dG86IHRoaXMuX2NvcmUudG9cbiAgICBcdFx0fTtcblxuICAgIFx0XHQvKipcbiAgICBcdFx0ICogQWxsIGV2ZW50IGhhbmRsZXJzLlxuICAgIFx0XHQgKiBAcHJvdGVjdGVkXG4gICAgXHRcdCAqIEB0eXBlIHtPYmplY3R9XG4gICAgXHRcdCAqL1xuICAgIFx0XHR0aGlzLl9oYW5kbGVycyA9IHtcbiAgICBcdFx0XHQncHJlcGFyZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLl90ZW1wbGF0ZXMucHVzaCgnPGRpdiBjbGFzcz1cIicgKyB0aGlzLl9jb3JlLnNldHRpbmdzLmRvdENsYXNzICsgJ1wiPicgK1xuICAgIFx0XHRcdFx0XHRcdCQoZS5jb250ZW50KS5maW5kKCdbZGF0YS1kb3RdJykuYWRkQmFjaygnW2RhdGEtZG90XScpLmF0dHIoJ2RhdGEtZG90JykgKyAnPC9kaXY+Jyk7XG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0fSwgdGhpcyksXG4gICAgXHRcdFx0J2FkZGVkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEpIHtcbiAgICBcdFx0XHRcdFx0dGhpcy5fdGVtcGxhdGVzLnNwbGljZShlLnBvc2l0aW9uLCAwLCB0aGlzLl90ZW1wbGF0ZXMucG9wKCkpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdyZW1vdmUub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSkge1xuICAgIFx0XHRcdFx0XHR0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKGUucG9zaXRpb24sIDEpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIGUucHJvcGVydHkubmFtZSA9PSAncG9zaXRpb24nKSB7XG4gICAgXHRcdFx0XHRcdHRoaXMuZHJhdygpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiAhdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICBcdFx0XHRcdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdpbml0aWFsaXplJywgbnVsbCwgJ25hdmlnYXRpb24nKTtcbiAgICBcdFx0XHRcdFx0dGhpcy5pbml0aWFsaXplKCk7XG4gICAgXHRcdFx0XHRcdHRoaXMudXBkYXRlKCk7XG4gICAgXHRcdFx0XHRcdHRoaXMuZHJhdygpO1xuICAgIFx0XHRcdFx0XHR0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgXHRcdFx0XHRcdHRoaXMuX2NvcmUudHJpZ2dlcignaW5pdGlhbGl6ZWQnLCBudWxsLCAnbmF2aWdhdGlvbicpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdyZWZyZXNoZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0XHRpZiAoZS5uYW1lc3BhY2UgJiYgdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICBcdFx0XHRcdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdyZWZyZXNoJywgbnVsbCwgJ25hdmlnYXRpb24nKTtcbiAgICBcdFx0XHRcdFx0dGhpcy51cGRhdGUoKTtcbiAgICBcdFx0XHRcdFx0dGhpcy5kcmF3KCk7XG4gICAgXHRcdFx0XHRcdHRoaXMuX2NvcmUudHJpZ2dlcigncmVmcmVzaGVkJywgbnVsbCwgJ25hdmlnYXRpb24nKTtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKVxuICAgIFx0XHR9O1xuXG4gICAgXHRcdC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcbiAgICBcdFx0dGhpcy5fY29yZS5vcHRpb25zID0gJC5leHRlbmQoe30sIE5hdmlnYXRpb24uRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XG5cbiAgICBcdFx0Ly8gcmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcbiAgICBcdFx0dGhpcy4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEB0b2RvIFJlbmFtZSBgc2xpZGVCeWAgdG8gYG5hdkJ5YFxuICAgIFx0ICovXG4gICAgXHROYXZpZ2F0aW9uLkRlZmF1bHRzID0ge1xuICAgIFx0XHRuYXY6IGZhbHNlLFxuICAgIFx0XHRuYXZUZXh0OiBbXG4gICAgXHRcdFx0JzxzcGFuIGFyaWEtbGFiZWw9XCInICsgJ1ByZXZpb3VzJyArICdcIj4mI3gyMDM5Ozwvc3Bhbj4nLFxuICAgIFx0XHRcdCc8c3BhbiBhcmlhLWxhYmVsPVwiJyArICdOZXh0JyArICdcIj4mI3gyMDNhOzwvc3Bhbj4nXG4gICAgXHRcdF0sXG4gICAgXHRcdG5hdlNwZWVkOiBmYWxzZSxcbiAgICBcdFx0bmF2RWxlbWVudDogJ2J1dHRvbiB0eXBlPVwiYnV0dG9uXCIgcm9sZT1cInByZXNlbnRhdGlvblwiJyxcbiAgICBcdFx0bmF2Q29udGFpbmVyOiBmYWxzZSxcbiAgICBcdFx0bmF2Q29udGFpbmVyQ2xhc3M6ICdvd2wtbmF2JyxcbiAgICBcdFx0bmF2Q2xhc3M6IFtcbiAgICBcdFx0XHQnb3dsLXByZXYnLFxuICAgIFx0XHRcdCdvd2wtbmV4dCdcbiAgICBcdFx0XSxcbiAgICBcdFx0c2xpZGVCeTogMSxcbiAgICBcdFx0ZG90Q2xhc3M6ICdvd2wtZG90JyxcbiAgICBcdFx0ZG90c0NsYXNzOiAnb3dsLWRvdHMnLFxuICAgIFx0XHRkb3RzOiB0cnVlLFxuICAgIFx0XHRkb3RzRWFjaDogZmFsc2UsXG4gICAgXHRcdGRvdHNEYXRhOiBmYWxzZSxcbiAgICBcdFx0ZG90c1NwZWVkOiBmYWxzZSxcbiAgICBcdFx0ZG90c0NvbnRhaW5lcjogZmFsc2VcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogSW5pdGlhbGl6ZXMgdGhlIGxheW91dCBvZiB0aGUgcGx1Z2luIGFuZCBleHRlbmRzIHRoZSBjYXJvdXNlbC5cbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqL1xuICAgIFx0TmF2aWdhdGlvbi5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgb3ZlcnJpZGUsXG4gICAgXHRcdFx0c2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzO1xuXG4gICAgXHRcdC8vIGNyZWF0ZSBET00gc3RydWN0dXJlIGZvciByZWxhdGl2ZSBuYXZpZ2F0aW9uXG4gICAgXHRcdHRoaXMuX2NvbnRyb2xzLiRyZWxhdGl2ZSA9IChzZXR0aW5ncy5uYXZDb250YWluZXIgPyAkKHNldHRpbmdzLm5hdkNvbnRhaW5lcilcbiAgICBcdFx0XHQ6ICQoJzxkaXY+JykuYWRkQ2xhc3Moc2V0dGluZ3MubmF2Q29udGFpbmVyQ2xhc3MpLmFwcGVuZFRvKHRoaXMuJGVsZW1lbnQpKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcblxuICAgIFx0XHR0aGlzLl9jb250cm9scy4kcHJldmlvdXMgPSAkKCc8JyArIHNldHRpbmdzLm5hdkVsZW1lbnQgKyAnPicpXG4gICAgXHRcdFx0LmFkZENsYXNzKHNldHRpbmdzLm5hdkNsYXNzWzBdKVxuICAgIFx0XHRcdC5odG1sKHNldHRpbmdzLm5hdlRleHRbMF0pXG4gICAgXHRcdFx0LnByZXBlbmRUbyh0aGlzLl9jb250cm9scy4kcmVsYXRpdmUpXG4gICAgXHRcdFx0Lm9uKCdjbGljaycsICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0dGhpcy5wcmV2KHNldHRpbmdzLm5hdlNwZWVkKTtcbiAgICBcdFx0XHR9LCB0aGlzKSk7XG4gICAgXHRcdHRoaXMuX2NvbnRyb2xzLiRuZXh0ID0gJCgnPCcgKyBzZXR0aW5ncy5uYXZFbGVtZW50ICsgJz4nKVxuICAgIFx0XHRcdC5hZGRDbGFzcyhzZXR0aW5ncy5uYXZDbGFzc1sxXSlcbiAgICBcdFx0XHQuaHRtbChzZXR0aW5ncy5uYXZUZXh0WzFdKVxuICAgIFx0XHRcdC5hcHBlbmRUbyh0aGlzLl9jb250cm9scy4kcmVsYXRpdmUpXG4gICAgXHRcdFx0Lm9uKCdjbGljaycsICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0dGhpcy5uZXh0KHNldHRpbmdzLm5hdlNwZWVkKTtcbiAgICBcdFx0XHR9LCB0aGlzKSk7XG5cbiAgICBcdFx0Ly8gY3JlYXRlIERPTSBzdHJ1Y3R1cmUgZm9yIGFic29sdXRlIG5hdmlnYXRpb25cbiAgICBcdFx0aWYgKCFzZXR0aW5ncy5kb3RzRGF0YSkge1xuICAgIFx0XHRcdHRoaXMuX3RlbXBsYXRlcyA9IFsgJCgnPGJ1dHRvbiByb2xlPVwiYnV0dG9uXCI+JylcbiAgICBcdFx0XHRcdC5hZGRDbGFzcyhzZXR0aW5ncy5kb3RDbGFzcylcbiAgICBcdFx0XHRcdC5hcHBlbmQoJCgnPHNwYW4+JykpXG4gICAgXHRcdFx0XHQucHJvcCgnb3V0ZXJIVE1MJykgXTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZSA9IChzZXR0aW5ncy5kb3RzQ29udGFpbmVyID8gJChzZXR0aW5ncy5kb3RzQ29udGFpbmVyKVxuICAgIFx0XHRcdDogJCgnPGRpdj4nKS5hZGRDbGFzcyhzZXR0aW5ncy5kb3RzQ2xhc3MpLmFwcGVuZFRvKHRoaXMuJGVsZW1lbnQpKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcblxuICAgIFx0XHR0aGlzLl9jb250cm9scy4kYWJzb2x1dGUub24oJ2NsaWNrJywgJ2J1dHRvbicsICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdHZhciBpbmRleCA9ICQoZS50YXJnZXQpLnBhcmVudCgpLmlzKHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZSlcbiAgICBcdFx0XHRcdD8gJChlLnRhcmdldCkuaW5kZXgoKSA6ICQoZS50YXJnZXQpLnBhcmVudCgpLmluZGV4KCk7XG5cbiAgICBcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBcdFx0XHR0aGlzLnRvKGluZGV4LCBzZXR0aW5ncy5kb3RzU3BlZWQpO1xuICAgIFx0XHR9LCB0aGlzKSk7XG5cbiAgICBcdFx0LyokZWwub24oJ2ZvY3VzaW4nLCBmdW5jdGlvbigpIHtcbiAgICBcdFx0XHQkKGRvY3VtZW50KS5vZmYoXCIuY2Fyb3VzZWxcIik7XG5cbiAgICBcdFx0XHQkKGRvY3VtZW50KS5vbigna2V5ZG93bi5jYXJvdXNlbCcsIGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmKGUua2V5Q29kZSA9PSAzNykge1xuICAgIFx0XHRcdFx0XHQkZWwudHJpZ2dlcigncHJldi5vd2wnKVxuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdFx0aWYoZS5rZXlDb2RlID09IDM5KSB7XG4gICAgXHRcdFx0XHRcdCRlbC50cmlnZ2VyKCduZXh0Lm93bCcpXG4gICAgXHRcdFx0XHR9XG4gICAgXHRcdFx0fSk7XG4gICAgXHRcdH0pOyovXG5cbiAgICBcdFx0Ly8gb3ZlcnJpZGUgcHVibGljIG1ldGhvZHMgb2YgdGhlIGNhcm91c2VsXG4gICAgXHRcdGZvciAob3ZlcnJpZGUgaW4gdGhpcy5fb3ZlcnJpZGVzKSB7XG4gICAgXHRcdFx0dGhpcy5fY29yZVtvdmVycmlkZV0gPSAkLnByb3h5KHRoaXNbb3ZlcnJpZGVdLCB0aGlzKTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICovXG4gICAgXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBoYW5kbGVyLCBjb250cm9sLCBwcm9wZXJ0eSwgb3ZlcnJpZGUsIHNldHRpbmdzO1xuICAgIFx0XHRzZXR0aW5ncyA9IHRoaXMuX2NvcmUuc2V0dGluZ3M7XG5cbiAgICBcdFx0Zm9yIChoYW5kbGVyIGluIHRoaXMuX2hhbmRsZXJzKSB7XG4gICAgXHRcdFx0dGhpcy4kZWxlbWVudC5vZmYoaGFuZGxlciwgdGhpcy5faGFuZGxlcnNbaGFuZGxlcl0pO1xuICAgIFx0XHR9XG4gICAgXHRcdGZvciAoY29udHJvbCBpbiB0aGlzLl9jb250cm9scykge1xuICAgIFx0XHRcdGlmIChjb250cm9sID09PSAnJHJlbGF0aXZlJyAmJiBzZXR0aW5ncy5uYXZDb250YWluZXIpIHtcbiAgICBcdFx0XHRcdHRoaXMuX2NvbnRyb2xzW2NvbnRyb2xdLmh0bWwoJycpO1xuICAgIFx0XHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0XHR0aGlzLl9jb250cm9sc1tjb250cm9sXS5yZW1vdmUoKTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH1cbiAgICBcdFx0Zm9yIChvdmVycmlkZSBpbiB0aGlzLm92ZXJpZGVzKSB7XG4gICAgXHRcdFx0dGhpcy5fY29yZVtvdmVycmlkZV0gPSB0aGlzLl9vdmVycmlkZXNbb3ZlcnJpZGVdO1xuICAgIFx0XHR9XG4gICAgXHRcdGZvciAocHJvcGVydHkgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIHtcbiAgICBcdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBVcGRhdGVzIHRoZSBpbnRlcm5hbCBzdGF0ZS5cbiAgICBcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdCAqL1xuICAgIFx0TmF2aWdhdGlvbi5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBpLCBqLCBrLFxuICAgIFx0XHRcdGxvd2VyID0gdGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGggLyAyLFxuICAgIFx0XHRcdHVwcGVyID0gbG93ZXIgKyB0aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoLFxuICAgIFx0XHRcdG1heGltdW0gPSB0aGlzLl9jb3JlLm1heGltdW0odHJ1ZSksXG4gICAgXHRcdFx0c2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzLFxuICAgIFx0XHRcdHNpemUgPSBzZXR0aW5ncy5jZW50ZXIgfHwgc2V0dGluZ3MuYXV0b1dpZHRoIHx8IHNldHRpbmdzLmRvdHNEYXRhXG4gICAgXHRcdFx0XHQ/IDEgOiBzZXR0aW5ncy5kb3RzRWFjaCB8fCBzZXR0aW5ncy5pdGVtcztcblxuICAgIFx0XHRpZiAoc2V0dGluZ3Muc2xpZGVCeSAhPT0gJ3BhZ2UnKSB7XG4gICAgXHRcdFx0c2V0dGluZ3Muc2xpZGVCeSA9IE1hdGgubWluKHNldHRpbmdzLnNsaWRlQnksIHNldHRpbmdzLml0ZW1zKTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdGlmIChzZXR0aW5ncy5kb3RzIHx8IHNldHRpbmdzLnNsaWRlQnkgPT0gJ3BhZ2UnKSB7XG4gICAgXHRcdFx0dGhpcy5fcGFnZXMgPSBbXTtcblxuICAgIFx0XHRcdGZvciAoaSA9IGxvd2VyLCBqID0gMCwgayA9IDA7IGkgPCB1cHBlcjsgaSsrKSB7XG4gICAgXHRcdFx0XHRpZiAoaiA+PSBzaXplIHx8IGogPT09IDApIHtcbiAgICBcdFx0XHRcdFx0dGhpcy5fcGFnZXMucHVzaCh7XG4gICAgXHRcdFx0XHRcdFx0c3RhcnQ6IE1hdGgubWluKG1heGltdW0sIGkgLSBsb3dlciksXG4gICAgXHRcdFx0XHRcdFx0ZW5kOiBpIC0gbG93ZXIgKyBzaXplIC0gMVxuICAgIFx0XHRcdFx0XHR9KTtcbiAgICBcdFx0XHRcdFx0aWYgKE1hdGgubWluKG1heGltdW0sIGkgLSBsb3dlcikgPT09IG1heGltdW0pIHtcbiAgICBcdFx0XHRcdFx0XHRicmVhaztcbiAgICBcdFx0XHRcdFx0fVxuICAgIFx0XHRcdFx0XHRqID0gMCwgKytrO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdFx0aiArPSB0aGlzLl9jb3JlLm1lcmdlcnModGhpcy5fY29yZS5yZWxhdGl2ZShpKSk7XG4gICAgXHRcdFx0fVxuICAgIFx0XHR9XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERyYXdzIHRoZSB1c2VyIGludGVyZmFjZS5cbiAgICBcdCAqIEB0b2RvIFRoZSBvcHRpb24gYGRvdHNEYXRhYCB3b250IHdvcmsuXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKi9cbiAgICBcdE5hdmlnYXRpb24ucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbigpIHtcbiAgICBcdFx0dmFyIGRpZmZlcmVuY2UsXG4gICAgXHRcdFx0c2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzLFxuICAgIFx0XHRcdGRpc2FibGVkID0gdGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aCA8PSBzZXR0aW5ncy5pdGVtcyxcbiAgICBcdFx0XHRpbmRleCA9IHRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpLFxuICAgIFx0XHRcdGxvb3AgPSBzZXR0aW5ncy5sb29wIHx8IHNldHRpbmdzLnJld2luZDtcblxuICAgIFx0XHR0aGlzLl9jb250cm9scy4kcmVsYXRpdmUudG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJywgIXNldHRpbmdzLm5hdiB8fCBkaXNhYmxlZCk7XG5cbiAgICBcdFx0aWYgKHNldHRpbmdzLm5hdikge1xuICAgIFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRwcmV2aW91cy50b2dnbGVDbGFzcygnZGlzYWJsZWQnLCAhbG9vcCAmJiBpbmRleCA8PSB0aGlzLl9jb3JlLm1pbmltdW0odHJ1ZSkpO1xuICAgIFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRuZXh0LnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcsICFsb29wICYmIGluZGV4ID49IHRoaXMuX2NvcmUubWF4aW11bSh0cnVlKSk7XG4gICAgXHRcdH1cblxuICAgIFx0XHR0aGlzLl9jb250cm9scy4kYWJzb2x1dGUudG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJywgIXNldHRpbmdzLmRvdHMgfHwgZGlzYWJsZWQpO1xuXG4gICAgXHRcdGlmIChzZXR0aW5ncy5kb3RzKSB7XG4gICAgXHRcdFx0ZGlmZmVyZW5jZSA9IHRoaXMuX3BhZ2VzLmxlbmd0aCAtIHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5jaGlsZHJlbigpLmxlbmd0aDtcblxuICAgIFx0XHRcdGlmIChzZXR0aW5ncy5kb3RzRGF0YSAmJiBkaWZmZXJlbmNlICE9PSAwKSB7XG4gICAgXHRcdFx0XHR0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuaHRtbCh0aGlzLl90ZW1wbGF0ZXMuam9pbignJykpO1xuICAgIFx0XHRcdH0gZWxzZSBpZiAoZGlmZmVyZW5jZSA+IDApIHtcbiAgICBcdFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5hcHBlbmQobmV3IEFycmF5KGRpZmZlcmVuY2UgKyAxKS5qb2luKHRoaXMuX3RlbXBsYXRlc1swXSkpO1xuICAgIFx0XHRcdH0gZWxzZSBpZiAoZGlmZmVyZW5jZSA8IDApIHtcbiAgICBcdFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5jaGlsZHJlbigpLnNsaWNlKGRpZmZlcmVuY2UpLnJlbW92ZSgpO1xuICAgIFx0XHRcdH1cblxuICAgIFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgIFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5jaGlsZHJlbigpLmVxKCQuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSwgdGhpcy5fcGFnZXMpKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogRXh0ZW5kcyBldmVudCBkYXRhLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnQgLSBUaGUgZXZlbnQgb2JqZWN0IHdoaWNoIGdldHMgdGhyb3duLlxuICAgIFx0ICovXG4gICAgXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5vblRyaWdnZXIgPSBmdW5jdGlvbihldmVudCkge1xuICAgIFx0XHR2YXIgc2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzO1xuXG4gICAgXHRcdGV2ZW50LnBhZ2UgPSB7XG4gICAgXHRcdFx0aW5kZXg6ICQuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSwgdGhpcy5fcGFnZXMpLFxuICAgIFx0XHRcdGNvdW50OiB0aGlzLl9wYWdlcy5sZW5ndGgsXG4gICAgXHRcdFx0c2l6ZTogc2V0dGluZ3MgJiYgKHNldHRpbmdzLmNlbnRlciB8fCBzZXR0aW5ncy5hdXRvV2lkdGggfHwgc2V0dGluZ3MuZG90c0RhdGFcbiAgICBcdFx0XHRcdD8gMSA6IHNldHRpbmdzLmRvdHNFYWNoIHx8IHNldHRpbmdzLml0ZW1zKVxuICAgIFx0XHR9O1xuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBHZXRzIHRoZSBjdXJyZW50IHBhZ2UgcG9zaXRpb24gb2YgdGhlIGNhcm91c2VsLlxuICAgIFx0ICogQHByb3RlY3RlZFxuICAgIFx0ICogQHJldHVybnMge051bWJlcn1cbiAgICBcdCAqL1xuICAgIFx0TmF2aWdhdGlvbi5wcm90b3R5cGUuY3VycmVudCA9IGZ1bmN0aW9uKCkge1xuICAgIFx0XHR2YXIgY3VycmVudCA9IHRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpO1xuICAgIFx0XHRyZXR1cm4gJC5ncmVwKHRoaXMuX3BhZ2VzLCAkLnByb3h5KGZ1bmN0aW9uKHBhZ2UsIGluZGV4KSB7XG4gICAgXHRcdFx0cmV0dXJuIHBhZ2Uuc3RhcnQgPD0gY3VycmVudCAmJiBwYWdlLmVuZCA+PSBjdXJyZW50O1xuICAgIFx0XHR9LCB0aGlzKSkucG9wKCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIEdldHMgdGhlIGN1cnJlbnQgc3VjY2Vzb3IvcHJlZGVjZXNzb3IgcG9zaXRpb24uXG4gICAgXHQgKiBAcHJvdGVjdGVkXG4gICAgXHQgKiBAcmV0dXJucyB7TnVtYmVyfVxuICAgIFx0ICovXG4gICAgXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5nZXRQb3NpdGlvbiA9IGZ1bmN0aW9uKHN1Y2Nlc3Nvcikge1xuICAgIFx0XHR2YXIgcG9zaXRpb24sIGxlbmd0aCxcbiAgICBcdFx0XHRzZXR0aW5ncyA9IHRoaXMuX2NvcmUuc2V0dGluZ3M7XG5cbiAgICBcdFx0aWYgKHNldHRpbmdzLnNsaWRlQnkgPT0gJ3BhZ2UnKSB7XG4gICAgXHRcdFx0cG9zaXRpb24gPSAkLmluQXJyYXkodGhpcy5jdXJyZW50KCksIHRoaXMuX3BhZ2VzKTtcbiAgICBcdFx0XHRsZW5ndGggPSB0aGlzLl9wYWdlcy5sZW5ndGg7XG4gICAgXHRcdFx0c3VjY2Vzc29yID8gKytwb3NpdGlvbiA6IC0tcG9zaXRpb247XG4gICAgXHRcdFx0cG9zaXRpb24gPSB0aGlzLl9wYWdlc1soKHBvc2l0aW9uICUgbGVuZ3RoKSArIGxlbmd0aCkgJSBsZW5ndGhdLnN0YXJ0O1xuICAgIFx0XHR9IGVsc2Uge1xuICAgIFx0XHRcdHBvc2l0aW9uID0gdGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSk7XG4gICAgXHRcdFx0bGVuZ3RoID0gdGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aDtcbiAgICBcdFx0XHRzdWNjZXNzb3IgPyBwb3NpdGlvbiArPSBzZXR0aW5ncy5zbGlkZUJ5IDogcG9zaXRpb24gLT0gc2V0dGluZ3Muc2xpZGVCeTtcbiAgICBcdFx0fVxuXG4gICAgXHRcdHJldHVybiBwb3NpdGlvbjtcbiAgICBcdH07XG5cbiAgICBcdC8qKlxuICAgIFx0ICogU2xpZGVzIHRvIHRoZSBuZXh0IGl0ZW0gb3IgcGFnZS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBbc3BlZWQ9ZmFsc2VdIC0gVGhlIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGZvciB0aGUgdHJhbnNpdGlvbi5cbiAgICBcdCAqL1xuICAgIFx0TmF2aWdhdGlvbi5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKHNwZWVkKSB7XG4gICAgXHRcdCQucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLCB0aGlzLl9jb3JlKSh0aGlzLmdldFBvc2l0aW9uKHRydWUpLCBzcGVlZCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFNsaWRlcyB0byB0aGUgcHJldmlvdXMgaXRlbSBvciBwYWdlLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZD1mYWxzZV0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxuICAgIFx0ICovXG4gICAgXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5wcmV2ID0gZnVuY3Rpb24oc3BlZWQpIHtcbiAgICBcdFx0JC5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHRoaXMuZ2V0UG9zaXRpb24oZmFsc2UpLCBzcGVlZCk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIFNsaWRlcyB0byB0aGUgc3BlY2lmaWVkIGl0ZW0gb3IgcGFnZS5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqIEBwYXJhbSB7TnVtYmVyfSBwb3NpdGlvbiAtIFRoZSBwb3NpdGlvbiBvZiB0aGUgaXRlbSBvciBwYWdlLlxuICAgIFx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxuICAgIFx0ICogQHBhcmFtIHtCb29sZWFufSBbc3RhbmRhcmQ9ZmFsc2VdIC0gV2hldGhlciB0byB1c2UgdGhlIHN0YW5kYXJkIGJlaGF2aW91ciBvciBub3QuXG4gICAgXHQgKi9cbiAgICBcdE5hdmlnYXRpb24ucHJvdG90eXBlLnRvID0gZnVuY3Rpb24ocG9zaXRpb24sIHNwZWVkLCBzdGFuZGFyZCkge1xuICAgIFx0XHR2YXIgbGVuZ3RoO1xuXG4gICAgXHRcdGlmICghc3RhbmRhcmQgJiYgdGhpcy5fcGFnZXMubGVuZ3RoKSB7XG4gICAgXHRcdFx0bGVuZ3RoID0gdGhpcy5fcGFnZXMubGVuZ3RoO1xuICAgIFx0XHRcdCQucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLCB0aGlzLl9jb3JlKSh0aGlzLl9wYWdlc1soKHBvc2l0aW9uICUgbGVuZ3RoKSArIGxlbmd0aCkgJSBsZW5ndGhdLnN0YXJ0LCBzcGVlZCk7XG4gICAgXHRcdH0gZWxzZSB7XG4gICAgXHRcdFx0JC5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHBvc2l0aW9uLCBzcGVlZCk7XG4gICAgXHRcdH1cbiAgICBcdH07XG5cbiAgICBcdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5OYXZpZ2F0aW9uID0gTmF2aWdhdGlvbjtcblxuICAgIH0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcbiAgICAoZnVuY3Rpb24oJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XG5cbiAgICBcdC8qKlxuICAgIFx0ICogQ3JlYXRlcyB0aGUgaGFzaCBwbHVnaW4uXG4gICAgXHQgKiBAY2xhc3MgVGhlIEhhc2ggUGx1Z2luXG4gICAgXHQgKiBAcGFyYW0ge093bH0gY2Fyb3VzZWwgLSBUaGUgT3dsIENhcm91c2VsXG4gICAgXHQgKi9cbiAgICBcdHZhciBIYXNoID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcbiAgICBcdFx0LyoqXG4gICAgXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cbiAgICBcdFx0ICogQHByb3RlY3RlZFxuICAgIFx0XHQgKiBAdHlwZSB7T3dsfVxuICAgIFx0XHQgKi9cbiAgICBcdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBIYXNoIGluZGV4IGZvciB0aGUgaXRlbXMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge09iamVjdH1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2hhc2hlcyA9IHt9O1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBUaGUgY2Fyb3VzZWwgZWxlbWVudC5cbiAgICBcdFx0ICogQHR5cGUge2pRdWVyeX1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuJGVsZW1lbnQgPSB0aGlzLl9jb3JlLiRlbGVtZW50O1xuXG4gICAgXHRcdC8qKlxuICAgIFx0XHQgKiBBbGwgZXZlbnQgaGFuZGxlcnMuXG4gICAgXHRcdCAqIEBwcm90ZWN0ZWRcbiAgICBcdFx0ICogQHR5cGUge09iamVjdH1cbiAgICBcdFx0ICovXG4gICAgXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xuICAgIFx0XHRcdCdpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLnN0YXJ0UG9zaXRpb24gPT09ICdVUkxIYXNoJykge1xuICAgIFx0XHRcdFx0XHQkKHdpbmRvdykudHJpZ2dlcignaGFzaGNoYW5nZS5vd2wubmF2aWdhdGlvbicpO1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdwcmVwYXJlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcbiAgICBcdFx0XHRcdGlmIChlLm5hbWVzcGFjZSkge1xuICAgIFx0XHRcdFx0XHR2YXIgaGFzaCA9ICQoZS5jb250ZW50KS5maW5kKCdbZGF0YS1oYXNoXScpLmFkZEJhY2soJ1tkYXRhLWhhc2hdJykuYXR0cignZGF0YS1oYXNoJyk7XG5cbiAgICBcdFx0XHRcdFx0aWYgKCFoYXNoKSB7XG4gICAgXHRcdFx0XHRcdFx0cmV0dXJuO1xuICAgIFx0XHRcdFx0XHR9XG5cbiAgICBcdFx0XHRcdFx0dGhpcy5faGFzaGVzW2hhc2hdID0gZS5jb250ZW50O1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH0sIHRoaXMpLFxuICAgIFx0XHRcdCdjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xuICAgIFx0XHRcdFx0aWYgKGUubmFtZXNwYWNlICYmIGUucHJvcGVydHkubmFtZSA9PT0gJ3Bvc2l0aW9uJykge1xuICAgIFx0XHRcdFx0XHR2YXIgY3VycmVudCA9IHRoaXMuX2NvcmUuaXRlbXModGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSkpLFxuICAgIFx0XHRcdFx0XHRcdGhhc2ggPSAkLm1hcCh0aGlzLl9oYXNoZXMsIGZ1bmN0aW9uKGl0ZW0sIGhhc2gpIHtcbiAgICBcdFx0XHRcdFx0XHRcdHJldHVybiBpdGVtID09PSBjdXJyZW50ID8gaGFzaCA6IG51bGw7XG4gICAgXHRcdFx0XHRcdFx0fSkuam9pbigpO1xuXG4gICAgXHRcdFx0XHRcdGlmICghaGFzaCB8fCB3aW5kb3cubG9jYXRpb24uaGFzaC5zbGljZSgxKSA9PT0gaGFzaCkge1xuICAgIFx0XHRcdFx0XHRcdHJldHVybjtcbiAgICBcdFx0XHRcdFx0fVxuXG4gICAgXHRcdFx0XHRcdHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gaGFzaDtcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LCB0aGlzKVxuICAgIFx0XHR9O1xuXG4gICAgXHRcdC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcbiAgICBcdFx0dGhpcy5fY29yZS5vcHRpb25zID0gJC5leHRlbmQoe30sIEhhc2guRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XG5cbiAgICBcdFx0Ly8gcmVnaXN0ZXIgdGhlIGV2ZW50IGhhbmRsZXJzXG4gICAgXHRcdHRoaXMuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpO1xuXG4gICAgXHRcdC8vIHJlZ2lzdGVyIGV2ZW50IGxpc3RlbmVyIGZvciBoYXNoIG5hdmlnYXRpb25cbiAgICBcdFx0JCh3aW5kb3cpLm9uKCdoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uJywgJC5wcm94eShmdW5jdGlvbihlKSB7XG4gICAgXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSksXG4gICAgXHRcdFx0XHRpdGVtcyA9IHRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCksXG4gICAgXHRcdFx0XHRwb3NpdGlvbiA9IHRoaXMuX2hhc2hlc1toYXNoXSAmJiBpdGVtcy5pbmRleCh0aGlzLl9oYXNoZXNbaGFzaF0pO1xuXG4gICAgXHRcdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQgfHwgcG9zaXRpb24gPT09IHRoaXMuX2NvcmUuY3VycmVudCgpKSB7XG4gICAgXHRcdFx0XHRyZXR1cm47XG4gICAgXHRcdFx0fVxuXG4gICAgXHRcdFx0dGhpcy5fY29yZS50byh0aGlzLl9jb3JlLnJlbGF0aXZlKHBvc2l0aW9uKSwgZmFsc2UsIHRydWUpO1xuICAgIFx0XHR9LCB0aGlzKSk7XG4gICAgXHR9O1xuXG4gICAgXHQvKipcbiAgICBcdCAqIERlZmF1bHQgb3B0aW9ucy5cbiAgICBcdCAqIEBwdWJsaWNcbiAgICBcdCAqL1xuICAgIFx0SGFzaC5EZWZhdWx0cyA9IHtcbiAgICBcdFx0VVJMaGFzaExpc3RlbmVyOiBmYWxzZVxuICAgIFx0fTtcblxuICAgIFx0LyoqXG4gICAgXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxuICAgIFx0ICogQHB1YmxpY1xuICAgIFx0ICovXG4gICAgXHRIYXNoLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgXHRcdHZhciBoYW5kbGVyLCBwcm9wZXJ0eTtcblxuICAgIFx0XHQkKHdpbmRvdykub2ZmKCdoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uJyk7XG5cbiAgICBcdFx0Zm9yIChoYW5kbGVyIGluIHRoaXMuX2hhbmRsZXJzKSB7XG4gICAgXHRcdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoaGFuZGxlciwgdGhpcy5faGFuZGxlcnNbaGFuZGxlcl0pO1xuICAgIFx0XHR9XG4gICAgXHRcdGZvciAocHJvcGVydHkgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIHtcbiAgICBcdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcbiAgICBcdFx0fVxuICAgIFx0fTtcblxuICAgIFx0JC5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLkhhc2ggPSBIYXNoO1xuXG4gICAgfSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuICAgIChmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAgIFx0dmFyIHN0eWxlID0gJCgnPHN1cHBvcnQ+JykuZ2V0KDApLnN0eWxlLFxuICAgIFx0XHRwcmVmaXhlcyA9ICdXZWJraXQgTW96IE8gbXMnLnNwbGl0KCcgJyksXG4gICAgXHRcdGV2ZW50cyA9IHtcbiAgICBcdFx0XHR0cmFuc2l0aW9uOiB7XG4gICAgXHRcdFx0XHRlbmQ6IHtcbiAgICBcdFx0XHRcdFx0V2Via2l0VHJhbnNpdGlvbjogJ3dlYmtpdFRyYW5zaXRpb25FbmQnLFxuICAgIFx0XHRcdFx0XHRNb3pUcmFuc2l0aW9uOiAndHJhbnNpdGlvbmVuZCcsXG4gICAgXHRcdFx0XHRcdE9UcmFuc2l0aW9uOiAnb1RyYW5zaXRpb25FbmQnLFxuICAgIFx0XHRcdFx0XHR0cmFuc2l0aW9uOiAndHJhbnNpdGlvbmVuZCdcbiAgICBcdFx0XHRcdH1cbiAgICBcdFx0XHR9LFxuICAgIFx0XHRcdGFuaW1hdGlvbjoge1xuICAgIFx0XHRcdFx0ZW5kOiB7XG4gICAgXHRcdFx0XHRcdFdlYmtpdEFuaW1hdGlvbjogJ3dlYmtpdEFuaW1hdGlvbkVuZCcsXG4gICAgXHRcdFx0XHRcdE1vekFuaW1hdGlvbjogJ2FuaW1hdGlvbmVuZCcsXG4gICAgXHRcdFx0XHRcdE9BbmltYXRpb246ICdvQW5pbWF0aW9uRW5kJyxcbiAgICBcdFx0XHRcdFx0YW5pbWF0aW9uOiAnYW5pbWF0aW9uZW5kJ1xuICAgIFx0XHRcdFx0fVxuICAgIFx0XHRcdH1cbiAgICBcdFx0fSxcbiAgICBcdFx0dGVzdHMgPSB7XG4gICAgXHRcdFx0Y3NzdHJhbnNmb3JtczogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gISF0ZXN0KCd0cmFuc2Zvcm0nKTtcbiAgICBcdFx0XHR9LFxuICAgIFx0XHRcdGNzc3RyYW5zZm9ybXMzZDogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gISF0ZXN0KCdwZXJzcGVjdGl2ZScpO1xuICAgIFx0XHRcdH0sXG4gICAgXHRcdFx0Y3NzdHJhbnNpdGlvbnM6IGZ1bmN0aW9uKCkge1xuICAgIFx0XHRcdFx0cmV0dXJuICEhdGVzdCgndHJhbnNpdGlvbicpO1xuICAgIFx0XHRcdH0sXG4gICAgXHRcdFx0Y3NzYW5pbWF0aW9uczogZnVuY3Rpb24oKSB7XG4gICAgXHRcdFx0XHRyZXR1cm4gISF0ZXN0KCdhbmltYXRpb24nKTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH07XG5cbiAgICBcdGZ1bmN0aW9uIHRlc3QocHJvcGVydHksIHByZWZpeGVkKSB7XG4gICAgXHRcdHZhciByZXN1bHQgPSBmYWxzZSxcbiAgICBcdFx0XHR1cHBlciA9IHByb3BlcnR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc2xpY2UoMSk7XG5cbiAgICBcdFx0JC5lYWNoKChwcm9wZXJ0eSArICcgJyArIHByZWZpeGVzLmpvaW4odXBwZXIgKyAnICcpICsgdXBwZXIpLnNwbGl0KCcgJyksIGZ1bmN0aW9uKGksIHByb3BlcnR5KSB7XG4gICAgXHRcdFx0aWYgKHN0eWxlW3Byb3BlcnR5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgXHRcdFx0XHRyZXN1bHQgPSBwcmVmaXhlZCA/IHByb3BlcnR5IDogdHJ1ZTtcbiAgICBcdFx0XHRcdHJldHVybiBmYWxzZTtcbiAgICBcdFx0XHR9XG4gICAgXHRcdH0pO1xuXG4gICAgXHRcdHJldHVybiByZXN1bHQ7XG4gICAgXHR9XG5cbiAgICBcdGZ1bmN0aW9uIHByZWZpeGVkKHByb3BlcnR5KSB7XG4gICAgXHRcdHJldHVybiB0ZXN0KHByb3BlcnR5LCB0cnVlKTtcbiAgICBcdH1cblxuICAgIFx0aWYgKHRlc3RzLmNzc3RyYW5zaXRpb25zKCkpIHtcbiAgICBcdFx0LyoganNoaW50IC1XMDUzICovXG4gICAgXHRcdCQuc3VwcG9ydC50cmFuc2l0aW9uID0gbmV3IFN0cmluZyhwcmVmaXhlZCgndHJhbnNpdGlvbicpKTtcbiAgICBcdFx0JC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kID0gZXZlbnRzLnRyYW5zaXRpb24uZW5kWyAkLnN1cHBvcnQudHJhbnNpdGlvbiBdO1xuICAgIFx0fVxuXG4gICAgXHRpZiAodGVzdHMuY3NzYW5pbWF0aW9ucygpKSB7XG4gICAgXHRcdC8qIGpzaGludCAtVzA1MyAqL1xuICAgIFx0XHQkLnN1cHBvcnQuYW5pbWF0aW9uID0gbmV3IFN0cmluZyhwcmVmaXhlZCgnYW5pbWF0aW9uJykpO1xuICAgIFx0XHQkLnN1cHBvcnQuYW5pbWF0aW9uLmVuZCA9IGV2ZW50cy5hbmltYXRpb24uZW5kWyAkLnN1cHBvcnQuYW5pbWF0aW9uIF07XG4gICAgXHR9XG5cbiAgICBcdGlmICh0ZXN0cy5jc3N0cmFuc2Zvcm1zKCkpIHtcbiAgICBcdFx0LyoganNoaW50IC1XMDUzICovXG4gICAgXHRcdCQuc3VwcG9ydC50cmFuc2Zvcm0gPSBuZXcgU3RyaW5nKHByZWZpeGVkKCd0cmFuc2Zvcm0nKSk7XG4gICAgXHRcdCQuc3VwcG9ydC50cmFuc2Zvcm0zZCA9IHRlc3RzLmNzc3RyYW5zZm9ybXMzZCgpO1xuICAgIFx0fVxuXG4gICAgfSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuXG4gICAgdmFyICQgPSB3aW5kb3cualF1ZXJ5O1xyXG4gICAgdmFyIFJlYWN0T3dsQ2Fyb3VzZWwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICAgICAgX19leHRlbmRzKFJlYWN0T3dsQ2Fyb3VzZWwsIF9zdXBlcik7XHJcbiAgICAgICAgZnVuY3Rpb24gUmVhY3RPd2xDYXJvdXNlbChwcm9wcykge1xyXG4gICAgICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcclxuICAgICAgICAgICAgX3RoaXMuY29udGFpbmVyUmVmID0gZnVuY3Rpb24gKGluc3QpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLmNvbnRhaW5lciA9IGluc3Q7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHZhciBfYSA9IGZpbHRlck9wdGlvbnMoX3RoaXMucHJvcHMpLCBvcHRpb25zID0gX2FbMF0sIHByb3BzV2l0aG91dE9wdGlvbnMgPSBfYVsxXTtcclxuICAgICAgICAgICAgX3RoaXMub3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICAgICAgICAgIF90aGlzLnByb3BzV2l0aG91dE9wdGlvbnMgPSBwcm9wc1dpdGhvdXRPcHRpb25zO1xyXG4gICAgICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbGUgPSAkKHRoaXMuY29udGFpbmVyKTtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGUoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmRlc3RvcnkoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIF9hID0gZmlsdGVyT3B0aW9ucyh0aGlzLnByb3BzKSwgb3B0aW9ucyA9IF9hWzBdLCBwcm9wc1dpdGhvdXRPcHRpb25zID0gX2FbMV07XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHNXaXRob3V0T3B0aW9ucyA9IHByb3BzV2l0aG91dE9wdGlvbnM7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBSZWFjdE93bENhcm91c2VsLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24gKHNwZWVkKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy4kZWxlKVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPd2xDYXJvdXNlbCBpcyBub3QgY3JlYXRlZCcpO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHNwZWVkID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlLnRyaWdnZXIoJ25leHQub3dsLmNhcm91c2VsJywgW3NwZWVkXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGUudHJpZ2dlcignbmV4dC5vd2wuY2Fyb3VzZWwnLCBzcGVlZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLnByZXYgPSBmdW5jdGlvbiAoc3BlZWQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLiRlbGUpXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ093bENhcm91c2VsIGlzIG5vdCBjcmVhdGVkJyk7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3BlZWQgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGUudHJpZ2dlcigncHJldi5vd2wuY2Fyb3VzZWwnLCBbc3BlZWRdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJGVsZS50cmlnZ2VyKCdwcmV2Lm93bC5jYXJvdXNlbCcsIHNwZWVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgUmVhY3RPd2xDYXJvdXNlbC5wcm90b3R5cGUudG8gPSBmdW5jdGlvbiAocG9zaXRpb24sIHNwZWVkKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy4kZWxlKVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPd2xDYXJvdXNlbCBpcyBub3QgY3JlYXRlZCcpO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHBvc2l0aW9uID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygc3BlZWQgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGUudHJpZ2dlcigndG8ub3dsLmNhcm91c2VsJywgW3Bvc2l0aW9uLCBzcGVlZF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlLnRyaWdnZXIoJ3RvLm93bC5jYXJvdXNlbCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBSZWFjdE93bENhcm91c2VsLnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuJGVsZSlcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignT3dsQ2Fyb3VzZWwgaXMgbm90IGNyZWF0ZWQnKTtcclxuICAgICAgICAgICAgdGhpcy4kZWxlLm93bENhcm91c2VsKG9wdGlvbnMgfHwgdGhpcy5vcHRpb25zKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLmRlc3RvcnkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy4kZWxlKVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPd2xDYXJvdXNlbCBpcyBub3QgY3JlYXRlZCcpO1xyXG4gICAgICAgICAgICB0aGlzLiRlbGUudHJpZ2dlcignZGVzdHJveS5vd2wuY2Fyb3VzZWwnKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIFJlYWN0T3dsQ2Fyb3VzZWwucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbiAodGltZW91dCwgc3BlZWQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLiRlbGUpXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ093bENhcm91c2VsIGlzIG5vdCBjcmVhdGVkJyk7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGltZW91dCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHNwZWVkID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZWxlLnRyaWdnZXIoJ3BsYXkub3dsLmF1dG9wbGF5JywgW3RpbWVvdXQsIHNwZWVkXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbGUudHJpZ2dlcigncGxheS5vd2wuYXV0b3BsYXknKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgUmVhY3RPd2xDYXJvdXNlbC5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLiRlbGUpXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ093bENhcm91c2VsIGlzIG5vdCBjcmVhdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuJGVsZS50cmlnZ2VyKCdzdG9wLm93bC5hdXRvcGxheScpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgUmVhY3RPd2xDYXJvdXNlbC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzV2l0aG91dE9wdGlvbnMsIGNsYXNzTmFtZSA9IF9hLmNsYXNzTmFtZSwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImNsYXNzTmFtZVwiXSk7XHJcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBfX2Fzc2lnbih7IGNsYXNzTmFtZTogXCJvd2wtY2Fyb3VzZWwgXCIgKyBjbGFzc05hbWUsIHJlZjogdGhpcy5jb250YWluZXJSZWYgfSwgcHJvcHMpKSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gUmVhY3RPd2xDYXJvdXNlbDtcclxuICAgIH0oUmVhY3QuQ29tcG9uZW50KSk7XHJcbiAgICB2YXIgT1BUSU9OUyA9IG5ldyBTZXQoW1xyXG4gICAgICAgICdpdGVtcycsXHJcbiAgICAgICAgJ21hcmdpbicsXHJcbiAgICAgICAgJ2xvb3AnLFxyXG4gICAgICAgICdjZW50ZXInLFxyXG4gICAgICAgICdtb3VzZURyYWcnLFxyXG4gICAgICAgICd0b3VjaERyYWcnLFxyXG4gICAgICAgICdwdWxsRHJhZycsXHJcbiAgICAgICAgJ2ZyZWVEcmFnJyxcclxuICAgICAgICAnc3RhZ2VQYWRkaW5nJyxcclxuICAgICAgICAnbWVyZ2UnLFxyXG4gICAgICAgICdtZXJnZUZpdCcsXHJcbiAgICAgICAgJ2F1dG9XaWR0aCcsXHJcbiAgICAgICAgJ3N0YXJ0UG9zaXRpb24nLFxyXG4gICAgICAgICdVUkxoYXNoTGlzdGVuZXInLFxyXG4gICAgICAgICduYXYnLFxyXG4gICAgICAgICdyZXdpbmQnLFxyXG4gICAgICAgICduYXZUZXh0JyxcclxuICAgICAgICAnbmF2RWxlbWVudCcsXHJcbiAgICAgICAgJ3NsaWRlQnknLFxyXG4gICAgICAgICdkb3RzJyxcclxuICAgICAgICAnZG90c0VhY2gnLFxyXG4gICAgICAgICdkb3REYXRhJyxcclxuICAgICAgICAnbGF6eUxvYWQnLFxyXG4gICAgICAgICdsYXp5Q29udGVudCcsXHJcbiAgICAgICAgJ2F1dG9wbGF5JyxcclxuICAgICAgICAnYXV0b3BsYXlUaW1lb3V0JyxcclxuICAgICAgICAnYXV0b3BsYXlIb3ZlclBhdXNlJyxcclxuICAgICAgICAnc21hcnRTcGVlZCcsXHJcbiAgICAgICAgJ2ZsdWlkU3BlZWQnLFxyXG4gICAgICAgICdhdXRvcGxheVNwZWVkJyxcclxuICAgICAgICAnbmF2U3BlZWQnLFxyXG4gICAgICAgICdkb3RzU3BlZWQnLFxyXG4gICAgICAgICdkcmFnRW5kU3BlZWQnLFxyXG4gICAgICAgICdjYWxsYmFja3MnLFxyXG4gICAgICAgICdyZXNwb25zaXZlJyxcclxuICAgICAgICAncmVzcG9uc2l2ZVJlZnJlc2hSYXRlJyxcclxuICAgICAgICAncmVzcG9uc2l2ZUJhc2VFbGVtZW50JyxcclxuICAgICAgICAndmlkZW8nLFxyXG4gICAgICAgICd2aWRlb0hlaWdodCcsXHJcbiAgICAgICAgJ3ZpZGVvV2lkdGgnLFxyXG4gICAgICAgICdhbmltYXRlT3V0JyxcclxuICAgICAgICAnYW5pbWF0ZUluJyxcclxuICAgICAgICAnZmFsbGJhY2tFYXNpbmcnLFxyXG4gICAgICAgICdpbmZvJyxcclxuICAgICAgICAnbmVzdGVkSXRlbVNlbGVjdG9yJyxcclxuICAgICAgICAnaXRlbUVsZW1lbnQnLFxyXG4gICAgICAgICdzdGFnZUVsZW1lbnQnLFxyXG4gICAgICAgICduYXZDb250YWluZXInLFxyXG4gICAgICAgICdkb3RzQ29udGFpbmVyJyxcclxuICAgICAgICAvLyAnQ0xBU1NFUydcclxuICAgICAgICAncmVmcmVzaENsYXNzJyxcclxuICAgICAgICAnbG9hZGluZ0NsYXNzJyxcclxuICAgICAgICAnbG9hZGVkQ2xhc3MnLFxyXG4gICAgICAgICdydGxDbGFzcycsXHJcbiAgICAgICAgJ2RyYWdDbGFzcycsXHJcbiAgICAgICAgJ2dyYWJDbGFzcycsXHJcbiAgICAgICAgJ3N0YWdlQ2xhc3MnLFxyXG4gICAgICAgICdzdGFnZU91dGVyQ2xhc3MnLFxyXG4gICAgICAgICduYXZDb250YWluZXJDbGFzcycsXHJcbiAgICAgICAgJ25hdkNsYXNzJyxcclxuICAgICAgICAnY29udHJvbHNDbGFzcycsXHJcbiAgICAgICAgJ2RvdENsYXNzJyxcclxuICAgICAgICAnZG90c0NsYXNzJyxcclxuICAgICAgICAnYXV0b0hlaWdodENsYXNzJyxcclxuICAgICAgICAncmVzcG9uc2l2ZUNsYXNzJyxcclxuICAgICAgICAvLyAnRVZFTlRTJ1xyXG4gICAgICAgICdvbkluaXRpYWxpemUnLFxyXG4gICAgICAgICdvbkluaXRpYWxpemVkJyxcclxuICAgICAgICAnb25SZXNpemUnLFxyXG4gICAgICAgICdvblJlc2l6ZWQnLFxyXG4gICAgICAgICdvblJlZnJlc2gnLFxyXG4gICAgICAgICdvblJlZnJlc2hlZCcsXHJcbiAgICAgICAgJ29uRHJhZycsXHJcbiAgICAgICAgJ29uRHJhZ2dlZCcsXHJcbiAgICAgICAgJ29uVHJhbnNsYXRlJyxcclxuICAgICAgICAnb25UcmFuc2xhdGVkJyxcclxuICAgICAgICAnb25DaGFuZ2UnLFxyXG4gICAgICAgICdvbkNoYW5nZWQnLFxyXG4gICAgICAgICdvbkxvYWRMYXp5JyxcclxuICAgICAgICAnb25Mb2FkZWRMYXp5JyxcclxuICAgICAgICAnb25TdG9wVmlkZW8nLFxyXG4gICAgICAgICdvblBsYXlWaWRlbycsXHJcbiAgICBdKTtcclxuICAgIGZ1bmN0aW9uIGZpbHRlck9wdGlvbnMoaXRlbSkge1xyXG4gICAgICAgIHZhciBvcHRpb25zID0ge307XHJcbiAgICAgICAgdmFyIHByb3BzV2l0aG91dE9wdGlvbnMgPSB7fTtcclxuICAgICAgICBPYmplY3Qua2V5cyhpdGVtKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgaWYgKE9QVElPTlMuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnNba2V5XSA9IGl0ZW1ba2V5XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHByb3BzV2l0aG91dE9wdGlvbnNba2V5XSA9IGl0ZW1ba2V5XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBbb3B0aW9ucywgcHJvcHNXaXRob3V0T3B0aW9uc107XHJcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3RPd2xDYXJvdXNlbDtcblxufSkpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./node_modules/react-owl-carousel/umd/OwlCarousel.js\n"));

/***/ })

}]);